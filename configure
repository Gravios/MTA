#! /bin/bash
# setup the MTA environment for a new user
#
#
# MTA assumes a specifec file structure for both data and code
#
# matlab code - expected location: /storage/$USER/code/matlab
# data dir    - expected location: /storage/$USER/data
# project dir - expected location: /storage/$USER/data/project
# 
# -t : matlab startup path, location of script: startup.m
# -r : matlab share path, location of the MTA toobox, where labbox and other dependencies reside
#         /storage/share/matlab/
# -u : username
# -s : storage root (path)
# -m : MTA code path (by default assumes the matlab share path)
# -d : Name of data directory
# -d : Name of project directory
#
# USER is your user name
#
# STORAGE is the location of your user DATA folder
#         e.g. /storage
#         NOT  /home
#
# example
#     configure -u gravio -s storage2 -t /storage/gravio/code/matlab
#     configure -u 
# 

USERNAME=''
STORAGE=''
MATLAB_SHARE_PATH=''
MATLAB_STARTUP_PATH=''
MTA_PATH=''
DATA_DIR=''

while getopts u:s:t:r:m:d:p: option ;
do
    case "${option}" 
    in
    u) USERNAME=${OPTARG};;
    s) STORAGE=${OPTARG};;
    t) MATLAB_STARTUP_PATH=${OPTARG};;    
    r) MATLAB_SHARE_PATH=${OPTARG};;
    m) MTA_PATH=${OPTARG};;
    d) DATA_DIR=${OPTARG};;
    p) PROJECT_DIR=${OPTARG};;
    esac
done


# DEFINE username
if [ -z "$USERNAME" ]; then
    USERNAME=`whoami`
fi

# DEFINE DATA_DIR
if [ -z "$PROJECT_DIR" ]; then
    PROJECT_DIR="data/project"
fi

# DEFINE username
if [ -z "$DATA_DIR" ]; then
    DATA_DIR="data"
fi

# DEFINE storage name
if [ -z "$STORAGE" ]; then
    if [ -d /storage/$USERNAME ]; then   
        STORAGE="storage"
    elif [ -d /storage2/$USERNAME ]; then
        STORAGE="storage2"
    fi
fi
   

# DEFINE matlab share path
if [ -z "$MATLAB_SHARE_PATH" ]; then
    MATLAB_SHARE_PATH="/storage/share/matlab"
fi

# DEFINE mta path
if [ -z "$MTA_PATH" ]; then
    #SOURCE="${BASH_SOURCE[0]}"
    #while [ -h "$SOURCE" ]; do
    #    # resolve $SOURCE until the file is no longer a symlink
    #    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    #    SOURCE="$(readlink "$SOURCE")"
    #    # if $SOURCE was a relative symlink, we need to resolve it relative to the
    #    # path where the symlink file was located
    #    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" 
    #done
    #MTA="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    #MTA="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    MTA_PATH="$MATLAB_SHARE_PATH/MTA"
fi



# COPY MTAstartup to user's matlab directory
cp "$MTA_PATH/config/MTAstartup.m" "$MATLAB_STARTUP_PATH/MTAstartup.m"



# APPEND MTAstartup to the end of user's matlab startup file
# ADD commands to startup.m to create paths to labbox
# RUN commands to startup.m to run MTAstartup.m
echo "addpath(genpath('$MATLAB_SHARE_PATH/labbox'));"       >> "$MATLAB_STARTUP_PATH/startup.m"
echo "rmpath( genpath('$MATLAB_SHARE_PATH/labbox/.git'));"  >> "$MATLAB_STARTUP_PATH/startup.m"
echo "global MTA_PATH;"                                     >> "$MATLAB_STARTUP_PATH/startup.m"
echo "MTA_PATH = getenv('MTA_PATH');"                       >> "$MATLAB_STARTUP_PATH/startup.m"
echo "addpath('$MTA_PATH/utilities');"                      >> "$MATLAB_STARTUP_PATH/startup.m"
echo "MTAstartup();"                                        >> "$MATLAB_STARTUP_PATH/startup.m"



# ADD environmental variables to aid MTAstartup and MTAconfiguration
echo "export MTA_PATH=$MTA_PATH"                                      >> "$HOME/.bashrc"
echo "export MTA_DATA_PATH=/$STORAGE/$USERNAME/$DATA_DIR/"            >> "$HOME/.bashrc"
echo "export MTA_PROJECT_PATH=/$STORAGE/$USERNAME/$PROJECT_DIR"       >> "$HOME/.bashrc"

source "$HOME/.bashrc"
