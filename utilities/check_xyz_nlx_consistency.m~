function [consistent] = check_xyz_nlx_consistency(Session)


%% Get total recording time for concatinated nlx recordings
adjEvt = LoadEvents([Session.spath.nlx Session.name '.all.evt']);

re = 'Starting Recording';
adjEvtStart = adjEvt.time(~cellfun(@isempty,regexp(adjEvt.description,re)));
adjEvtStart = adjEvtStart(1);

re = 'Stopping Recording';
adjEvtStop = adjEvt.time(~cellfun(@isempty,regexp(adjEvt.description,re)));
adjEvtStop = adjEvtStop(end);

adjEvtTotalTime = adjEvtStop-adjEvtStart;

%% Find original event files and get total recording time for each
%% sub session
files = dir([Session.spath.nlx]);
re = ['-nlx.nlx'];
oriEvtFileList = {files(~cellfun(@isempty,regexp({files.name},re))).name};

oriEvtTotalTime = 0;
for file = 1:length(oriEvtFileList),
    oriEvt = LoadEvents([Session.spath.nlx oriEvtFileList{file}]);

    re = 'Starting Recording';
    oriEvtStart = oriEvt.time(~cellfun(@isempty,regexp(oriEvt.description,re)));
    oriEvtStart = oriEvtStart(1);

    re = 'Stopping Recording';
    oriEvtStop = oriEvt.time(~cellfun(@isempty,regexp(oriEvt.description,re)));
    oriEvtStop = oriEvtStop(end);

    oriEvtTotalTime = oriEvtStop-oriEvtStart+oriEvtTotalTime;
end

if round(oriEvtTotalTime)==round(adjEvtTotalTime),
    consistent = 1;
else
    consistent = 0;
end

