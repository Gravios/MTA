function markerTriad = compute_marker_triads(rxyz)

markerTriad.nck  = nchoosek(1:size(rxyz,2),3);
markerTriad.com  = nan([size(rxyz,1),1,size(rxyz,3)]);
markerTriad.coor = nan([size(rxyz,1),...
                    size(markerTriad.nck,1),...
                    size(rxyz,3),...
                    size(rxyz,3)]);
markerTriad.imd = nan([size(rxyz,1),size(markerTriad.nck,1),2]);
markerTriad.imo = nan([size(rxyz,1),size(markerTriad.nck,1)]);
% CREATE an orthogonal coordinate system base on each Triad
for nck = 1:size(markerTriad.nck,1),        
    oriSpan = ...
        permute(bsxfun(@minus,...
                       rxyz(:,markerTriad.nck(nck,[1,3]),:),...
                       rxyz(:,markerTriad.nck(nck,2),:)),...
                [1,4,2,3]);

    markerTriad.coor(:,nck,1,:) = oriSpan(:,1,1,:);
    
    markerTriad.imd(:,nck,:) = sqrt(sum(oriSpan(:,1,[1,2],:).^2,4));
    
    markerTriad.imo(:,nck)=...
        atan2(sqrt(sum(cross(oriSpan(:,1,1,:),...
                             oriSpan(:,1,2,:),4).^2,4)),...
              dot(oriSpan(:,1,1,:),...
                  oriSpan(:,1,2,:),4));
    
    markerTriad.coor(:,nck,2,:) = ...
        cross(markerTriad.coor(:,nck,1,:),oriSpan(:,1,2,:));

    markerTriad.coor(:,nck,3,:) = ...
        cross(markerTriad.coor(:,nck,1,:),markerTriad.coor(:,nck,2,:));
    
    markerTriad.com(:,nck,:) = mean(rxyz(:,markerTriad.nck(nck,:),:),2);

end
