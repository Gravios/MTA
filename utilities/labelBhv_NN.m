function Trial = labelBhv_NN(Trial,varargin)
%function Trial = labelBhv_NN(Trial,name,varargin)
%defargs = struct('name',               'NN0317',                 ...
%                 'RefTrial',           'jg05-20120317.cof.all',  ...
%                 'refStcMode',         'hand_labeled_rev3_jg',   ...
%                 'fetSet',             'fet_mis',                ...                 
%                 'stcMode',            '',                       ...                 
%                 'tag_preprocessing',  '+seh+',                  ...
%                 'tag_postprocessing', '_PP',                    ...
%                 'sampleRate',         12,                       ...
%                 'nNeurons',           100,                      ...
%                 'nIter',              100,                      ...
%                 'states',             {{'walk','rear','turn','pause','groom','sit'}},...
%                 'rndMethod',          'WSBNT',...
%                 'norm',               true,...
%                 'map2ref',            true...
%);


% DEFARGS ----------------------------------------------------------------------
defargs = struct('name',               'NN0317',                 ...
                 'RefTrial',           'jg05-20120317.cof.all',  ...
                 'refStcMode',         'hand_labeled_rev3_jg',   ...
                 'fetSet',             'fet_mis',                ...                 
                 'stcMode',            '',                       ...                 
                 'tag_preprocessing',  '+seh+',                  ...
                 'tag_postprocessing', '',                       ...
                 'sampleRate',         12,                       ...
                 'nNeurons',           100,                      ...
                 'nIter',              100,                      ...
                 'states',             {{'walk','rear','turn','pause','groom','sit'}},...
                 'rndMethod',          'WSBNT',...
                 'norm',               true,...
                 'map2ref',            true...
);%-----------------------------------------------------------------------------



[name,RefTrial, refStcMode, fetSet, stcMode, tag_preprocessing, tag_postprocessing, sampleRate,...
 nNeurons, nIter, states, rndMethod, norm, map2ref] = DefaultArgs(varargin,defargs,'--struct');


Trial = MTATrial.validate(Trial);
RefTrial = MTATrial.validate(RefTrial);


% MAIN -------------------------------------------------------------------------

model = ['MTAC_BATCH-' tag_preprocessing fetSet ...
         '_SR_' num2str(sampleRate) ...
         '_NORM_' num2str(norm) ...         
         '_REF_' RefTrial.filebase ...
         '_STC_' refStcMode ...
         '_NN_' num2str(nNeurons) ...
         '_NI_' num2str(nIter) ...         
         '_NN_multiPN_RAND_' rndMethod];

if map2ref,
    mapped = '-map2ref';
else
    mapped = '';
end

mod.states     = states;
mod.stcMode    = stcMode;
mod.featureSet = fetSet;
mod.model      = model;
mod.sampleRate = sampleRate;
mod.nNeurons   = nNeurons;
mod.nIter      = nIter;
mod.map2reference = map2ref;
mod.normalize = norm;
argin = struct2varargin(mod);

[stc,d_state,ls,lsm,model,p_state] = bhv_nn_multi_patternnet(Trial,argin{:});
stc.save(1);
save(fullfile(Trial.spath,[Trial.filebase,'.',mfilename,'-',model,mapped,'.mat']),...
     '-v7.3','nNeurons','nIter','sampleRate','model','fetSet','rndMethod',...
     'states','stc','d_state','p_state','ls','lsm');

stc.updateMode(name);
stc.save(1);
load(fullfile(Trial.spath,[Trial.filebase,'.',mfilename,'-',model,mapped,'.mat']));


if ~isempty(tag_postprocessing),
    Stc = optimize_stc_transition_mis_single_session(Trial,stc,...
                   RefTrial, refStcMode, fetSet,stcMode, tag_preprocessing, tag_postprocessing, ...
                   sampleRate, nNeurons, nIter, states, rndMethod, norm, map2ref);

    for s = 1:numel(Stc.states)
        Stc.states{s}.data = sort(Stc.states{s}.data);
    end

    Stc.save(1)


    Stc.updateMode([name,tag_postprocessing]);
    Stc.save(1);
end

Trial.save;


