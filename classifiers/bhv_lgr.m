function [Stc,d_state] = bhv_lgr(Trial,varargin)
MODEL_TYPE = 'LGR';
[train,states,model_filename] = DefaultArgs(varargin,...
    {false,Trial.stc.list_state_attrib('label'),...
    ['MTA_' Trial.stc.mode '_' MODEL_TYPE]});

keys = subsref(Trial.stc.list_state_attrib('key'),...
               substruct('()',{Trial.stc.gsi(states)}));

Stc = Trial.stc.copy;
Stc.updateMode([MODEL_TYPE '_' cell2mat(keys)]);
Stc.states = {};

model_filename = [model_filename '-' cell2mat(keys) '-model.mat'];
model_path = fileparts(mfilename('fullpath'));
model_loc = fullfile(model_path,model_filename);


lrfet = fet_lgr(Trial);
nind = nniz(lrfet);

if train||~exist(model_loc,'file'),   

    [smat] = max(stc2mat(Trial.stc,lrfet,states),[],2);

    Model_Information = struct(...
        'filename',              model_filename,         ...
        'path',                  model_path,             ...
        'description',           '',                     ...
        'StcMode',               Trial.stc.mode,         ...
        'StcFilename',           Trial.stc.filename,     ...
        'SessionFilebase',       Trial.filebase,         ...
        'state_labels',          {states},                 ...
        'state_keys',            {keys});
    
    ind = any(smat,2);
    B = mnrfit(lrfet(ind,:),smat(ind),'model','nominal');
    save(model_loc,'B','Model_Information');
else
    load(model_loc);
end    

d_state = mnrval(B,lrfet.data);

[~,maxState] = max(d_state,[],2);
maxState(~nind,:) = 0;

for i = 1:numel(states),
Stc.addState(Trial.spath,...
             Trial.filebase,...
             ThreshCross(maxState==i,0.5,10),...
             lrfet.sampleRate,...
             lrfet.sync.copy,...
             lrfet.origin,...
             states{i},...
             keys{i},...
             'TimePeriods');
end


