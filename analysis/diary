addpath('/data/homes/gravio/modules/matlab-emacs/toolbox','-begin'); rehash; emacsinit('emacsclient -n');

Trial = MTATrial('jg05-20120309',{'ang'},'all');

which win
'win' not found.

whos
  Name       Size                 Bytes  Class       Attributes

  Trial      1x1             2941329952  MTATrial              

which win
'win' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help saveRe'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help Save'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SaveClu'
    'SaveFet'
    'SavePar'
    'SavePar1'
    'SaveSpk'
    'SaveStringArray'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help SaveS'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SaveSpk'
    'SaveStringArray'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help SaveSp'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SaveSpk'


 

help SaveSpk
  <strong>SaveSpk</strong>(FileName, Spk)
 
  Saves a .spk file
 
  takes a 3d array Spk(Channel, Sample, Spike Number)

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Tran'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'TransformChd'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Trial.'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'acc'
    'addMarker'
    'ang'
    'autoLabelBhv'
    'Bhv'
    'catxyz'
    'ccg'
    'clu'
    'com'
    'concat'
    'consolidateTrials'
    'correctPointErrors'
    'correctRigidBody'
    'create'
    'Fet'
    'filebase'
    'findObj'
    'getPfs'
    'lfp'
    'lfpSampleRate'
    'list_trialNames'
    'load'
    'load_ang'
    'load_Bhv'
    'load_CluRes'
    'load_lfp'
    'load_MTAObject'
    'load_nq'
    'load_Pfs'
    'load_ripples'
    'load_ufr'
    'loadFields'
    'map'
    'markerDiffMatrix'
    'Maze'
    'Model'
    'name'
    'nq'
    'path'
    'Pfs'
    'res'
    'ripples'
    'sampleRate'
    'save'
    'spath'
    'spkxyz'
    'statePeriods'
    'syncPeriods'
    'trackingMarker'
    'transformOrigin'
    'trialName'
    'ufr'
    'updateBhvSource'
    'updateModel'
    'updatePaths'
    'vel'
    'xyz'
    'xyzPeriods'
    'xyzSampleRate'
    'xyzSegLength'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Trial.'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'acc'
    'addMarker'
    'ang'
    'autoLabelBhv'
    'Bhv'
    'catxyz'
    'ccg'
    'clu'
    'com'
    'concat'
    'consolidateTrials'
    'correctPointErrors'
    'correctRigidBody'
    'create'
    'Fet'
    'filebase'
    'findObj'
    'getPfs'
    'lfp'
    'lfpSampleRate'
    'list_trialNames'
    'load'
    'load_ang'
    'load_Bhv'
    'load_CluRes'
    'load_lfp'
    'load_MTAObject'
    'load_nq'
    'load_Pfs'
    'load_ripples'
    'load_ufr'
    'loadFields'
    'map'
    'markerDiffMatrix'
    'Maze'
    'Model'
    'name'
    'nq'
    'path'
    'Pfs'
    'res'
    'ripples'
    'sampleRate'
    'save'
    'spath'
    'spkxyz'
    'statePeriods'
    'syncPeriods'
    'trackingMarker'
    'transformOrigin'
    'trialName'
    'ufr'
    'updateBhvSource'
    'updateModel'
    'updatePaths'
    'vel'
    'xyz'
    'xyzPeriods'
    'xyzSampleRate'
    'xyzSegLength'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Trial.tran'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'transformOrigin'


 

help Trial.transformOrigin

Trial.transformOrigin not found.

Use the Help browser search field to <a href="matlab:docsearch Trial.transformOrigin">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

hang = Trial.transformOrigin('head_back','head_front',{'head_left','head_right'});
hang

hang = 

         oriVect: [851072x3 double]
        transVec: [851072x2x3 double]
    transMarkers: [6 8]
       direction: [851072x1 double]
           pitch: [851072x1 double]
            roll: [851072x1 double]

plot(hang.roll)
which BHVccg0315
'BHVccg0315' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Trial
Trial is a variable.

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

whos
  Name       Size                 Bytes  Class                 Attributes

  Trial      1x1             2941329952  MTATrial                        
  ans        0x1                         java.lang.String[]              
  hang       1x1               81703984  struct                          

Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.8810
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: [4-D double]
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: []
                nq: []
               res: []
               clu: []
               map: []
           ripples: []


disp(matlabroot)
/usr/local/share/matlab/R2011b

which win
'win' not found.


win = 7;
xyz = reshape(Filter0(gausswin(win)./sum(gausswin(win)),Trial.xyz),size(Trial.xyz,1),size(Trial.xyz,2),size(Trial.xyz,3));
v = sqrt(sum(diff(xyz).^2,3));
win = 241;
comb = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'spine_lower','pelvis_root','spine_middle','spine_upper'})));
comh = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'head_back','head_left','head_front','head_right'})));
comb = sqrt(sum(diff(comb(:,[1,2])).^2,2));
comh = sqrt(sum(diff(comh(:,[1,2])).^2,2));
comv = [comb,comh];
for i =1:2,
comv(:,i) = ButFilter(comv(:,i),11,2./(Trial.xyzSampleRate/2),'low');
comv(:,i) = clip(comv(:,i),0.003,30);
end
sfet = [unwrap(Trial.ang(:,2,3,1))-unwrap(Trial.ang(:,1,2,1)),...
        unwrap(Trial.ang(:,3,4,1))-unwrap(Trial.ang(:,2,3,1)),...
        unwrap(Trial.ang(:,4,5,1))-unwrap(Trial.ang(:,3,4,1)),...
        unwrap(Trial.ang(:,5,7,1))-unwrap(Trial.ang(:,4,5,1))];
sfet = unwrap(sfet);
num_fet = size(sfet,2);
for i = 1:num_fet
   sfet(isnan(sfet(:,i)),i) = mean(sfet(~isnan(sfet(:,i)),i));
end
sfet = Filter0(gausswin(win)./sum(gausswin(win)),sfet);
bsfet = ButFilter(sum(sfet,2),11,6./(Trial.xyzSampleRate/2),'low');
tsfet = Filter0(gausswin(141)./sum(gausswin(141)),bsfet);
dbsfet = diff(bsfet-tsfet); 
nfet = -Filter0(gausswin(141)./sum(gausswin(141)),abs(dbsfet.*Filter0(gausswin(141)./sum(gausswin(141)),comv(:,1)).*12))./(Trial.xyz(1:end-1,7,3)./Trial.ang(1:end-1,3,4,2)).*1000;

hist(nfet,1000)
size(nfet)

ans =

      851071           1

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 1
'1' not found.

nfet = cat(1,nfet(1),nfet);
disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.8810
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: [4-D double]
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: []
                nq: []
               res: []
               clu: []
               map: []
           ripples: []


which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

40*28*800000

ans =

   896000000

whos
  Name              Size                  Bytes  Class       Attributes

  Trial             1x1              2941329952  MTATrial              
  ans               1x1                       8  double                
  bsfet        851072x1                 6808576  double                
  comb         851071x1                 6808568  double                
  comh         851071x1                 6808568  double                
  comv         851071x2                13617136  double                
  dbsfet       851071x1                 6808568  double                
  hang              1x1                81703984  struct                
  i                 1x1                       8  double                
  nfet         851072x1                 6808576  double                
  num_fet           1x1                       8  double                
  sfet         851072x4                27234304  double                
  tsfet        851072x1                 6808576  double                
  v            851071x9                61277112  double                
  win               1x1                       8  double                
  xyz          851072x9x3             183831552  double                

40*28*800000*8

ans =

   7.1680e+09

format long g
40*28*800000*8

ans =

                7168000000

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which win
win is a variable.

which k
'k' not found.

which caxis
/usr/local/share/matlab/R2011b/toolbox/matlab/graph3d/caxis.m

which angd_pc
'angd_pc' not found.

which nxyz
'nxyz' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('circ_dif'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('circ_'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'circ_ang2rad'
    'circ_axial'
    'circ_axialmean'
    'circ_clust'
    'circ_cmtest'
    'circ_confmean'
    'circ_corrcc'
    'circ_corrcl'
    'circ_dist'
    'circ_dist2'
    'circ_hktest'
    'circ_kappa'
    'circ_ktest'
    'circ_kuipertest'
    'circ_kurtosis'
    'circ_mean'
    'circ_median'
    'circ_medtest'
    'circ_moment'
    'circ_mtest'
    'circ_otest'
    'circ_plot'
    'circ_r'
    'circ_rad2ang'
    'circ_raotest'
    'circ_rtest'
    'circ_samplecdf'
    'circ_skewness'
    'circ_stats'
    'circ_std'
    'circ_symtest'
    'circ_var'
    'circ_vmpar'
    'circ_vmpdf'
    'circ_vmrnd'
    'circ_vtest'
    'circ_wwtest'


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which circ_ds
'circ_ds' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which sang
'sang' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which ynn
'ynn' not found.


s = MTASession('jg05-20120309');
s = MTATrial(s,[],'all');
swin = 7;
lwin = 243;
comb = zeros(size(s.xyz,1),1,3);
comb(:,1,:) = Filter0(gausswin(swin)./sum(gausswin(swin)),s.com(s.Model.rb({'spine_lower','pelvis_root','spine_middle','spine_upper'})));
comh = zeros(size(s.xyz,1),1,3);
comh(:,1,:) = Filter0(gausswin(swin)./sum(gausswin(swin)),s.com(s.Model.rb({'head_back','head_left','head_front','head_right'})));
s = s.addMarker('body_com','[0,0,255]',...
                {{'spine_lower','body_com',[0,0,255]},...
                 {'pelvis_root','body_com',[0,0,255]},...
                 {'spine_middle','body_com',[0,0,255]},...
                 {'spine_upper','body_com',[0,0,255]}},comb);
s = s.addMarker('head_com','[0,0,0]',...
                {{'head_back','head_com',[0,0,255]},...
                 {'head_left','head_com',[0,0,255]},...
                 {'head_front','head_com',[0,0,255]},...
                 {'head_right','head_com',[0,0,255]}},comh);
s = s.load_ang(1);
ang = [circ_dist(s.ang(:,1,2,1),s.ang(:,1,10,1)),...
        circ_dist(s.ang(:,2,3,1),s.ang(:,1,10,1)),...
        circ_dist(s.ang(:,3,4,1),s.ang(:,1,10,1))];
nn = ~isnan(s.ang(:,1,2,1));
wang = WhitenSignal(ang(nn,:),[],1);
yc=[];f=[];t=[];phi=[];fstat=[];
[yc,f,t,phi,fstat] = mtchglong(wang,2^8,s.xyzSampleRate,2^7,0.875*2^7,[],[],[],[0,40]);
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Sub'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'Sub2Ind'
    'SubsetStruct'
    'Substract1'
    'SubstractRanges'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Substr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'Substract1'
    'SubstractRanges'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('SubstractRa'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SubstractRanges'


 

help SubstractRanges
 function R = <strong>SubstractRanges</strong>(R1,R2)
  substracts from ranges R1 ranges from R2 : R = R1-R2

SubstractRanges([1 10],[20,30])

ans =

     1    10

SubstractRanges([1 5],[20,30])

ans =

     1     5

SubstractRanges([1 5],[2,3])

ans =

     1     2
     3     5

caxis

ans =

     0     1

caxis

ans =

     0     1

caxis([0,1])
caxis([0,.1])
caxis([0,.1])
which ynn
'ynn' not found.

which ynn
'ynn' not found.

which figure
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/figure)

help median
 <strong>median</strong> Median value.
    For vectors, <strong>median</strong>(a) is the median value of the elements in a.
    For matrices, <strong>median</strong>(A) is a row vector containing the median
    value of each column.  For N-D arrays, <strong>median</strong>(A) is the median
    value of the elements along the first non-singleton dimension
    of A.
 
    <strong>median</strong>(A,DIM) takes the median along the dimension DIM of A.
 
    Example: If A = [1 2 4 4; 3 4 6 6; 5 6 8 8; 5 6 8 8];
 
    then median(A) is [4 5 7 7] and median(A,2) 
    is [3 5 7 7].'
 
    Class support for input A:
       float: double, single
 
    See also <a href="matlab:help mean">mean</a>, <a href="matlab:help std">std</a>, <a href="matlab:help min">min</a>, <a href="matlab:help max">max</a>, <a href="matlab:help var">var</a>, <a href="matlab:help cov">cov</a>, <a href="matlab:help mode">mode</a>.

    Overloaded methods:
       <a href="matlab:help timeseries/median">timeseries/median</a>
       <a href="matlab:help ProbDistUnivParam/median">ProbDistUnivParam/median</a>
       <a href="matlab:help ProbDistUnivKernel/median">ProbDistUnivKernel/median</a>

    Reference page in Help browser
       <a href="matlab:doc median">doc median</a>

which ang
ang is a variable.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('cir'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'circ_ang2rad'
    'circ_axial'
    'circ_axialmean'
    'circ_clust'
    'circ_cmtest'
    'circ_confmean'
    'circ_corrcc'
    'circ_corrcl'
    'circ_dist'
    'circ_dist2'
    'circ_hktest'
    'circ_kappa'
    'circ_ktest'
    'circ_kuipertest'
    'circ_kurtosis'
    'circ_mean'
    'circ_median'
    'circ_medtest'
    'circ_moment'
    'circ_mtest'
    'circ_otest'
    'circ_plot'
    'circ_r'
    'circ_rad2ang'
    'circ_raotest'
    'circ_rtest'
    'circ_samplecdf'
    'circ_skewness'
    'circ_stats'
    'circ_std'
    'circ_symtest'
    'circ_var'
    'circ_vmpar'
    'circ_vmpdf'
    'circ_vmrnd'
    'circ_vtest'
    'circ_wwtest'
    'circle'
    'circleb1'
    'circleb2'
    'circlef'
    'circleg'
    'circlepick'
    'circmean'
    'circres'
    'circshift'
    'circstats_sizeindependent'
    'circustent'
    'cirsb'
    'cirsg'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('circ_co'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'circ_confmean'
    'circ_corrcc'
    'circ_corrcl'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('circ_corr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'circ_corrcc'
    'circ_corrcl'


 

help circ_corrcl
  [rho pval ts] = circ_corrcc(alpha, x)
    Correlation coefficient between one circular and one linear random
    variable.
 
    Input:
      alpha   sample of angles in radians
      x       sample of linear random variable
 
    Output:
      rho     correlation coefficient
      pval    p-value
 
  References:
      Biostatistical Analysis, J. H. Zar, p. 651
 
  PHB 6/7/2008
 
  Circular Statistics Toolbox for Matlab

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('circ_c'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'circ_clust'
    'circ_cmtest'
    'circ_confmean'
    'circ_corrcc'
    'circ_corrcl'


 

help circ_corcc

circ_corcc not found.

Use the Help browser search field to <a href="matlab:docsearch circ_corcc">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

help circ_corrcc
  [rho pval ts] = circ_corrcc(alpha1, alpha2)
    Circular correlation coefficient for two circular random variables.
 
    Input:
      alpha1	sample of angles in radians
      alpha2	sample of angles in radians
 
    Output:
      rho     correlation coefficient
      pval    p-value
 
  References:
    Topics in circular statistics, S.R. Jammalamadaka et al., p. 176
 
  PHB 6/7/2008
 
  Circular Statistics Toolbox for Matlab

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('%     ''nTapers'',nTapers,''verbose'',verbose,''A_list'',A_list,''derive'',derive,''freq_bands'',freq_bands);'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

which for
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/for)

which D
'D' not found.

which function
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/function)

which T
'T' not found.

which if
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/if)

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

which subplot
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/subplot.m

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help LDA_Dw'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'LDA_Dwinnell'


 

help LDA_Dwinnell
  LDA - MATLAB subroutine to perform linear discriminant analysis
  by Will Dwinnell and Deniz Sevis
 
  Use:
  W = LDA(Input,Target,Priors)
 
  W       = discovered linear coefficients (first column is the constants)
  Input   = predictor data (variables in columns, observations in rows)
  Target  = target variable (class labels)
  Priors  = vector of prior probabilities (optional)
 
  Note: discriminant coefficients are stored in W in the order of unique(Target)
 
  Example:
 
  % Generate example data: 2 groups, of 10 and 15, respectively
  X = [randn(10,2); randn(15,2) + 1.5];  Y = [zeros(10,1); ones(15,1)];
 
  % Calculate linear discriminant coefficients
  W = LDA(X,Y);
 
  % Calulcate linear scores for training data
  L = [ones(25,1) X] * W';
 
  % Calculate class probabilities
  P = exp(L) ./ repmat(sum(exp(L),2),[1 2]);
 
 
  Last modified: Dec-11-2010

help LDA

LDA not found.

Use the Help browser search field to <a href="matlab:docsearch LDA">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which ang
ang is a variable.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Trial
Trial is a variable.

which BHVccg0315
'BHVccg0315' not found.

Trial = MTATrial('jg05-20120309',{'CluRes'},'all');
BHVccg0315 = {};
nStates = length(Trial.Bhv.States);
for i = 1:nStates,
    bhvper = Trial.Bhv.States{i}.state;
    if isempty(bhvper),continue,end
    Bccg = MTAccg(Trial,...
                  Trial.Bhv.States{i}.label,...
                  ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset'],...
                  {bhvper(:,1),bhvper(:,2)},...
                  {[Trial.Bhv.States{i}.label '_onset'],[Trial.Bhv.States{i}.label '_offset']});
    BHVccg0315{i} = Bccg.filter(gausswin(3));
end
BHVccg = BHVccg0315;

hfig = figure;
unit = 1;
k = 1:2:nStates*2;
while 1,
for i = 1:nStates,
    subplot(nStates,2,k(i)),
    bar(Bccg.tbin,BHVccg{i}(:,unit,1)),
    axis tight,
    subplot(nStates,2,k(i)+1),
    bar(Bccg.tbin,BHVccg{i}(:,unit,2)),
    axis tight,
    title([Trial.Bhv.States{i}.label ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Index exceeds matrix dimensions.
} 
which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which BHVccg0315
BHVccg0315 is a variable.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('SubstractRan'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SubstractRanges'


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which SubstractRanges
/data/homes/antsiro/matlab/draft/SubstractRanges.m

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which states
'states' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('SubstractRang'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'SubstractRanges'


 

hel pSubstractRanges
{Undefined function 'hel' for input arguments of type 'char'.
} 
help SubstractRanges
 function R = <strong>SubstractRanges</strong>(R1,R2)
  substracts from ranges R1 ranges from R2 : R = R1-R2

disp(matlabroot)
/usr/local/share/matlab/R2011b


non_immobile_bhvs = {'rear','walk','turnR','turnL','groom'};
iper = [1,size(Trial.xyz,1)];
for i = 1:length(non_immobile_bhvs),
iper = SubstractRanges(iper,Trial.Bhv.getState(non_immobile_bhvs(i)).states);
end
{No appropriate method, property, or field states for class MTAState.
} 

non_immobile_bhvs = {'rear','walk','turnR','turnL','groom'};
iper = [1,size(Trial.xyz,1)];
for i = 1:length(non_immobile_bhvs),
iper = SubstractRanges(iper,Trial.Bhv.getState(non_immobile_bhvs(i)).state);
end
whos iper
  Name        Size            Bytes  Class     Attributes

  iper      347x2              5552  double              

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help MTABhv.add'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'addState'


 

help MTABhv.addState
 Bhv = <strong>addState</strong>(Bhv,key,label,state)
 
    Bhv - MTABhv: object containing behavioral states
 
    key - char: single character used for keyboard control
                of labeling in MTABrowser 
  
    label - string: one word description of the state
 
    state - numericArray: (event,[start,stop]) Periods
            in which the state occurs @ xyzSampleRate
 

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

Trial.Bhv = Trial.Bhv.addState('i','immobile',iper);
Trial.Bhv

ans = 

  MTABhv

  Properties:
      mode: 'm20130311'
    States: {1x8 cell}


disp(matlabroot)
/usr/local/share/matlab/R2011b

Trial.Bhv.save
{Error using MTABhv/save (line 44)
Not enough input arguments.
} 
Trial.Bhv.save(Trial)
{Error using MTABhv/save (line 50)
Not enough input arguments.
} 
help MTABhv.save

No help found for MTABhv/save.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which classdef
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/classdef)

Trial.Bhv.save(Trial,1)
{Warning: Overwriting:
/data/homes/gravio/data/analysis/jg05-20120309/jg05-20120309.cof.all.bhv.m20130311.mat} 
{> In <a href="matlab: opentoline('/data/homes/gravio/matlab/draft/MTA/MTABhv.m',51,1)">MTABhv>MTABhv.save at 51</a>} 
which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Filters
'Filters' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Filtered
'Filtered' not found.

which Filtered
'Filtered' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which non
'non' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Trial.Bhv
'Trial.Bhv' not found.

which rper
'rper' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which rdur
'rdur' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which interrdur
'interrdur' not found.

which interrdur
'interrdur' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

rper = Trial.Bhv.getState('rear').state;
interrdur = [rper(1:end-1,2)-rper(2:end,1)];
which no_pre_rear_rears
'no_pre_rear_rears' not found.

interrdur

interrdur =

        -969
        -982
       -1070
       -1447
       -2973
         -68
       -1139
       -2891
      -39003
       -4889
       -1751
       -1712
       -1876
      -33359
        -251
        -771
        -652
       -6248
       -9472
        -310
      -11749
     -164045
       -8903
        -824
        -239
       -5967
      -17106
       -1435
        -359
     -432184
      -19835
        -923
        -451
       -6466
      -29861
        -681
        -230
       -1120
       -4250
      -12017

which no_pre_rear_rears
'no_pre_rear_rears' not found.

interrdur = [rper(2:end,1)-rper(1:end-1,2)];
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('inter'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'interactionplot'
    'interfileinfo'
    'interfileread'
    'interMarkerAngles'
    'interMarkerDistance'
    'interMarkerOrientation'
    'internal'
    'interp'
    'interp1'
    'interp1q'
    'interp2'
    'interp2d'
    'interp3'
    'interpft'
    'interpn'
    'interpndddg'
    'interpolate_csd'
    'interpstreamspeed'
    'interrdur'
    'intersect'
    'interspace'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('interr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'interrdur'


 

interrdur

interrdur =

         969
         982
        1070
        1447
        2973
          68
        1139
        2891
       39003
        4889
        1751
        1712
        1876
       33359
         251
         771
         652
        6248
        9472
         310
       11749
      164045
        8903
         824
         239
        5967
       17106
        1435
         359
      432184
       19835
         923
         451
        6466
       29861
         681
         230
        1120
        4250
       12017

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_pre_rear_rears
'no_pre_rear_rears' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('interrdur'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'interrdur'


 

which interrdur
interrdur is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

grperind = find(interrdur>3*Session.xyzSampleRate);
{Undefined variable "Session" or function "Session.xyzSampleRate".
} 
grperind = find(interrdur>3*Trial.xyzSampleRate);
grperind

grperind =

     1
     2
     3
     4
     5
     7
     8
     9
    10
    11
    12
    13
    14
    16
    17
    18
    19
    21
    22
    23
    24
    26
    27
    28
    30
    31
    32
    33
    34
    35
    36
    38
    39
    40

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_pre_rear_rears
'no_pre_rear_rears' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre_rear_rears'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

size(rper)

ans =

    41     2

which no_fol_rear_rearoff
'no_fol_rear_rearoff' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which g
'g' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_fol_rear_rearoff
'no_fol_rear_rearoff' not found.

which no_pre_rear_rearon
'no_pre_rear_rearon' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('interr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'interrdur'


 

interrdur

interrdur =

         969
         982
        1070
        1447
        2973
          68
        1139
        2891
       39003
        4889
        1751
        1712
        1876
       33359
         251
         771
         652
        6248
        9472
         310
       11749
      164045
        8903
         824
         239
        5967
       17106
        1435
         359
      432184
       19835
         923
         451
        6466
       29861
         681
         230
        1120
        4250
       12017

which no_pre_rear_rearon
'no_pre_rear_rearon' not found.

which no_pre_rear_rearon
'no_pre_rear_rearon' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

no_pre_rear_rearon =  rper([1;grperind+1],1); 
disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_rear_rearon'


 

no_pre_rear_rearon

no_pre_rear_rearon =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_fol'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

no_fol_rear_rearoff = rper(grperind,2); 
no_pre_rear_rearon

no_pre_rear_rearon =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which BHVccg0315
BHVccg0315 is a variable.

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

nStates = length(Trial.Bhv.States);
which 1
'1' not found.

for i = 8,
    bhvper = Trial.Bhv.States{i}.state;
    if isempty(bhvper),continue,end
    Bccg = MTAccg(Trial,...
                  Trial.Bhv.States{i}.label,...
                  ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset'],...
                  {bhvper(:,1),bhvper(:,2)},...
                  {[Trial.Bhv.States{i}.label '_onset'],[Trial.Bhv.States{i}.label '_offset']});
    BHVccg0315{i} = Bccg.filter(gausswin(3));
end
which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b


BHVccg = BHVccg0315;
hfig = figure;
unit = 1;
k = 1:2:nStates*2;
while 1,
for i = 1:nStates,
    subplot(nStates,2,k(i)),
    bar(Bccg.tbin,BHVccg{i}(:,unit,1)),
    axis tight,
    subplot(nStates,2,k(i)+1),
    bar(Bccg.tbin,BHVccg{i}(:,unit,2)),
    axis tight,
    title([Trial.Bhv.States{i}.label ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
which BHVccg0315
BHVccg0315 is a variable.

diff(Trial.Bhv.getState('immobile').state,1,2)

ans =

         127
          57
          40
         287
          17
         116
          70
          54
          41
         115
         294
         283
        2452
          68
         242
         245
          60
          18
         105
         782
         659
          14
         316
          25
          10
         397
         317
        4451
          16
         208
       24127
         573
          91
          81
         198
          52
          71
         470
          93
         509
         102
         463
         714
          73
          83
         234
          13
          61
          47
          30
          18
         136
         211
         155
          12
          79
         136
         396
         176
          21
         118
         157
         132
          75
          23
         259
          69
          29
          44
          81
        1657
        1431
          76
          20
         445
         149
         363
          41
          80
        3129
         326
          23
          89
         183
       20048
          44
          20
          40
          53
          72
          38
           4
         183
          31
        2573
         129
        1823
         244
         456
         324
         114
         939
         185
         139
         201
         193
          92
         111
          45
          35
         219
          35
         320
          48
        1061
         486
         382
          32
          38
          40
          18
          63
         707
         188
         669
          65
          49
         652
        3286
        1004
         331
        1078
         461
        2206
      101615
        2797
         839
        2829
        1874
        2562
         348
         361
        1097
         548
         225
         128
         759
         228
         551
       17855
         448
        2140
          17
          84
          87
         110
          29
          50
          33
         107
          12
        1063
         890
         173
         275
          97
         222
         111
          93
        1058
         163
        1112
         455
          79
          61
        1325
        2653
          20
          61
          21
         997
         181
         425
         263
          38
          45
          57
        1581
         277
         346
         210
          93
         664
         168
          38
          16
         101
          26
          61
         927
         216
          62
          42
         525
        2275
          27
         675
          87
          56
          40
         695
          52
          29
         148
          52
          46
          18
           9
        1077
          20
          18
         153
          20
         117
         162
          29
          70
         692
         103
         293
       25890
          14
         258
        6660
       38266
         835
        1211
          27
          43
         355
         521
         722
         556
          12
       19487
       58821
      152014
          62
         111
       72046
        3522
       30531
         308
         836
         160
         172
         791
         364
        5027
         251
         425
         617
         195
         180
          78
          49
         354
          41
          32
          39
          70
          42
          37
          87
         360
         265
         472
         265
         879
           0
         565
          42
         311
         127
          51
         153
         122
         702
          12
         137
           0
        2051
         523
          39
          25
         137
         252
           1
         304
         591
         720
          23
         125
         134
        2728
         616
         196
        1498
           9
       14212
         108
         105
          37
          20
          39
          36
           0
         225
         258
         156
         104
        1143
        1679
         257
          49
        1411
        3259
        2583
          98
        1200
         188
         846
          44
          70
          59
          50
          18
         279
         188
         473
          32
          31
           9
          98
         903
         383
         112

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

iperdur = diff(Trial.Bhv.getState('immobile').state,1,2);
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which BHVccg0315
BHVccg0315 is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which if
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/if)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_fponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing onset/offsets'],...
              {no_pre_rearon,no_fol_rear_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']});
{Undefined function or variable 'no_pre_rearon'.
} 
frccg = Bccg.filter(gausswin(3));
disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_pre_rearon
'no_pre_rearon' not found.

Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_fponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing onset/offsets'],...
              {no_pre_rear_rearon,no_fol_rear_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']});
frccg = Bccg.filter(gausswin(3));
disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = 1

nStates =

     1

k = 1;
i = 1;
while 1,
    subplot(nStates,2,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1)),
    axis tight,
    subplot(nStates,2,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2)),
    axis tight,
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Index exceeds matrix dimensions.
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help Nearest'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'NearestNeighbour'


 

help NearestNeighbour
 function [xx xi yi] = <strong>NearestNeighbour</strong>(x,y,side, maxdist)
 look for the closest neighbours: value (xx) and index (xi) in x
  of every element of y from the side ('left','right','both')
  within maxdist (in same units as x and y)
  returns xx - values of x which conform criteria, xi = indices of those
  yi - indices of y which have neighbours that conform the criteria
 ..maybe already exists but couldn't find

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

help MTAccg

No help found for MTAccg.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfsearch
'pfsearch' not found.

pfsearch = MTAPlaceField([]);
pfsearch

pfsearch = 

  MTAPlaceField

  Properties:
                          type: []
                      filebase: []
                      mazeName: []
                     trialName: []
                trackingMarker: []
                    stateLabel: []
                       rateMap: []
                        stdMap: []
                          xbin: []
                          ybin: []
                         nbins: []
                        cluMap: []
                        smooth: []
                       maxRate: []
                    maxRateMax: []
                    maxRateInd: []
                    maxRatePos: []
               numBSiterations: []
    calculation_completion_map: []
                   spk_shuffle: []
                   pos_shuffle: []


disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

help MTAPlaceField
 PlaceField = <strong>MTAPlaceField</strong>(Session,varargin) 
 
   Description: Data structure used to organize unit rate maps. 
 
   varargin:
     [units,states,overwrite,type,spk_shuffle,pos_shuffle,numBSiterations,smooth,nbins,
      mazeName,trialName,constrained_to_maze]
 -------------------------------------------------------------------------------------------
 
   Example
  
     Placefield = <strong>MTAPlaceField</strong>(Session,[],{'head','theta'},1)

pfw = MTAPlaceField(Trial,[],{'walk'},0);
pfw

pfw = 

  MTAPlaceField

  Properties:
                          type: 'xy'
                      filebase: 'jg05-20120309.cof.all'
                      mazeName: 'cof'
                     trialName: 'all'
                trackingMarker: 'head_front'
                    stateLabel: 'walk'
                       rateMap: {112x1 cell}
                        stdMap: {112x1 cell}
                          xbin: [1x50 double]
                          ybin: [1x50 double]
                         nbins: 50
                        cluMap: [112x3 double]
                        smooth: 0.03
                       maxRate: {112x1 cell}
                    maxRateMax: {112x1 cell}
                    maxRateInd: {112x1 cell}
                    maxRatePos: {112x1 cell}
               numBSiterations: 1
    calculation_completion_map: [112x1 double]
                   spk_shuffle: 'n'
                   pos_shuffle: 0


pfw.plot(86)
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

pfw.plot(26)
pfw.plot(11)
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pf_search
'pf_search' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which try
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/try)

for unit = 1:numClu,
    try
        pfMaxPos(unit,:) = pfw.maxRatePos{unit}(pfw.maxRateMax{unit},:);
    end
end
{Undefined function or variable 'numClu'.
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

for unit = 1:size(pfw.cluMap,1),
    try
        pfMaxPos(unit,:) = pfw.maxRatePos{unit}(pfw.maxRateMax{unit},:);
    end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which label
'label' not found.

which label
'label' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('pfMaxPos'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'pfMaxPos'


 

which pfMaxPos
pfMaxPos is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_fponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing onset/offsets'],...
              {no_pre_rear_rearon,no_fol_rear_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']},...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               3,... number of partitions
               pfMaxPos,1);
frccg = Bccg.filter(gausswin(3));
which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

which bar
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/bar.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which imagesc
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/imagesc.m

whos frccg
  Name       Size             Bytes  Class     Attributes

  frccg      4-D             542976  double              

size(frccg)

ans =

   101   112     2     3

which imagesc
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/imagesc.m

which imagesc
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/imagesc.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = 1

nStates =

     1

k = 1;
i = 1;
while 1,
    subplot(nStates,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,1,:))'),axis xy
    axis tight,
    subplot(nStates,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,2,:))'),axis xy
    axis tight,
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

Bccg

Bccg = 

  MTAccg

  Properties:
                 mazeName: 'cof'
                trialName: 'all'
                     name: 'rear_filtered_fponoff'
                   method: 'abs_dist'
              Description: [1x88 char]
                  CluTags: {'rear_onset_filt'  'rear_offset_filt'}
                     tbin: [1x101 double]
                      ccg: [4-D double]
                   posind: {2x1 cell}
                   cluMap: [112x3 double]
                  binSize: 100
                 halfBins: 50
            normalization: 'hz'
            numIterations: 1
    surrogate_sample_size: []
               partitions: 3
        partition_feature: {2x1 cell}
     partition_boundaries: {2x1 cell}


disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 3
'3' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which while
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/while)

which 1
'1' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:2:nStates*2;
i = 1;
while 1,
for i = 1:nStates
    subplot(nStates,2,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,2,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Index exceeds matrix dimensions.
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Bccg.par'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'partition_boundaries'
    'partition_feature'
    'partitions'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Bccg.partition_bou'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'partition_boundaries'


 

Bccg.partition_boundaries

ans = 

    [112x4 double]
    [112x4 double]

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Bccg.partition_fea'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'partition_feature'


 

Bccg.partition_feature

ans = 

    [112x35 double]
    [112x34 double]

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Bccg.po'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'posind'


 

Bccg.posind

ans = 

    [35x1 double]
    [34x1 double]

Bccg

Bccg = 

  MTAccg

  Properties:
                 mazeName: 'cof'
                trialName: 'all'
                     name: 'rear_filtered_fponoff'
                   method: 'abs_dist'
              Description: [1x88 char]
                  CluTags: {'rear_onset_filt'  'rear_offset_filt'}
                     tbin: [1x101 double]
                      ccg: [4-D double]
                   posind: {2x1 cell}
                   cluMap: [112x3 double]
                  binSize: 100
                 halfBins: 50
            normalization: 'hz'
            numIterations: 1
    surrogate_sample_size: []
               partitions: 3
        partition_feature: {2x1 cell}
     partition_boundaries: {2x1 cell}


disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which subplot
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/subplot.m

which subplot
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/subplot.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:2:nStates*2;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2)
pfw.plot(unit)
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 2
'2' not found.


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:2:nStates*2;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
keyboard
subplot(nStates,ncol,k+2)
pfw.plot(unit)
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:2:nStates*2;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
k = k+1;
keyboard
subplot(nStates,ncol,k+2)
pfw.plot(unit)
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

dbquit
dbquit
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 2
'2' not found.


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2)
pfw.plot(unit)
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
help circle
 function h = circle(x, y, r, style);
  Draw circle with center at x,y with radius r with plot style 'style'

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('pfw.p'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'plot'
    'pos_shuffle'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('pfw.'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'calculation_completion_map'
    'cluMap'
    'filebase'
    'maxRate'
    'maxRateInd'
    'maxRateMax'
    'maxRatePos'
    'mazeName'
    'nbins'
    'numBSiterations'
    'plot'
    'pos_shuffle'
    'rateMap'
    'report'
    'smooth'
    'spk_shuffle'
    'stateLabel'
    'stdMap'
    'trackingMarker'
    'trialName'
    'type'
    'xbin'
    'ybin'


 

Bccg

Bccg = 

  MTAccg

  Properties:
                 mazeName: 'cof'
                trialName: 'all'
                     name: 'rear_filtered_fponoff'
                   method: 'abs_dist'
              Description: [1x88 char]
                  CluTags: {'rear_onset_filt'  'rear_offset_filt'}
                     tbin: [1x101 double]
                      ccg: [4-D double]
                   posind: {2x1 cell}
                   cluMap: [112x3 double]
                  binSize: 100
                 halfBins: 50
            normalization: 'hz'
            numIterations: 1
    surrogate_sample_size: []
               partitions: 3
        partition_feature: {2x1 cell}
     partition_boundaries: {2x1 cell}


disp(matlabroot)
/usr/local/share/matlab/R2011b

Bccg.partition_boundaries{1}

ans =

  Columns 1 through 3

                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667
                         0          333.333333333333          666.666666666667

  Column 4

                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000
                      1000

size(Bccg.partition_boundaries{1})

ans =

   112     4

size(Bccg.partition_boundaries)

ans =

     2     1

Bccg.partition_boundaries{1}(34)

ans =

     0

Bccg.partition_boundaries{1}(34,:)

ans =

  Columns 1 through 3

                         0          333.333333333333          666.666666666667

  Column 4

                      1000

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('pfM'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'pfMaxPos'


 

size(pfMaxPos)

ans =

   112     2

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which title
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/title.m

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('Bccg.pos'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'posind'


 

size(Bccg.posind)

ans =

     2     1

size(Bccg.posind(1))

ans =

     1     1

size(Bccg.posind{1})

ans =

    35     1

Bccg.posind{1}(1)

ans =

   660

Bccg.posind{1}(1,:)

ans =

   660

Bccg.posind{1}

ans =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

which title
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/title.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which scatter
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/scatter.m

help scatter
 <strong>scatter</strong> Scatter/bubble plot.
    <strong>scatter</strong>(X,Y,S,C) displays colored circles at the locations specified
    by the vectors X and Y (which must be the same size).  
 
    S determines the area of each marker (in points^2). S can be a
    vector the same length a X and Y or a scalar. If S is a scalar, 
    MATLAB draws all the markers the same size. If S is empty, the
    default size is used.
    
    C determines the colors of the markers. When C is a vector the
    same length as X and Y, the values in C are linearly mapped
    to the colors in the current colormap. When C is a 
    length(X)-by-3 matrix, it directly specifies the colors of the  
    markers as RGB values. C can also be a color string. See ColorSpec.
 
    <strong>scatter</strong>(X,Y) draws the markers in the default size and color.
    <strong>scatter</strong>(X,Y,S) draws the markers at the specified sizes (S)
    with a single color. This type of graph is also known as
    a bubble plot.
    <strong>scatter</strong>(...,M) uses the marker M instead of 'o'.
    <strong>scatter</strong>(...,'filled') fills the markers.
 
    <strong>scatter</strong>(AX,...) plots into AX instead of GCA.
 
    H = <strong>scatter</strong>(...) returns handles to the scatter objects created.
 
    Use PLOT for single color, single marker size scatter plots.
 
    Example
      load seamount
      scatter(x,y,5,z)
 
    See also <a href="matlab:help scatter3">scatter3</a>, <a href="matlab:help plot">plot</a>, <a href="matlab:help PlotMatrix">PlotMatrix</a>.

    Reference page in Help browser
       <a href="matlab:doc scatter">doc scatter</a>

which scatter
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/scatter.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which scatter
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/scatter.m

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,2));
circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,3));
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,1),10,'k')
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
which circle
/data/homes/antsiro/matlab/General/circle.m

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

help circle
 function h = circle(x, y, r, style);
  Draw circle with center at x,y with radius r with plot style 'style'

which circle
/data/homes/antsiro/matlab/General/circle.m

which circle
/data/homes/antsiro/matlab/General/circle.m

which circle
/data/homes/antsiro/matlab/General/circle.m

which circle
/data/homes/antsiro/matlab/General/circle.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
c(1) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,2));
c(2) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,3));
set(c,'color','w');
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),10,'k');
xlim([-500,500]);
ylim([-500,500]);
clear('c');
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
help scattered

scattered not found.

Use the Help browser search field to <a href="matlab:docsearch scattered">search the documentation</a>, or
type "<a href="matlab:help help">help help</a>" for help command options, such as help for methods.

help scatter
 <strong>scatter</strong> Scatter/bubble plot.
    <strong>scatter</strong>(X,Y,S,C) displays colored circles at the locations specified
    by the vectors X and Y (which must be the same size).  
 
    S determines the area of each marker (in points^2). S can be a
    vector the same length a X and Y or a scalar. If S is a scalar, 
    MATLAB draws all the markers the same size. If S is empty, the
    default size is used.
    
    C determines the colors of the markers. When C is a vector the
    same length as X and Y, the values in C are linearly mapped
    to the colors in the current colormap. When C is a 
    length(X)-by-3 matrix, it directly specifies the colors of the  
    markers as RGB values. C can also be a color string. See ColorSpec.
 
    <strong>scatter</strong>(X,Y) draws the markers in the default size and color.
    <strong>scatter</strong>(X,Y,S) draws the markers at the specified sizes (S)
    with a single color. This type of graph is also known as
    a bubble plot.
    <strong>scatter</strong>(...,M) uses the marker M instead of 'o'.
    <strong>scatter</strong>(...,'filled') fills the markers.
 
    <strong>scatter</strong>(AX,...) plots into AX instead of GCA.
 
    H = <strong>scatter</strong>(...) returns handles to the scatter objects created.
 
    Use PLOT for single color, single marker size scatter plots.
 
    Example
      load seamount
      scatter(x,y,5,z)
 
    See also <a href="matlab:help scatter3">scatter3</a>, <a href="matlab:help plot">plot</a>, <a href="matlab:help PlotMatrix">PlotMatrix</a>.

    Reference page in Help browser
       <a href="matlab:doc scatter">doc scatter</a>

which scatter
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/scatter.m

which 10
'10' not found.

which scatter
/usr/local/share/matlab/R2011b/toolbox/matlab/specgraph/scatter.m

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
c(1) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,2));
c(2) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,3));
set(c,'color','w');
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),10,'m','fill');
xlim([-500,500]);
ylim([-500,500]);
clear('c');
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
c(1) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,2));
c(2) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,3));
set(c,'color','w');
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
xlim([-500,500]);
ylim([-500,500]);
clear('c');
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_fponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing onset/offsets'],...
              {no_pre_rear_rearon,no_fol_rear_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']},...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               4,... number of partitions
               pfMaxPos,1);
frccg = Bccg.filter(gausswin(3));

hfig = figure;
unit = 1;
nStates = 1

nStates =

     1

k = 1;
i = 1;
while 1,
    subplot(nStates,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,1,:))'),axis xy
    axis tight,
    subplot(nStates,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,2,:))'),axis xy
    axis tight,
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
c(1) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,2));
c(2) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,3));
set(c,'color','w');
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
xlim([-500,500]);
ylim([-500,500]);
clear('c');
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end

hfig = figure;
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
for i = 1:nStates
    subplot(nStates,ncol,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
    axis tight,
    subplot(nStates,ncol,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
    axis tight,
end
subplot(nStates,ncol,k+2),hold on
pfw.plot(unit)
for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
end
set(c,'color','w');
scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
xlim([-500,500]);
ylim([-500,500]);
clear('c');
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which print
/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/print.m

which 2993
'2993' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which print
/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/print.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
display_mode = 'report';
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
    for i = 1:nStates
        subplot(nStates,ncol,k(i)),
        bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
        axis tight,
        subplot(nStates,ncol,k(i)+1),
        bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
        axis tight,
    end
    subplot(nStates,ncol,k+2),hold on
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    title([Bccg.name ' ' num2str(unit)])
    switch display_mode
      case 'report'
        set(gcf,'CurrentCharacter','n');
        reportfig(hfig,[Trial.filebase '.ccg.rfilt4p'],[],['unit: ' num2str(unit)],[],0);
        print(hfig,'-depsc2','-r200',['/data/homes/gravio/mrep/rfilt4p/' ...
                            Trial.name '\' Trial.name '.rfilt4p.' ...
                            num2str(unit) '.eps'])
        print(hfig,'-dpng',['/data/homes/gravio/mrep/rfilt4p/' ...
                            Trial.name '\' Trial.name '.rfilt4p.' ...
                            num2str(unit) '.png'])
        unit = unit+1;
        if unit > numClu, return,end
      case 'display'
        unit = figure_controls(unit);
        if unit==-1;return,end
    end
end
{Error using name (line 104)
Cannot create output file
'/data/homes/gravio/mrep/rfilt4p/jg05-20120309/jg05-20120309.rfilt4p.1.eps'

Error in print (line 206)
    pj = name( pj );
} 
which reportfig
/data/homes/share/matlab/labbox/Helper/reportfig.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

display_mode = 'report';
unit = 1;
nStates = Bccg.partitions;
k = 1:ncol:nStates*ncol;
i = 1;
ncol = 3;
while 1,
    for i = 1:nStates
        subplot(nStates,ncol,k(i)),
        bar(Bccg.tbin,frccg(:,unit,1,i)),axis xy
        axis tight,
        subplot(nStates,ncol,k(i)+1),
        bar(Bccg.tbin,frccg(:,unit,2,i)),axis xy
        axis tight,
    end
    subplot(nStates,ncol,k+2),hold on
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    title([Bccg.name ' ' num2str(unit)])
    switch display_mode
      case 'report'
        set(gcf,'CurrentCharacter','n');
        reportfig(hfig,[Trial.filebase '.ccg.rfilt4p'],[],['unit: ' num2str(unit)],[],0);
        print(hfig,'-depsc2','-r200',['/data/homes/gravio/mrep/rfilt4p/' ...
                            Trial.name '.rfilt4p.' ...
                            num2str(unit) '.eps'])
        print(hfig,'-dpng',['/data/homes/gravio/mrep/rfilt4p/' ...
                            Trial.name '.rfilt4p.' ...
                            num2str(unit) '.png'])
        unit = unit+1;
        if unit > numClu, return,end
      case 'display'
        unit = figure_controls(unit);
        if unit==-1;return,end
    end
end
adding to existing report
{Undefined function or variable 'numClu'.
} 
which title
/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/title.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which seconds
'seconds' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


wper = Trial.Bhv.getState('rear').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  rper([1;gwperind+1],1); 
disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('help NearestNe'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'NearestNeighbour'


 

help NearestNeighbour
 function [xx xi yi] = <strong>NearestNeighbour</strong>(x,y,side, maxdist)
 look for the closest neighbours: value (xx) and index (xi) in x
  of every element of y from the side ('left','right','both')
  within maxdist (in same units as x and y)
  returns xx - values of x which conform criteria, xi = indices of those
  yi - indices of y which have neighbours that conform the criteria
 ..maybe already exists but couldn't find

disp(matlabroot)
/usr/local/share/matlab/R2011b

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which npwon
'npwon' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

which NearestNeighbour
/data/homes/share/matlab/labbox/Helper/NearestNeighbour.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_fol
'no_fol' not found.

which no_fol
'no_fol' not found.

which no_fol
'no_fol' not found.

which no_fol
'no_fol' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_fol'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_fol_rear_rearoff'
    'no_fol_walk_walkoff'


 

which no_fol_rear_rearoff
no_fol_rear_rearoff is a variable.

which no_fol_walk_walkoff
no_fol_walk_walkoff is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_pre
'no_pre' not found.

which no_pre
'no_pre' not found.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_rear_rearon'
    'no_pre_walk_walkon'


 

which no_pre_rear_rearon
no_pre_rear_rearon is a variable.

which no_pre_walk_walkon
no_pre_walk_walkon is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre_walk_walkon'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_walk_walkon'


 

which no_pre_walk_walkon
no_pre_walk_walkon is a variable.

[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
nfroffi

nfroffi =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    21
    23
    24
    25
    26
    27
    28
    29
    30
    31
    32
    33
    34
    34

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('pnwon'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

npwoni

npwoni =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24
    25
    26
    27
    28
    29
    30
    31
    32
    33
    34
    35

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_rear_rearon'
    'no_pre_walk_walkon'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre_wa'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_walk_walkon'


 

no_pre_walk_walkon

no_pre_walk_walkon =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

length(no_pre_walk_walkon)

ans =

    35

which gwperind
gwperind is a variable.

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('nfroff'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'nfroffi'


 

nfroffi

nfroffi =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    21
    23
    24
    25
    26
    27
    28
    29
    30
    31
    32
    33
    34
    34

wper = Trial.Bhv.getState('rear').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  rper([1;gwperind+1],1); 
nfroffi

nfroffi =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    21
    23
    24
    25
    26
    27
    28
    29
    30
    31
    32
    33
    34
    34

no_pre_walk_walkon

no_pre_walk_walkon =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_pre'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_pre_rear_rearon'
    'no_pre_walk_walkon'


 

wper = Trial.Bhv.getState('walk').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  rper([1;gwperind+1],1); 
{Index exceeds matrix dimensions.
} 
no_pre_walk_walkon =  wper([1;gwperind+1],1); 
no_pre_walk_walkon

no_pre_walk_walkon =

           1
        2115
        4372
        6124
       10170
       12942
       16430
       17280
       17823
       22918
       47808
       48665
       50682
       52063
       53953
       55143
       57589
       58506
       59821
       60296
       62271
       66693
       68640
       69595
       70258
       74361
       75249
       97616
      100181
      103165
      105408
      106917
      107512
      109105
      109769
      114307
      114940
      116147
      116773
      120103
      121968
      123124
      129000
      130241
      130781
      133355
      252730
      254787
      255450
      257219
      258735
      281753
      283431
      285085
      286225
      287266
      291007
      293600
      295172
      299939
      301611
      302499
      303118
      303845
      305689
      306730
      308788
      310170
      311587
      325639
      326406
      328120
      329213
      330247
      332064
      334885
      336012
      362040
      369606
      410287
      411769
      413453
      492256
      644348
      761000
      780140
      781000
      782581
      783439
      785599
      786763
      788274
      789083
      791610
      793258
      796826
      797906
      799085
      799935
      800727
      803887
      804717
      806772
      821024
      821712
      824470
      825014
      826430
      829569
      831402
      837473
      839264
      841103
      841986
      844048


[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('whos nfr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'nfroffi'


 

whos nfroffi
  Name           Size            Bytes  Class     Attributes

  nfroffi      115x1               920  double              

disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('whos npw'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'npwoni'


 

whos npwoni
  Name          Size            Bytes  Class     Attributes

  npwoni      115x1               920  double              

npwoni

npwoni =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    18
    19
    20
    21
    22
    23
    24
    25
    26
    27
    28
    29
    30
    31
    32
    33
    34
    35
    36
    37
    38
    39
    40
    41
    42
    43
    44
    45
    46
    47
    48
    49
    50
    51
    52
    53
    54
    55
    56
    57
    58
    59
    60
    61
    62
    63
    64
    65
    66
    67
    68
    69
    70
    71
    72
    73
    74
    75
    76
    77
    78
    79
    80
    81
    82
    83
    84
    85
    86
    87
    88
    89
    90
    91
    92
    93
    94
    95
    96
    97
    98
    99
   100
   101
   102
   103
   104
   105
   106
   107
   108
   109
   110
   111
   112
   113
   114
   115

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

nfroffi

nfroffi =

     1
     2
     4
     5
     7
     8
     8
     8
     8
     8
     9
     9
     9
     9
     9
     9
    10
    10
    11
    11
    12
    13
    13
    13
    13
    13
    13
    14
    16
    16
    17
    17
    17
    17
    17
    18
    18
    18
    18
    18
    18
    19
    19
    19
    19
    19
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    21
    21
    21
    22
    22
    22
    22
    23
    23
    23
    24
    24
    24
    25
    25
    25
    25
    25
    25
    25
    25
    25
    25
    25
    26
    26
    27
    27
    27
    27
    29
    29
    30
    30
    30
    30
    30
    30
    30
    30
    30
    30
    30
    31
    31
    31
    33
    33
    33
    34
    34
    34
    34
    34
    34
    34

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

interwrdur = no_fol_rear_rearoff(nfroffi)-no_pre_walk_walkon(npwoni);
interwrdur

interwrdur =

         946
         -66
         -61
         -54
         628
        1122
       -2366
       -3216
       -3759
       -8854
        5431
        4574
        2557
        1176
        -714
       -1904
         762
        -155
         440
         -35
        -142
       -2609
       -4556
       -5511
       -6174
      -10277
      -11165
         458
         -31
       -3015
        1053
        -456
       -1051
       -2644
       -3308
        2426
        1793
         586
         -40
       -3370
       -5235
        5545
        -331
       -1572
       -2112
       -4686
       40330
       38273
       37610
       35841
       34325
       11307
        9629
        7975
        6835
        5794
        2053
        -540
       -2112
        2135
         463
        -425
         670
         -57
       -1901
       -2942
        1304
         -78
       -1495
        1786
        1019
        -695
         988
         -46
       -1863
       -4684
       -5811
      -31839
      -39405
      -80086
      -81568
      -83252
     -162055
      118770
        2118
        2945
        2085
         504
        -354
        -703
       -1867
        3284
        2475
         -52
       -1700
       -5268
       -6348
       -7527
       -8377
       -9169
      -12329
      -13159
       14835
         583
        -105
        -336
        -880
       -2296
        -257
       -2090
       -8161
       -9952
      -11791
      -12674
      -14736

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

interwrdur = no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi);
interwrdur

interwrdur =

        -946
          66
          61
          54
        -628
       -1122
        2366
        3216
        3759
        8854
       -5431
       -4574
       -2557
       -1176
         714
        1904
        -762
         155
        -440
          35
         142
        2609
        4556
        5511
        6174
       10277
       11165
        -458
          31
        3015
       -1053
         456
        1051
        2644
        3308
       -2426
       -1793
        -586
          40
        3370
        5235
       -5545
         331
        1572
        2112
        4686
      -40330
      -38273
      -37610
      -35841
      -34325
      -11307
       -9629
       -7975
       -6835
       -5794
       -2053
         540
        2112
       -2135
        -463
         425
        -670
          57
        1901
        2942
       -1304
          78
        1495
       -1786
       -1019
         695
        -988
          46
        1863
        4684
        5811
       31839
       39405
       80086
       81568
       83252
      162055
     -118770
       -2118
       -2945
       -2085
        -504
         354
         703
        1867
       -3284
       -2475
          52
        1700
        5268
        6348
        7527
        8377
        9169
       12329
       13159
      -14835
        -583
         105
         336
         880
        2296
         257
        2090
        8161
        9952
       11791
       12674
       14736

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

interwrdur = abs(no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi));
interwrdur

interwrdur =

         946
          66
          61
          54
         628
        1122
        2366
        3216
        3759
        8854
        5431
        4574
        2557
        1176
         714
        1904
         762
         155
         440
          35
         142
        2609
        4556
        5511
        6174
       10277
       11165
         458
          31
        3015
        1053
         456
        1051
        2644
        3308
        2426
        1793
         586
          40
        3370
        5235
        5545
         331
        1572
        2112
        4686
       40330
       38273
       37610
       35841
       34325
       11307
        9629
        7975
        6835
        5794
        2053
         540
        2112
        2135
         463
         425
         670
          57
        1901
        2942
        1304
          78
        1495
        1786
        1019
         695
         988
          46
        1863
        4684
        5811
       31839
       39405
       80086
       81568
       83252
      162055
      118770
        2118
        2945
        2085
         504
         354
         703
        1867
        3284
        2475
          52
        1700
        5268
        6348
        7527
        8377
        9169
       12329
       13159
       14835
         583
         105
         336
         880
        2296
         257
        2090
        8161
        9952
       11791
       12674
       14736

find(interwrdur>3*Trial.xyzSampleRate);
disp(matlabroot)
/usr/local/share/matlab/R2011b

find(interwrdur>3*Trial.xyzSampleRate)

ans =

     1
     5
     6
     7
     8
     9
    10
    11
    12
    13
    14
    15
    16
    17
    19
    22
    23
    24
    25
    26
    27
    28
    30
    31
    32
    33
    34
    35
    36
    37
    38
    40
    41
    42
    44
    45
    46
    47
    48
    49
    50
    51
    52
    53
    54
    55
    56
    57
    58
    59
    60
    61
    62
    63
    65
    66
    67
    69
    70
    71
    72
    73
    75
    76
    77
    78
    79
    80
    81
    82
    83
    84
    85
    86
    87
    88
    90
    91
    92
    93
    95
    96
    97
    98
    99
   100
   101
   102
   103
   104
   107
   108
   110
   111
   112
   113
   114
   115

find(interwrdur<3*Trial.xyzSampleRate)

ans =

     2
     3
     4
    18
    20
    21
    29
    39
    43
    64
    68
    74
    89
    94
   105
   106
   109

disp(matlabroot)
/usr/local/share/matlab/R2011b

gwrperind = find(interwrdur<3*Trial.xyzSampleRate);
disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfw
pfw is a variable.

which gwrperind
gwrperind is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which gwrperind
gwrperind is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which unique
/usr/local/share/matlab/R2011b/toolbox/matlab/ops/unique.m

badr = unique(nfroffi);
nfroffi

nfroffi =

     1
     2
     4
     5
     7
     8
     8
     8
     8
     8
     9
     9
     9
     9
     9
     9
    10
    10
    11
    11
    12
    13
    13
    13
    13
    13
    13
    14
    16
    16
    17
    17
    17
    17
    17
    18
    18
    18
    18
    18
    18
    19
    19
    19
    19
    19
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    20
    21
    21
    21
    22
    22
    22
    22
    23
    23
    23
    24
    24
    24
    25
    25
    25
    25
    25
    25
    25
    25
    25
    25
    25
    26
    26
    27
    27
    27
    27
    29
    29
    30
    30
    30
    30
    30
    30
    30
    30
    30
    30
    30
    31
    31
    31
    33
    33
    33
    34
    34
    34
    34
    34
    34
    34

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfw
pfw is a variable.

badr = unique(nfroffi);
badr

badr =

     1
     2
     4
     5
     7
     8
     9
    10
    11
    12
    13
    14
    16
    17
    18
    19
    20
    21
    22
    23
    24
    25
    26
    27
    29
    30
    31
    33
    34

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroffi(bwrperind));
badr

badr =

     2
     4
     5
    10
    11
    12
    16
    18
    19
    22
    23
    25
    27
    30
    31
    33
    34

disp(matlabroot)
/usr/local/share/matlab/R2011b

size(badr)

ans =

    17     1

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which new_no_fol_rear_rearoff
'new_no_fol_rear_rearoff' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_fol_rearwalk_rearoff
'no_fol_rearwalk_rearoff' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_fol_rearwalk_rearoff
'no_fol_rearwalk_rearoff' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_fol_rearwalk_rearoff
'no_fol_rearwalk_rearoff' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

no_fol_rearwalk_rearoff(badr) = [];
{Index of element to remove exceeds matrix dimensions.
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

no_fol_rearwalk_rearoff = no_fol_rear_rearoff;
no_fol_rearwalk_rearoff(badr) = [];
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_fol'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_fol_rear_rearoff'
    'no_fol_rearwalk_rearoff'
    'no_fol_walk_walkoff'


 

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('no_fol_rearw'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'no_fol_rearwalk_rearoff'


 

no_fol_rearwalk_rearoff

no_fol_rearwalk_rearoff =

         947
        3181
        9382
       10798
       14064
       53239
       64084
       98074
       99024
      106461
      293060
      302074
      327425
      763118
      784238
      784896
      822951

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which no_pre_rearwalk_rearon
'no_pre_rearwalk_rearon' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which interwrdur
interwrdur is a variable.

which no_pre_walk_walkon
no_pre_walk_walkon is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b


[~,nfroni,npwoffi] = NearestNeighbour(no_pre_rear_rearon,no_fol_walk_walkoff);
interwrdur = abs(no_fol_walk_walkoff(npwoffi)-no_pre_rear_rearon(nfroni));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroni(bwrperind));
no_pre_rearwalk_rearon = no_pre_rear_rearon;
no_pre_rearwalk_rearon(badr) = [];
no_pre_rearwalk_rearon

no_pre_rearwalk_rearon =

        1916
        3031
        9043
       10521
       13689
       53067
       64005
       97443
       98845
      115933
      128482
      292714
      762385
      784008
      784689
      822288
      824071
      828384

which pfw
pfw is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_frwponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing or walking onset/offsets'],...
              {no_pre_rearwalk_rearon,no_fol_rearwalk_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']},...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               4,... number of partitions
               pfMaxPos,1);
{Operation terminated by user during LoadCluRes (line 64)

In MTASession/load_CluRes (line 769)
            [Res Clu Map] = LoadCluRes([Session.spath.nlx Session.name]);

In MTAccg (line 41)
        if ~isempty(Session.clu), Session = Session.load_CluRes();end
} 
frccg = Bccg.filter(gausswin(3));
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_frwponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing or walking onset/offsets'],...
              {no_pre_rearwalk_rearon,no_fol_rearwalk_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']},...
               0)

Bccg = 

  MTAccg

  Properties:
                 mazeName: 'cof'
                trialName: 'all'
                     name: 'shake_filtered_frwponoff'
                   method: 'normal'
              Description: [1x100 char]
                  CluTags: {'shake_onset_filt'  'shake_offset_filt'}
                     tbin: [1x101 double]
                      ccg: [101x112x2 double]
                   posind: {2x1 cell}
                   cluMap: [112x3 double]
                  binSize: 100
                 halfBins: 50
            normalization: 'hz'
            numIterations: 1
    surrogate_sample_size: []
               partitions: 1
        partition_feature: {}
     partition_boundaries: {}


frccg = Bccg.filter(gausswin(3));

hfig = figure;
unit = 1;
nStates = 1

nStates =

     1

k = 1;
i = 1;
while 1,
    subplot(nStates,2,k(i)),
    bar(Bccg.tbin,frccg(:,unit,1)),
    axis tight,
    subplot(nStates,2,k(i)+1),
    bar(Bccg.tbin,frccg(:,unit,2)),
    axis tight,
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Index exceeds matrix dimensions.
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which BHVccg0315
BHVccg0315 is a variable.

Trial = MTATrial('jg05-20120309',{'CluRes'},'all');
non_immobile_bhvs = {'rear','walk','turnR','turnL','groom'};
iper = [1,size(Trial.xyz,1)];
for i = 1:length(non_immobile_bhvs),
iper = SubstractRanges(iper,Trial.Bhv.getState(non_immobile_bhvs(i)).state);
end
Trial.Bhv = Trial.Bhv.addState('i','immobile',iper);
iperdur = diff(Trial.Bhv.getState('immobile').state,1,2);
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

help min
 <strong>min</strong>    Smallest component.
    For vectors, <strong>min</strong>(X) is the smallest element in X. For matrices,
    <strong>min</strong>(X) is a row vector containing the minimum element from each
    column. For N-D arrays, <strong>min</strong>(X) operates along the first
    non-singleton dimension.
 
    [Y,I] = <strong>min</strong>(X) returns the indices of the minimum values in vector I.
    If the values along the first non-singleton dimension contain more
    than one minimal element, the index of the first one is returned.
 
    <strong>min</strong>(X,Y) returns an array the same size as X and Y with the
    smallest elements taken from X or Y. Either one can be a scalar.
 
    [Y,I] = <strong>min</strong>(X,[],DIM) operates along the dimension DIM.
 
    When X is complex, the minimum is computed using the magnitude
    <strong>min</strong>(ABS(X)). In the case of equal magnitude elements, then the phase
    angle <strong>min</strong>(ANGLE(X)) is used.
 
    NaN's are ignored when computing the minimum. When all elements in X
    are NaN's, then the first one is returned as the minimum.
 
    Example: If X = [2 8 4   then min(X,[],1) is [2 3 4],
                     7 3 9]
 
        min(X,[],2) is [2    and min(X,5) is [2 5 4
                        3],                   5 3 5].
 
    See also <a href="matlab:help max">max</a>, <a href="matlab:help median">median</a>, <a href="matlab:help mean">mean</a>, <a href="matlab:help sort">sort</a>.

    Overloaded methods:
       <a href="matlab:help codistributed/min">codistributed/min</a>
       <a href="matlab:help ordinal/min">ordinal/min</a>
       <a href="matlab:help timeseries/min">timeseries/min</a>

    Reference page in Help browser
       <a href="matlab:doc min">doc min</a>

which BHVccg0315
BHVccg0315 is a variable.


rper = Trial.Bhv.getState('rear').state;
interrdur = [rper(2:end,1)-rper(1:end-1,2)];
grperind = find(interrdur>3*Trial.xyzSampleRate);
no_fol_rear_rearoff = rper(grperind,2); 
no_pre_rear_rearon =  rper([1;grperind+1],1); 
wper = Trial.Bhv.getState('walk').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  wper([1;gwperind+1],1); 
[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
interwrdur = abs(no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroffi(bwrperind));
no_fol_rearwalk_rearoff = no_fol_rear_rearoff;
no_fol_rearwalk_rearoff(badr) = [];
[~,nfroni,npwoffi] = NearestNeighbour(no_pre_rear_rearon,no_fol_walk_walkoff);
interwrdur = abs(no_fol_walk_walkoff(npwoffi)-no_pre_rear_rearon(nfroni));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroni(bwrperind));
no_pre_rearwalk_rearon = no_pre_rear_rearon;
no_pre_rearwalk_rearon(badr) = [];
pfw = MTAPlaceField(Trial,[],{'walk'},0);
for unit = 1:size(pfw.cluMap,1),
    try
        pfMaxPos(unit,:) = pfw.maxRatePos{unit}(pfw.maxRateMax{unit},:);
    end
end

Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_frwponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing or walking onset/offsets'],...
              {no_pre_rearwalk_rearon,no_fol_rearwalk_rearoff},...
              {[Trial.Bhv.States{i}.label '_onset_filt'],[Trial.Bhv.States{i}.label '_offset_filt']},...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               4,... number of partitions
               pfMaxPos,1);
frccg = Bccg.filter(gausswin(3));

hfig = figure;
unit = 1;
nStates = 1

nStates =

     1

k = 1;
i = 1;
while 1,
    subplot(nStates,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,1,:))'),axis xy
    axis tight,
    subplot(nStates,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,2,:))'),axis xy
    axis tight,
    title([Bccg.name ' ' num2str(unit)])
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 


hfig = figure;
unit = 1;
nStates = length(group_resdescrip);
{Undefined function or variable 'group_resdescrip'.
} 
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
clf
for i = 1:nStates/2
    subplot(nStates/2,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)} ' ' num2str(unit)])
    subplot(nStates/2,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 

hfig = figure;
unit = 1;
nStates = length(group_resdescrip);
{Undefined function or variable 'group_resdescrip'.
} 
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
clf
for i = 1:nStates/2
    subplot(nStates/2,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)} ' ' num2str(unit)])
    subplot(nStates/2,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
hfig = figure;
unit = 1;
nStates = length(group_resdescrip);
{Undefined function or variable 'group_resdescrip'.
} 

rper = Trial.Bhv.getState('rear').state;
interrdur = [rper(2:end,1)-rper(1:end-1,2)];
grperind = find(interrdur>3*Trial.xyzSampleRate);
no_fol_rear_rearoff = rper(grperind,2); 
no_pre_rear_rearon =  rper([1;grperind+1],1); 
wper = Trial.Bhv.getState('walk').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  wper([1;gwperind+1],1); 
[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
interwrdur = abs(no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroffi(bwrperind));
no_fol_rearwalk_rearoff = no_fol_rear_rearoff;
no_fol_rearwalk_rearoff(badr) = [];
ys_fol_rearwalk_rearoff =no_fol_rear_rearoff(badr);
[~,nfroni,npwoffi] = NearestNeighbour(no_pre_rear_rearon,no_fol_walk_walkoff);
interwrdur = abs(no_fol_walk_walkoff(npwoffi)-no_pre_rear_rearon(nfroni));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroni(bwrperind));
no_pre_rearwalk_rearon = no_pre_rear_rearon;
no_pre_rearwalk_rearon(badr) = [];
ys_pre_rearwalk_rearon =no_pre_rear_rearon(badr);
group_resdescrip{1} = 'no_pre_rear_rearon';
group_restrains{1} =   no_pre_rear_rearon;
group_resdescrip{2} = 'no_fol_rear_rearoff';
group_restrains{2} =   no_fol_rear_rearoff;
group_resdescrip{3} = 'no_pre_rearwalk_rearon';
group_restrains{3} =   no_pre_rearwalk_rearon;
group_resdescrip{4} = 'no_fol_rearwalk_rearoff';
group_restrains{4} =   no_fol_rearwalk_rearoff;
group_resdescrip{5} = 'ys_pre_rearwalk_rearon';
group_restrains{5} =   ys_pre_rearwalk_rearon;
group_resdescrip{6} = 'ys_fol_rearwalk_rearoff';
group_restrains{6} =   ys_fol_rearwalk_rearoff;
group_resdescrip{7} = 'no_pre_walk_walkon';
group_restrains{7} =   no_pre_walk_walkon;
group_resdescrip{8} = 'no_fol_walk_walkoff';
group_restrains{8} =   no_fol_walk_walkoff;
which pfw
pfw is a variable.


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_frwponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing or walking onset/offsets'],...
               group_restrains,...
               group_resdescrip,...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               4,... number of partitions
               pfMaxPos,1);
{Bad cell reference operation.
} 
frccg = Bccg.filter(gausswin(3));
i=1

i =

     1


Bccg = MTAccg(Trial,...
              [Trial.Bhv.States{i}.label '_filtered_frwponoff'],...
              ['ccg at ' Trial.Bhv.States{i}.label ' onset and offset filtered for precceding and following rearing or walking onset/offsets'],...
               group_restrains,...
               group_resdescrip,...
               0,... do not add a random number to filename
              'abs_dist',... partition bins by absolute distance from specified centers
               4,... number of partitions
               pfMaxPos,1);
frccg = Bccg.filter(gausswin(3));

hfig = figure;
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
clf
for i = 1:nStates/2
    subplot(nStates/2,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)} ' ' num2str(unit)])
    subplot(nStates/2,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
Enter index #: 88
Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.881035
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: []
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: []
                nq: []
               res: [2903495x1 double]
               clu: [2903495x1 double]
               map: [112x3 double]
           ripples: []


Trial = Trial.load_ufr;
Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.881035
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: []
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: [8874122x112 double]
                nq: []
               res: [2903495x1 double]
               clu: [2903495x1 double]
               map: [112x3 double]
           ripples: []



hfig = figure;
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
clf
for i = 1:nStates/2
    subplot(nStates/2,2,k(i)),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)} ' ' num2str(unit)])
    subplot(nStates/2,2,k(i)+1),
    imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
    axis tight,colorbar
    title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
end
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b

help GetSegs
  [Segs Complete] = <strong>GetSegs</strong>(x, StartPoints, SegLen, IfNotComplete);
 
  extracts multiple segments from a time series x.  x may be a vector
  or a matrix, in which case time is on the first dimension, and channel
  is the second.
 
  StartPoints give the starting times of the segments.
  SegLen gives the length of the segments.  All segments must be
  the same length, and a rectangular array is returned
  (dim 1:time within segment, dim 2: segment number, dim 3:channel);
 
  IfNotComplete specifies what to do if the start or endpoints are outside
  of the range of x.  If a value is specified, any out-of-range points
  are given that number.  If [] is specified, incomplete segments are not
  returned.  A list of complete segments extracted is returned in Complete.
  Default value for IfNotComplete: NaN.

plot(GetSegs(Trial.ufr(:,16),round((group_restrains{6}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0))
figure,plot(GetSegs(Trial.ufr(:,16),round((group_restrains{6}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0))
figure,plot(GetSegs(Trial.ufr(:,16),group_restrains{6}-2*Trial.xyzSampleRate,4*Trial.xyzSampleRate,0))
{Warning: Size vector should be a row vector with integer elements.} 
{> In <a href="matlab: opentoline('/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/repmat.m',84,1)">repmat at 84</a>
  In <a href="matlab: opentoline('/data/homes/share/matlab/labbox/Helper/GetSegs.m',36,1)">GetSegs at 36</a>} 
{Attempted to access (8151.91); index must be a positive integer or logical.

Error in repmat (line 54)
        B(nelems) = A;

Error in GetSegs (line 44)
IndMat = repmat(IndMat1, [1 1 nDims]) ...
} 
whos
  Name                              Size                   Bytes  Class                 Attributes

  BHVccg                            1x8                  1448832  cell                            
  BHVccg0315                        1x8                  1448832  cell                            
  Bccg                              1x1                  3271300  MTAccg                          
  Trial                             1x1               8181540164  MTATrial                        
  ang                          851072x3                 20425728  double                          
  ans                               0x1                           java.lang.String[]              
  badr                             17x1                      136  double                          
  bhvper                          347x2                     5552  double                          
  bsfet                        851072x1                  6808576  double                          
  bwrperind                        17x1                      136  double                          
  comb                         851072x1x3               20425728  double                          
  comh                         851072x1x3               20425728  double                          
  comv                         851071x2                 13617136  double                          
  dbsfet                       851071x1                  6808568  double                          
  display_mode                      1x6                       12  char                            
  f                                85x1                      680  double                          
  frccg                             4-D                  2895872  double                          
  fstat                         48239x85x3              98407560  double                          
  g                                 1x4                       32  double                          
  group_resdescrip                  1x8                     1224  cell                            
  group_restrains                   1x8                     3832  cell                            
  grperind                         34x1                      272  double                          
  gwperind                        114x1                      912  double                          
  gwrperind                        17x1                      136  double                          
  hang                              1x1                 81703984  struct                          
  hfig                              1x1                        8  double                          
  i                                 1x1                        8  double                          
  interrdur                        40x1                      320  double                          
  interwdur                       238x1                     1904  double                          
  interwrdur                      114x1                      912  double                          
  iper                            347x2                     5552  double                          
  iperdur                         347x1                     2776  double                          
  k                                 1x8                       64  double                          
  lwin                              1x1                        8  double                          
  nStates                           1x1                        8  double                          
  ncol                              1x1                        8  double                          
  nfet                         851072x1                  6808576  double                          
  nfroffi                         115x1                      920  double                          
  nfroni                          114x1                      912  double                          
  nn                           851072x1                   851072  logical                         
  no_fol_rear_rearoff              34x1                      272  double                          
  no_fol_rearwalk_rearoff          17x1                      136  double                          
  no_fol_walk_walkoff             114x1                      912  double                          
  no_pre_rear_rearon               35x1                      280  double                          
  no_pre_rearwalk_rearon           18x1                      144  double                          
  no_pre_walk_walkon              115x1                      920  double                          
  non_immobile_bhvs                 1x5                      606  cell                            
  npwoffi                         114x1                      912  double                          
  npwoni                          115x1                      920  double                          
  num_fet                           1x1                        8  double                          
  pfMaxPos                        112x2                     1792  double                          
  pfsearch                          1x1                      104  MTAPlaceField                   
  pfw                               1x1                  4567168  MTAPlaceField                   
  phi                               4-D                295222680  double                          
  rper                             41x2                      656  double                          
  s                                 1x1               4343899334  MTATrial                        
  sfet                         851072x4                 27234304  double                          
  swin                              1x1                        8  double                          
  t                             48239x1                   385912  double                          
  tsfet                        851072x1                  6808576  double                          
  unit                              1x1                        8  double                          
  v                            851071x9                 61277112  double                          
  wang                         771951x3                 18526824  double                          
  win                               1x1                        8  double                          
  wper                            239x2                     3824  double                          
  xyz                          851072x9x3              183831552  double                          
  yc                                4-D                295222680  double                          
  ys_fol_rearwalk_rearoff          17x1                      136  double                          
  ys_pre_rearwalk_rearon           17x1                      136  double                          

figure,plot(GetSegs(sq(sqrt(sum(diff(Trial.xyz(:,7,:)).^2,3))),group_restrains{6}-2*Trial.xyzSampleRate,4*Trial.xyzSampleRate,0))
{Warning: Size vector should be a row vector with integer elements.} 
{> In <a href="matlab: opentoline('/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/repmat.m',84,1)">repmat at 84</a>
  In <a href="matlab: opentoline('/data/homes/share/matlab/labbox/Helper/GetSegs.m',36,1)">GetSegs at 36</a>} 
{Attempted to access (8151.91); index must be a positive integer or logical.

Error in repmat (line 54)
        B(nelems) = A;

Error in GetSegs (line 44)
IndMat = repmat(IndMat1, [1 1 nDims]) ...
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('group_restr'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'group_restrains'


 

group_restrains{6}

ans =

        2049
        4311
        6070
       58351
       60261
       62129
      100150
      116733
      128669
      303788
      310092
      330201
      783085
      791558
      821607
      824134
      829312

size(sq(sqrt(sum(diff(Trial.xyz(:,7,:)).^2,3))))

ans =

      851071           1

figure,plot(GetSegs(sq(sqrt(sum(diff(Trial.xyz(:,7,:)).^2,3))),round(group_restrains{6}-2*Trial.xyzSampleRate),4*Trial.xyzSampleRate,0))
{Warning: Size vector should be a row vector with integer elements.} 
{> In <a href="matlab: opentoline('/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/repmat.m',84,1)">repmat at 84</a>
  In <a href="matlab: opentoline('/data/homes/share/matlab/labbox/Helper/GetSegs.m',36,1)">GetSegs at 36</a>} 
{Attempted to access (8151.91); index must be a positive integer or logical.

Error in repmat (line 54)
        B(nelems) = A;

Error in GetSegs (line 44)
IndMat = repmat(IndMat1, [1 1 nDims]) ...
} 
round(group_restrains{6}-2*Trial.xyzSampleRate)

ans =

        1809
        4071
        5830
       58111
       60021
       61889
       99910
      116493
      128429
      303548
      309852
      329961
      782845
      791318
      821367
      823894
      829072

figure,plot(GetSegs(sq(sqrt(sum(diff(Trial.xyz(:,7,:)).^2,3))),round(group_restrains{6}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0))
disp(matlabroot)
/usr/local/share/matlab/R2011b

which sq
/data/homes/share/matlab/labbox/Helper/sq.m

which sq
/data/homes/share/matlab/labbox/Helper/sq.m

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which xyz
xyz is a variable.

which xyz
xyz is a variable.

which v
v is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


win = 7;
comb = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'spine_lower','pelvis_root','spine_middle','spine_upper'})));
comh = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'head_back','head_left','head_front','head_right'})));
combv = sqrt(sum(diff(comb(:,[1,2])).^2,2));
comhv = sqrt(sum(diff(comh(:,[1,2])).^2,2));
disp(matlabroot)
/usr/local/share/matlab/R2011b

which figure
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/figure)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which GetSegs
/data/homes/share/matlab/labbox/Helper/GetSegs.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which GetSegs
/data/homes/share/matlab/labbox/Helper/GetSegs.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which GetSegs
/data/homes/share/matlab/labbox/Helper/GetSegs.m

ufrsegs = GetSegs(Trial.ufr(:,16),round((group_restrains{6}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0);
disp(matlabroot)
/usr/local/share/matlab/R2011b


chvsegs = GetSegs(comhv,round(group_restrains{6}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0);
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 16
'16' not found.

which 16
'16' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


ufrsegs = {};
chvsegs = {};
for i = 1:length(group_restrains),
ufrsegs{i} = GetSegs(Trial.ufr(:,16),round((group_restrains{i}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0);
chvsegs{i} = GetSegs(comhv,round(group_restrains{i}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0);
end
whos
  Name                              Size                   Bytes  Class                 Attributes

  BHVccg                            1x8                  1448832  cell                            
  BHVccg0315                        1x8                  1448832  cell                            
  Bccg                              1x1                  3271300  MTAccg                          
  Trial                             1x1               8181540164  MTATrial                        
  ang                          851072x3                 20425728  double                          
  ans                               0x1                           java.lang.String[]              
  badr                             17x1                      136  double                          
  bhvper                          347x2                     5552  double                          
  bsfet                        851072x1                  6808576  double                          
  bwrperind                        17x1                      136  double                          
  chvsegs                           1x8                  1410176  cell                            
  comb                         851072x3                 20425728  double                          
  combv                        851071x1                  6808568  double                          
  comh                         851072x3                 20425728  double                          
  comhv                        851071x1                  6808568  double                          
  comv                         851071x2                 13617136  double                          
  dbsfet                       851071x1                  6808568  double                          
  display_mode                      1x6                       12  char                            
  f                                85x1                      680  double                          
  frccg                             4-D                  2895872  double                          
  fstat                         48239x85x3              98407560  double                          
  g                                 1x4                       32  double                          
  group_resdescrip                  1x8                     1224  cell                            
  group_restrains                   1x8                     3832  cell                            
  grperind                         34x1                      272  double                          
  gwperind                        114x1                      912  double                          
  gwrperind                        17x1                      136  double                          
  hang                              1x1                 81703984  struct                          
  hfig                              1x1                        8  double                          
  i                                 1x1                        8  double                          
  interrdur                        40x1                      320  double                          
  interwdur                       238x1                     1904  double                          
  interwrdur                      114x1                      912  double                          
  iper                            347x2                     5552  double                          
  iperdur                         347x1                     2776  double                          
  k                                 1x8                       64  double                          
  lwin                              1x1                        8  double                          
  nStates                           1x1                        8  double                          
  ncol                              1x1                        8  double                          
  nfet                         851072x1                  6808576  double                          
  nfroffi                         115x1                      920  double                          
  nfroni                          114x1                      912  double                          
  nn                           851072x1                   851072  logical                         
  no_fol_rear_rearoff              34x1                      272  double                          
  no_fol_rearwalk_rearoff          17x1                      136  double                          
  no_fol_walk_walkoff             114x1                      912  double                          
  no_pre_rear_rearon               35x1                      280  double                          
  no_pre_rearwalk_rearon           18x1                      144  double                          
  no_pre_walk_walkon              115x1                      920  double                          
  non_immobile_bhvs                 1x5                      606  cell                            
  npwoffi                         114x1                      912  double                          
  npwoni                          115x1                      920  double                          
  num_fet                           1x1                        8  double                          
  pfMaxPos                        112x2                     1792  double                          
  pfsearch                          1x1                      104  MTAPlaceField                   
  pfw                               1x1                  4567168  MTAPlaceField                   
  phi                               4-D                295222680  double                          
  rper                             41x2                      656  double                          
  s                                 1x1               4343899334  MTATrial                        
  sfet                         851072x4                 27234304  double                          
  swin                              1x1                        8  double                          
  t                             48239x1                   385912  double                          
  tsfet                        851072x1                  6808576  double                          
  ufrsegs                           1x8                 14680896  cell                            
  unit                              1x1                        8  double                          
  v                            851071x9                 61277112  double                          
  wang                         771951x3                 18526824  double                          
  win                               1x1                        8  double                          
  wper                            239x2                     3824  double                          
  xyz                          851072x9x3              183831552  double                          
  yc                                4-D                295222680  double                          
  ys_fol_rearwalk_rearoff          17x1                      136  double                          
  ys_pre_rearwalk_rearon           17x1                      136  double                          

clear s
size(ufrsegs{6})

ans =

        5000          17

size(chvsegs{6})

ans =

   480    17

5000/480

ans =

          10.4166666666667

Trial.lfpSampleRate/Trial.xyzSampleRate

ans =

          10.4270037374969

size(Trial.lfpSampleRate/Trial.xyzSampleRate:Trial.lfpSampleRate/Trial.xyzSampleRate:5000)

ans =

     1   479

size(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:5000)

ans =

     1   480

disp(matlabroot)
/usr/local/share/matlab/R2011b

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.881035
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: []
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: [8874122x112 double]
                nq: []
               res: [2903495x1 double]
               clu: [2903495x1 double]
               map: [112x3 double]
           ripples: []


which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


for i = 1:length(group_restrains),
ufrsegs{i} = ufrsegs{i}(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:ufrslen,:);
end
{Undefined function or variable 'ufrslen'.
} 
ufrslen = size(ufrsegs{1},1)

ufrslen =

        5000

ufrslen = size(ufrsegs{1},1)

ufrslen =

        5000

chvslen = size(chvsegs{1},1)

chvslen =

   480


for i = 1:length(group_restrains),
ufrsegs{i} = ufrsegs{i}(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:ufrslen,:);
end
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
{Warning: Integer operands are required for colon operator when used as index} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

figure,plot(ufrsegs{6})
figure,plot(ufrsegs{6},chvsegs{6},'.')

ufrsegs = {};
chvsegs = {};
for i = 1:length(group_restrains),
ufrsegs{i} = GetSegs(Trial.ufr(:,16),round((group_restrains{i}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0);
chvsegs{i} = GetSegs(diff(comhv),round(group_restrains{i}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0);
end
ufrslen = size(ufrsegs{1},1)

ufrslen =

        5000

chvslen = size(chvsegs{1},1)

chvslen =

   480

for i = 1:length(group_restrains),
ufrsegs{i} = ufrsegs{i}(round(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:ufrslen),:);
end

figure,plot(ufrsegs{6},chvsegs{6},'.')
disp(matlabroot)
/usr/local/share/matlab/R2011b

which figure
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/figure)

disp(matlabroot)
/usr/local/share/matlab/R2011b

figure,plot(mean(ufrsegs{6},2),mean(chvsegs{6},2),'.')
disp(matlabroot)
/usr/local/share/matlab/R2011b

which figure
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/figure)

for i = 1:length(group_restrains),
figure,plot(mean(ufrsegs{6},2),mean(chvsegs{6},2),'.')
end

for i = 1:length(group_restrains),
figure,plot(mean(ufrsegs{i},2),mean(chvsegs{i},2),'.')
end
close all
which 7
'7' not found.

which win
win is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

win = 241;
comb = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'spine_lower','pelvis_root','spine_middle','spine_upper'})));
comh = Filter0(gausswin(win)./sum(gausswin(win)),Trial.com(Trial.Model.rb({'head_back','head_left','head_front','head_right'})));
combv = sqrt(sum(diff(comb(:,[1,2])).^2,2));
comhv = sqrt(sum(diff(comh(:,[1,2])).^2,2));
ufrsegs = {};
chvsegs = {};
for i = 1:length(group_restrains),
ufrsegs{i} = GetSegs(Trial.ufr(:,16),round((group_restrains{i}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0);
chvsegs{i} = GetSegs(diff(comhv),round(group_restrains{i}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0);
end
ufrslen = size(ufrsegs{1},1);
chvslen = size(chvsegs{1},1);
for i = 1:length(group_restrains),
ufrsegs{i} = ufrsegs{i}(round(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:ufrslen),:);
end
figure,plot(ufrsegs{6},chvsegs{6},'.')
for i = 1:length(group_restrains),
figure,plot(mean(ufrsegs{i},2),mean(chvsegs{i},2),'.')
end
which end
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/lang/end)

which round
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elfun/@double/round)  % double method

disp(matlabroot)
/usr/local/share/matlab/R2011b

which ufrsegs
ufrsegs is a variable.


ufrsegs = {};
chvsegs = {};
for i = 1:length(group_restrains),
ufrsegs{i} = GetSegs(Trial.ufr(:,16),round((group_restrains{i}-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate)-2*Trial.lfpSampleRate,4*Trial.lfpSampleRate,0);
chvsegs{i} = GetSegs(abs(diff(comhv)),round(group_restrains{i}-2*Trial.xyzSampleRate),round(4*Trial.xyzSampleRate),0);
end
ufrslen = size(ufrsegs{1},1);
chvslen = size(chvsegs{1},1);
for i = 1:length(group_restrains),
ufrsegs{i} = ufrsegs{i}(round(Trial.lfpSampleRate/Trial.xyzSampleRate/2:Trial.lfpSampleRate/Trial.xyzSampleRate:ufrslen),:);
end
figure,plot(ufrsegs{6},chvsegs{6},'.')
for i = 1:length(group_restrains),
figure,plot(mean(ufrsegs{i},2),mean(chvsegs{i},2),'.')
end
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which 0
'0' not found.

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which 0
'0' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure;
pfig = figure;
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
    clf
    set(0,'CurrentFigure',hfig);
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using set
Invalid handle
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)


hfig = figure(213);
pfig= figure(214);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
while 1,
    set(0,'CurrentFigure',hfig);
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using set
Invalid handle
} 
whos
  Name                              Size                   Bytes  Class            Attributes

  BHVccg                            1x8                  1448832  cell                       
  BHVccg0315                        1x8                  1448832  cell                       
  Bccg                              1x1                  3271300  MTAccg                     
  Trial                             1x1               8181540164  MTATrial                   
  ang                          851072x3                 20425728  double                     
  ans                               1x2                       16  double                     
  badr                             17x1                      136  double                     
  bhvper                          347x2                     5552  double                     
  bsfet                        851072x1                  6808576  double                     
  bwrperind                        17x1                      136  double                     
  c                                 1x3                       24  double                     
  chvsegs                           1x8                  1410176  cell                       
  chvslen                           1x1                        8  double                     
  comb                         851072x3                 20425728  double                     
  combv                        851071x1                  6808568  double                     
  comh                         851072x3                 20425728  double                     
  comhv                        851071x1                  6808568  double                     
  comv                         851071x2                 13617136  double                     
  dbsfet                       851071x1                  6808568  double                     
  display_mode                      1x6                       12  char                       
  f                                85x1                      680  double                     
  frccg                             4-D                  2895872  double                     
  fstat                         48239x85x3              98407560  double                     
  g                                 1x4                       32  double                     
  group_resdescrip                  1x8                     1224  cell                       
  group_restrains                   1x8                     3832  cell                       
  grperind                         34x1                      272  double                     
  gwperind                        114x1                      912  double                     
  gwrperind                        17x1                      136  double                     
  hang                              1x1                 81703984  struct                     
  hfig                              1x1                        8  double                     
  i                                 1x1                        8  double                     
  interrdur                        40x1                      320  double                     
  interwdur                       238x1                     1904  double                     
  interwrdur                      114x1                      912  double                     
  iper                            347x2                     5552  double                     
  iperdur                         347x1                     2776  double                     
  k                                 1x8                       64  double                     
  lwin                              1x1                        8  double                     
  nStates                           1x1                        8  double                     
  ncol                              1x1                        8  double                     
  nfet                         851072x1                  6808576  double                     
  nfroffi                         115x1                      920  double                     
  nfroni                          114x1                      912  double                     
  nn                           851072x1                   851072  logical                    
  no_fol_rear_rearoff              34x1                      272  double                     
  no_fol_rearwalk_rearoff          17x1                      136  double                     
  no_fol_walk_walkoff             114x1                      912  double                     
  no_pre_rear_rearon               35x1                      280  double                     
  no_pre_rearwalk_rearon           18x1                      144  double                     
  no_pre_walk_walkon              115x1                      920  double                     
  non_immobile_bhvs                 1x5                      606  cell                       
  npwoffi                         114x1                      912  double                     
  npwoni                          115x1                      920  double                     
  num_fet                           1x1                        8  double                     
  pfMaxPos                        112x2                     1792  double                     
  pfig                              1x1                        8  double                     
  pfsearch                          1x1                      104  MTAPlaceField              
  pfw                               1x1                  4567168  MTAPlaceField              
  phi                               4-D                295222680  double                     
  rper                             41x2                      656  double                     
  sfet                         851072x4                 27234304  double                     
  swin                              1x1                        8  double                     
  t                             48239x1                   385912  double                     
  tsfet                        851072x1                  6808576  double                     
  ufrsegs                           1x8                  1410176  cell                       
  ufrslen                           1x1                        8  double                     
  unit                              1x1                        8  double                     
  v                            851071x9                 61277112  double                     
  wang                         771951x3                 18526824  double                     
  win                               1x1                        8  double                     
  wper                            239x2                     3824  double                     
  xyz                          851072x9x3              183831552  double                     
  yc                                4-D                295222680  double                     
  ys_fol_rearwalk_rearoff          17x1                      136  double                     
  ys_pre_rearwalk_rearon           17x1                      136  double                     

pfig

pfig =

   214

hfig

hfig =

   213

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)


hfig = figure(213);
pfig= figure(214);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using set
Invalid handle
} 
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b


hfig = figure(213);
pfig= figure(214);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
keyboard
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Error using set
Invalid handle
} 
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

 set(0,'CurrentFigure',pfig);
disp(matlabroot)
/usr/local/share/matlab/R2011b

 set(0,'CurrentFigure',hfig);
clf
 set(0,'CurrentFigure',hfig);
 set(0,'CurrentFigure',pfig);
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

set(0,'CurrentFigure',hfig);
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
set(0,'CurrentFigure',hfig);
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    pfw.plot(unit)
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
{Error using set
Invalid handle
} 
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
c

c =

          559.050048828125          559.050659179688           559.05126953125

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    set(0,'CurrentFigure',pfig);
    clf
    pfw.plot(unit)
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    clf
    pfw.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)


hfig = figure(213);
pfig= figure(214);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    clf
    pfw.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
Enter index #: 88
disp(matlabroot)
/usr/local/share/matlab/R2011b

pfr = MTAPlaceField(Trial,[],{'rear'},0);

hfig = figure(213);
pfig= figure(214);
rfig= figure(215);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    clf
    pfw.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',rfig);
    clf
    pfr.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
Enter index #: 88
{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 
Bccg

Bccg = 

  MTAccg

  Properties:
                 mazeName: 'cof'
                trialName: 'all'
                     name: 'rear_filtered_frwponoff'
                   method: 'abs_dist'
              Description: [1x99 char]
                  CluTags: {1x8 cell}
                     tbin: [1x101 double]
                      ccg: [4-D double]
                   posind: {8x1 cell}
                   cluMap: [112x3 double]
                  binSize: 100
                 halfBins: 50
            normalization: 'hz'
            numIterations: 1
    surrogate_sample_size: []
               partitions: 4
        partition_feature: {8x1 cell}
     partition_boundaries: {8x1 cell}


size(Bccg.posind{1})

ans =

    35     1

Bccg.posind{1}

ans =

         660
        1916
        3031
        4251
        5758
        9043
       10521
       13689
       53067
       58128
       60102
       61973
       64005
       97443
       98845
       99676
      106398
      115933
      128482
      292714
      301963
      302898
      309755
      327198
      328860
      762385
      782953
      784008
      784689
      791362
      821419
      822288
      824071
      828384
      841329

disp(matlabroot)
/usr/local/share/matlab/R2011b

Trial.xyz(Bccg.posind{1},7,1)

ans =

          68.4069366455078
          79.7637481689453
          164.735824584961
          8.05415534973145
         -367.407287597656
          320.590179443359
          12.9054622650146
          278.267944335938
         -130.403610229492
           357.33740234375
         -1.65635716915131
         -227.474792480469
          302.714630126953
                         0
          -350.40771484375
           248.42936706543
          287.362945556641
         -262.175140380859
          263.404632568359
          80.9658050537109
          154.092559814453
          149.060134887695
         -209.142959594727
          207.918823242188
          120.892707824707
          74.2387084960938
         -76.2290267944336
          132.408996582031
          251.219116210938
         -37.2822151184082
         -161.349533081055
          125.703170776367
          248.732345581055
         -131.927886962891
         0.387488573789597

find(Trial.xyz(Bccg.posind{1},7,1)==-76.2290267944336)

ans =

    27

Bccg.posind{1}(27
 Bccg.posind{1}(27
                 |
{Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
} 
Bccg.posind{1}(27)

ans =

      782953

Trial

Trial = 

  MTATrial

  Properties:
              path: [1x1 struct]
             spath: [1x1 struct]
          filebase: 'jg05-20120309.cof.all'
              name: 'jg05-20120309'
         trialName: 'all'
              Maze: [1x1 MTAMaze]
             Model: [1x1 MTAModel]
               xyz: [851072x9x3 double]
      xyzSegLength: [11x1 double]
        xyzPeriods: [11x2 double]
     xyzSampleRate: 119.881035
       syncPeriods: [11x2 double]
        sampleRate: 32552
     lfpSampleRate: 1250
    trackingMarker: 'head_front'
               ang: []
               Bhv: [1x1 MTABhv]
               Fet: []
               lfp: []
               Pfs: {}
               ccg: []
               ufr: [8874122x112 double]
                nq: []
               res: [2903495x1 double]
               clu: [2903495x1 double]
               map: [112x3 double]
           ripples: []


disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which 3
'3' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

rstart = rpos-round(3*Trial.xyzSampleRate);
{Undefined function or variable 'rpos'.
} 
rstop =  rpos+round(3*Trial.xyzSampleRate);
{Undefined function or variable 'rpos'.
} 
rpos = 782953;
rstart = rpos-round(3*Trial.xyzSampleRate);
rstop =  rpos+round(3*Trial.xyzSampleRate);
disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which f
f is a variable.

disp(matlabroot)
/usr/local/share/matlab/R2011b

help find
 <strong>find</strong>   Find indices of nonzero elements.
    I = <strong>find</strong>(X) returns the linear indices corresponding to 
    the nonzero entries of the array X.  X may be a logical expression. 
    Use IND2SUB(SIZE(X),I) to calculate multiple subscripts from 
    the linear indices I.
  
    I = <strong>find</strong>(X,K) returns at most the first K indices corresponding to 
    the nonzero entries of the array X.  K must be a positive integer, 
    but can be of any numeric type.
 
    I = <strong>find</strong>(X,K,'first') is the same as I = <strong>find</strong>(X,K).
 
    I = <strong>find</strong>(X,K,'last') returns at most the last K indices corresponding 
    to the nonzero entries of the array X.
 
    [I,J] = <strong>find</strong>(X,...) returns the row and column indices instead of
    linear indices into X. This syntax is especially useful when working
    with sparse matrices.  If X is an N-dimensional array where N > 2, then
    J is a linear index over the N-1 trailing dimensions of X.
 
    [I,J,V] = <strong>find</strong>(X,...) also returns a vector V containing the values
    that correspond to the row and column indices I and J.
 
    Example:
       A = magic(3)
       find(A > 5)
 
    finds the linear indices of the 4 entries of the matrix A that are
    greater than 5.
 
       [rows,cols,vals] = find(speye(5))
 
    finds the row and column indices and nonzero values of the 5-by-5
    sparse identity matrix.
 
    See also <a href="matlab:help sparse">sparse</a>, <a href="matlab:help Ind2Sub">Ind2Sub</a>, <a href="matlab:help relop">relop</a>, <a href="matlab:help nonzeros">nonzeros</a>.

    Overloaded methods:
       <a href="matlab:help codistributed/find">codistributed/find</a>

    Reference page in Help browser
       <a href="matlab:doc find">doc find</a>

disp(matlabroot)
/usr/local/share/matlab/R2011b

which find
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/@logical/find)  % logical method

which find
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/@logical/find)  % logical method

disp(matlabroot)
/usr/local/share/matlab/R2011b

which find
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/@logical/find)  % logical method

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

resind = find(Trial.res>rstart/Trial.xyzSampleRate*Trial.lfpSampleRate&Trial.res<rstop/Trial.xyzSampleRate*Trial.lfpSampleRate);
disp(matlabroot)
/usr/local/share/matlab/R2011b

whos resind
  Name           Size            Bytes  Class     Attributes

  resind      3773x1             30184  double              

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

res = Trial.res(resind);
clu = Trial.clu(resind);
disp(matlabroot)
/usr/local/share/matlab/R2011b

uclu = unique(clu);
uclu

uclu =

     1
     2
     4
     5
     6
     7
     8
     9
    10
    12
    13
    14
    16
    18
    19
    20
    22
    26
    27
    28
    29
    30
    31
    32
    33
    34
    36
    39
    41
    42
    43
    44
    45
    46
    48
    49
    51
    52
    53
    54
    55
    56
    57
    58
    59
    60
    62
    63
    65
    66
    68
    69
    70
    71
    72
    73
    74
    75
    76
    77
    79
    81
    82
    83
    84
    85
    86
    87
    88
    89
    90
    91
    92
    93
    98
   100
   101
   102
   103
   104
   105
   106
   107
   108
   110
   111
   112

disp(matlabroot)
/usr/local/share/matlab/R2011b

size(uclu)

ans =

    87     1

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

plot(res,clu,'.')
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

figure,plot(res,clu,'.')
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

Lines((rpos-1)/Trial.xyzSampleRate*Trial.lfpSampleRate,[],'k');
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)


hfig = figure(213);
pfig= figure(214);
rfig= figure(215);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    clf
    pfw.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',rfig);
    clf
    pfr.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
Enter index #: 28
Enter index #: 
{Error using '
Transpose on ND array is not defined.
} 

hfig = figure(213);
pfig= figure(214);
rfig= figure(215);
unit = 1;
nStates = length(group_resdescrip);
k = 1:2:nStates*2;
g = 1:2:nStates;
set(0,'CurrentFigure',hfig);
while 1,
    clf
    for i = 1:nStates/2
        subplot(nStates/2,2,k(i)),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i),:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)} ' ' num2str(unit)])
        subplot(nStates/2,2,k(i)+1),
        imagesc(Bccg.tbin,1:size(frccg,4),sq(frccg(:,unit,g(i)+1,:))'),axis xy
        axis tight,colorbar
        title([group_resdescrip{g(i)+1} ' ' num2str(unit)])
    end
    set(0,'CurrentFigure',pfig);
    clf
    pfw.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',rfig);
    clf
    pfr.plot(unit)
    hold on
    for i = 1:length(Bccg.partition_boundaries{1}(unit,:))-2
        c(i) = circle(pfMaxPos(unit,1),pfMaxPos(unit,2),Bccg.partition_boundaries{1}(unit,i+1));
    end
    set(c,'color','w');
    scatter(Trial.xyz(Bccg.posind{1},7,1),Trial.xyz(Bccg.posind{1},7,2),15,'m','fill');
    xlim([-500,500]);
    ylim([-500,500]);
    clear('c');
    set(0,'CurrentFigure',hfig);
    unit = figure_controls(hfig,unit);
    if unit==-1;return,end
end
{Operation terminated by user during lineseries (line 19)

In circle (line 10)
h  = plot (X, Y, style);
} 
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which Lines
/data/homes/share/matlab/labbox/Graphics/Lines.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

which plot
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graph2d/plot)

disp(matlabroot)
/usr/local/share/matlab/R2011b

figure,plot(Trial.res,Trial.clu,'.')
Lines(rperlfp(:,1),[],'k');
{Undefined variable rperlfp.
} 
Lines(rperlfp(:,2),[],'r');
{Undefined variable rperlfp.
} 
rperlfp = round((Trial.Bhv.getState('rear').states-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate);
{No appropriate method, property, or field states for class MTAState.
} 
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which rpos
rpos is a variable.

rperlfp = round((Trial.Bhv.getState('rear').states-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate);
{No appropriate method, property, or field states for class MTAState.
} 
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which rpos
rpos is a variable.

rperlfp = round((Trial.Bhv.getState('rear').state-1)./Trial.xyzSampleRate.*Trial.lfpSampleRate);

figure,plot(Trial.res,Trial.clu,'.')
Lines(rperlfp(:,1),[],'k');
Lines(rperlfp(:,2),[],'r');
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

disp(matlabroot)
/usr/local/share/matlab/R2011b

rperlfp

rperlfp =

        6871        9864
       19968       21355
       31594       33158
       44315       44940
       60028       63281
       94281       96220
       96929       97816
      109692      112580
      142725      146635
      553319      555113
      606090      608416
      626673      628331
      646182      647809
      667370      668194
     1016028     1017519
     1020136     1022608
     1030647     1032513
     1039312     1044254
     1109402     1110059
     1208823     1210721
     1213953     1217165
     1339672     1341622
     3052120     3055727
     3148559     3149716
     3158308     3160206
     3162698     3167588
     3229806     3233320
     3411684     3414051
     3429014     3430661
     3434405     3442997
     7949381     7957024
     8163843     8165220
     8174844     8177242
     8181945     8184103
     8251524     8253568
     8564929     8566889
     8573990     8576075
     8578473     8580903
     8592581     8593238
     8637553     8647229
     8772530     8778651

resind = find(Trial.res<150000);
res = Trial.res(resind);
clu = Trial.clu(resind);
figure,plot(res,clu,'.')
Lines(rperlfp(:,1),[],'k');
Lines(rperlfp(:,2),[],'r');
disp(matlabroot)
/usr/local/share/matlab/R2011b

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 21360
'21360' not found.

which 21360
'21360' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 77
'77' not found.

which 77
'77' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 1
'1' not found.

which 1
'1' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Lines
/data/homes/share/matlab/labbox/Graphics/Lines.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which repmat
/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/repmat.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Lines
/data/homes/share/matlab/labbox/Graphics/Lines.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

which Lines
/data/homes/share/matlab/labbox/Graphics/Lines.m

disp(matlabroot)
/usr/local/share/matlab/R2011b


rperlfpn = rperlfp(rperlfp(:,2)<twin,:);
{Undefined function or variable 'twin'.
} 
figure
Lines(repmat(res,2,1),repmat(clu,2,1)+repmat([-.5,.5],size(clu,1),1),'k');
{Error using +
Matrix dimensions must agree.
} 
Lines(rperlfpn(:,1),[],'k');
{Undefined variable rperlfpn.
} 
Lines(rperlfpn(:,2),[],'r');
{Undefined variable rperlfpn.
} 
disp(matlabroot)
/usr/local/share/matlab/R2011b

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)


twin =150000

twin =

      150000

resind = find(Trial.res<twin);
res = Trial.res(resind);
clu = Trial.clu(resind);

rperlfpn = rperlfp(rperlfp(:,2)<twin,:);
figure
Lines(repmat(res,2,1),repmat(clu,2,1)+repmat([-.5,.5],size(clu,1),1),'k');
{Error using +
Matrix dimensions must agree.
} 
Lines(rperlfpn(:,1),[],'k');
Lines(rperlfpn(:,2),[],'r');
which set
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/graphics/set)

which size
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/size)


rperlfpn = rperlfp(rperlfp(:,2)<twin,:);
figure
Lines(repmat(res,2,1),repmat(clu,2,1)+repmat([-.5,.5],size(clu,1)*2,1),'k');
{Error using +
Matrix dimensions must agree.
} 
Lines(rperlfpn(:,1),[],'k');
Lines(rperlfpn(:,2),[],'r');
disp(matlabroot)
/usr/local/share/matlab/R2011b

size(repmat(clu,2,1))

ans =

      121914           1

disp(matlabroot)
/usr/local/share/matlab/R2011b

which 5
'5' not found.

which 5
'5' not found.

which 5
'5' not found.

which 5
'5' not found.

disp(matlabroot)
/usr/local/share/matlab/R2011b

which repmat
/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/repmat.m

disp(matlabroot)
/usr/local/share/matlab/R2011b

which ones
built-in (/usr/local/share/matlab/R2011b/toolbox/matlab/elmat/ones)

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

disp(matlabroot)
/usr/local/share/matlab/R2011b

figure
Lines(repmat(res,2,1),repmat(clu,2,1)+cat(1,ones(size(clu,1),1).*-.5,ones(size(clu,1),1).*.5),'k');
{Operation terminated by user during repmat (line 94)

In Lines (line 35)
        y = repmat(y,1,nl);
} 
Lines(rperlfpn(:,1),[],'k');
Lines(rperlfpn(:,2),[],'r');
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

whos
  Name                              Size                   Bytes  Class                 Attributes

  BHVccg                            1x8                  1448832  cell                            
  BHVccg0315                        1x8                  1448832  cell                            
  Bccg                              1x1                  3271300  MTAccg                          
  Trial                             1x1               8181540164  MTATrial                        
  ang                          851072x3                 20425728  double                          
  ans                               0x1                           java.lang.String[]              
  badr                             17x1                      136  double                          
  bhvper                          347x2                     5552  double                          
  bsfet                        851072x1                  6808576  double                          
  bwrperind                        17x1                      136  double                          
  c                                 1x2                       16  double                          
  chvsegs                           1x8                  1410176  cell                            
  chvslen                           1x1                        8  double                          
  clu                           60957x1                   487656  double                          
  comb                         851072x3                 20425728  double                          
  combv                        851071x1                  6808568  double                          
  comh                         851072x3                 20425728  double                          
  comhv                        851071x1                  6808568  double                          
  comv                         851071x2                 13617136  double                          
  dbsfet                       851071x1                  6808568  double                          
  display_mode                      1x6                       12  char                            
  f                                85x1                      680  double                          
  frccg                             4-D                  2895872  double                          
  fstat                         48239x85x3              98407560  double                          
  g                                 1x4                       32  double                          
  group_resdescrip                  1x8                     1224  cell                            
  group_restrains                   1x8                     3832  cell                            
  grperind                         34x1                      272  double                          
  gwperind                        114x1                      912  double                          
  gwrperind                        17x1                      136  double                          
  hang                              1x1                 81703984  struct                          
  hfig                              1x1                        8  double                          
  i                                 1x1                        8  double                          
  interrdur                        40x1                      320  double                          
  interwdur                       238x1                     1904  double                          
  interwrdur                      114x1                      912  double                          
  iper                            347x2                     5552  double                          
  iperdur                         347x1                     2776  double                          
  k                                 1x8                       64  double                          
  lwin                              1x1                        8  double                          
  nStates                           1x1                        8  double                          
  ncol                              1x1                        8  double                          
  nfet                         851072x1                  6808576  double                          
  nfroffi                         115x1                      920  double                          
  nfroni                          114x1                      912  double                          
  nn                           851072x1                   851072  logical                         
  no_fol_rear_rearoff              34x1                      272  double                          
  no_fol_rearwalk_rearoff          17x1                      136  double                          
  no_fol_walk_walkoff             114x1                      912  double                          
  no_pre_rear_rearon               35x1                      280  double                          
  no_pre_rearwalk_rearon           18x1                      144  double                          
  no_pre_walk_walkon              115x1                      920  double                          
  non_immobile_bhvs                 1x5                      606  cell                            
  npwoffi                         114x1                      912  double                          
  npwoni                          115x1                      920  double                          
  num_fet                           1x1                        8  double                          
  pfMaxPos                        112x2                     1792  double                          
  pfig                              1x1                        8  double                          
  pfr                               1x1                  4554352  MTAPlaceField                   
  pfsearch                          1x1                      104  MTAPlaceField                   
  pfw                               1x1                  4567168  MTAPlaceField                   
  phi                               4-D                295222680  double                          
  res                           60957x1                   487656  double                          
  resind                        60957x1                   487656  double                          
  rfig                              1x1                        8  double                          
  rper                             41x2                      656  double                          
  rperlfp                          41x2                      656  double                          
  rperlfpn                          9x2                      144  double                          
  rpos                              1x1                        8  double                          
  rstart                            1x1                        8  double                          
  rstop                             1x1                        8  double                          
  sfet                         851072x4                 27234304  double                          
  swin                              1x1                        8  double                          
  t                             48239x1                   385912  double                          
  tsfet                        851072x1                  6808576  double                          
  twin                              1x1                        8  double                          
  uclu                             87x1                      696  double                          
  ufrsegs                           1x8                  1410176  cell                            
  ufrslen                           1x1                        8  double                          
  unit                              1x1                        8  double                          
  v                            851071x9                 61277112  double                          
  wang                         771951x3                 18526824  double                          
  win                               1x1                        8  double                          
  wper                            239x2                     3824  double                          
  xyz                          851072x9x3              183831552  double                          
  yc                                4-D                295222680  double                          
  ys_fol_rearwalk_rearoff          17x1                      136  double                          
  ys_pre_rearwalk_rearon           17x1                      136  double                          

which comh
comh is a variable.


figure,plot(ufrsegs{6},chvsegs{6},'.')
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

size(ufrsegs{6})

ans =

   480    17

figure,plot(sum(ufrsegs{6},2),sum(chvsegs{6},2),'.')
disp(matlabroot)
/usr/local/share/matlab/R2011b


for i = 1:length(group_restrains),
figure,plot(mean(ufrsegs{i},2),mean(chvsegs{i},2),'.')
end

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b

whos
  Name                              Size                   Bytes  Class                 Attributes

  BHVccg                            1x8                  1448832  cell                            
  BHVccg0315                        1x8                  1448832  cell                            
  Bccg                              1x1                  3271300  MTAccg                          
  Trial                             1x1               8181540164  MTATrial                        
  ang                          851072x3                 20425728  double                          
  ans                               0x1                           java.lang.String[]              
  badr                             17x1                      136  double                          
  bhvper                          347x2                     5552  double                          
  bsfet                        851072x1                  6808576  double                          
  bwrperind                        17x1                      136  double                          
  c                                 1x2                       16  double                          
  chvsegs                           1x8                  1410176  cell                            
  chvslen                           1x1                        8  double                          
  clu                           60957x1                   487656  double                          
  comb                         851072x3                 20425728  double                          
  combv                        851071x1                  6808568  double                          
  comh                         851072x3                 20425728  double                          
  comhv                        851071x1                  6808568  double                          
  comv                         851071x2                 13617136  double                          
  dbsfet                       851071x1                  6808568  double                          
  display_mode                      1x6                       12  char                            
  f                                85x1                      680  double                          
  frccg                             4-D                  2895872  double                          
  fstat                         48239x85x3              98407560  double                          
  g                                 1x4                       32  double                          
  group_resdescrip                  1x8                     1224  cell                            
  group_restrains                   1x8                     3832  cell                            
  grperind                         34x1                      272  double                          
  gwperind                        114x1                      912  double                          
  gwrperind                        17x1                      136  double                          
  hang                              1x1                 81703984  struct                          
  hfig                              1x1                        8  double                          
  i                                 1x1                        8  double                          
  interrdur                        40x1                      320  double                          
  interwdur                       238x1                     1904  double                          
  interwrdur                      114x1                      912  double                          
  iper                            347x2                     5552  double                          
  iperdur                         347x1                     2776  double                          
  k                                 1x8                       64  double                          
  lwin                              1x1                        8  double                          
  nStates                           1x1                        8  double                          
  ncol                              1x1                        8  double                          
  nfet                         851072x1                  6808576  double                          
  nfroffi                         115x1                      920  double                          
  nfroni                          114x1                      912  double                          
  nn                           851072x1                   851072  logical                         
  no_fol_rear_rearoff              34x1                      272  double                          
  no_fol_rearwalk_rearoff          17x1                      136  double                          
  no_fol_walk_walkoff             114x1                      912  double                          
  no_pre_rear_rearon               35x1                      280  double                        addpath('/data/homes/gravio/modules/matlab-emacs/toolbox','-begin'); rehash; emacsinit('emacsclient -n');
s = MTASession('jg05-20120317');
Trial = MTATrial(s,{{'CluRes',s.xyzSampleRate}},'all');
Trial = Trial.filter();
klen = 64;
kern = ones(klen,1);
overlap = 16;
nnn = 81;
nxbins = 50;
nybins = 50;
xbins = linspace(Trial.Maze.boundaries(1,1),Trial.Maze.boundaries(1,2),nxbins)';
ybins = linspace(Trial.Maze.boundaries(2,2),Trial.Maze.boundaries(2,1),nxbins)';
myxyz = sq(Trial.xyz(:,7,[1,2]));
t =         permute(reshape(          myxyz(1:size(myxyz,1)-mod(size(myxyz,1),klen),:),klen,[],2),[4,1,2,3]);
for shift = 1:klen/overlap-1,
t = cat(1,t,permute(reshape(circshift(myxyz(1:size(myxyz,1)-mod(size(myxyz,1),klen),:),-overlap*shift),klen,[],2),[4,1,2,3]));
end
myxyz = t;
myxyz = reshape(sq(sum(repmat(permute(repmat(permute(repmat(kern./sum(kern),1,size(myxyz,3)),[5,4,1,2,3]),size(myxyz,4),1),[2,3,4,1]),klen/overlap,1).*myxyz,2)),[],2);
newSampleRate = 1/((size(Trial.xyz,1)-mod(size(Trial.xyz,1),klen))/Trial.xyzSampleRate/length(myxyz));
myrx = SelectPeriods(myxyz,round((Trial.Bhv.getState('rear').state+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),'c',1,1);
mywx = SelectPeriods(myxyz,round((Trial.Bhv.getState('walk').state+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),'c',1,1);
myufr = {};
for unit = 1:76
myres = Trial.res(Trial.clu==unit);
myufr{unit} = zeros(size(Trial.xyz,1),1);
myufr{unit}(1:myres(end)) = accumarray(myres,ones(size(myres),1));
t =         permute(reshape(myufr{unit}(1:size(myufr{unit},1)-mod(size(myufr{unit},1),klen)),klen,[]),[3,1,2]);
for shift = 1:klen/overlap-1
t = cat(1,t,permute(reshape(circshift(myufr{unit}(1:size(myufr{unit},1)-mod(size(myufr{unit},1),klen)),-overlap*shift),klen,[]),[3,1,2]));
end
myufr{unit} = t; 
myufr{unit} = reshape(sq(sum(repmat(permute(repmat(kern,1,size(myufr{unit},3)),[3,1,2]),size(myufr{unit},1),1).*myufr{unit},2))/(klen/Trial.xyzSampleRate),[],1);
end
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
myufr = cell2mat(myufr);
pfw = MTAPlaceField(Trial,[],'walk');
wpmr = zeros(size(myxyz,1),76);
for unit =1:76,
for i=1:size(myxyz,1),
wpmr(i,unit) = pfw.rateMap{unit}(find(pfw.xbin<round(myxyz(i,1)),1,'last'),find(pfw.ybin<round(myxyz(i,2)),1,'last'));
end
end
ufrwd = myufr-wpmr;

non_immobile_bhvs = {'walk','bturn','hturn','rear'};
iper = [1,size(Trial.xyz,1)];
for i = 1:length(non_immobile_bhvs),
iper = SubstractRanges(iper,Trial.Bhv.getState(non_immobile_bhvs(i)).state);
end
Trial.Bhv = Trial.Bhv.addState('i','immobile',iper);
iperdur = diff(Trial.Bhv.getState('immobile').state,1,2);
rper = Trial.Bhv.getState('rear').state;
interrdur = [rper(2:end,1)-rper(1:end-1,2)];
grperind = find(interrdur>3*Trial.xyzSampleRate);
no_fol_rear_rearoff = rper(grperind,2); 
no_pre_rear_rearon =  rper([1;grperind+1],1); 
wper = Trial.Bhv.getState('walk').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  wper([1;gwperind+1],1); 
[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
interwrdur = abs(no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroffi(bwrperind));
no_fol_rearwalk_rearoff = no_fol_rear_rearoff;
no_fol_rearwalk_rearoff(badr) = [];
ys_fol_rearwalk_rearoff =no_fol_rear_rearoff(badr);
[~,nfroni,npwoffi] = NearestNeighbour(no_pre_rear_rearon,no_fol_walk_walkoff);
interwrdur = abs(no_fol_walk_walkoff(npwoffi)-no_pre_rear_rearon(nfroni));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroni(bwrperind));
no_pre_rearwalk_rearon = no_pre_rear_rearon;
no_pre_rearwalk_rearon(badr) = [];
ys_pre_rearwalk_rearon =no_pre_rear_rearon(badr);
btper = Trial.Bhv.getState('bturn').state;
no_pre_rear_bturn =[];
for i=1:size(btper,1),
if isempty(find(abs(repmat(btper(i,1),size(rper,1),1)-rper(:,1))<2*Trial.xyzSampleRate,1,'first'))
no_pre_rear_bturn(end+1,:) = btper(i,:);
end
end
no_pre_rear_bturnon = no_pre_rear_bturn(:,1);
no_fol_rear_bturnoff = no_pre_rear_bturn(:,2);
no_pre_rearturn_bturn =[];
for i=1:size(no_pre_rear_bturn,1),
if isempty(find(abs(repmat(no_pre_rear_bturn(i,1),size(no_pre_rear_bturn,1),1)-no_pre_rear_bturn(:,1))<2*Trial.xyzSampleRate&abs(repmat(no_pre_rear_bturn(i,1),size(no_pre_rear_bturn,1),1)-no_pre_rear_bturn(:,1))>0,1,'first'))
no_pre_rearturn_bturn(end+1,:) = no_pre_rear_bturn(i,:);
end
end
no_pre_rearturn_bturnon = no_pre_rearturn_bturn(:,1);
no_fol_rearturn_bturnoff = no_pre_rearturn_bturn(:,2);
group_resdescrip{1} = 'no_pre_rear_rearon';
group_restrains{1} =   no_pre_rear_rearon;
group_resdescrip{2} = 'no_fol_rear_rearoff';
group_restrains{2} =   no_fol_rear_rearoff;
group_resdescrip{3} = 'no_pre_rearwalk_rearon';
group_restrains{3} =   no_pre_rearwalk_rearon;
group_resdescrip{4} = 'no_fol_rearwalk_rearoff';
group_restrains{4} =   no_fol_rearwalk_rearoff;
group_resdescrip{5} = 'ys_pre_rearwalk_rearon';
group_restrains{5} =   ys_pre_rearwalk_rearon;
group_resdescrip{6} = 'ys_fol_rearwalk_rearoff';
group_restrains{6} =   ys_fol_rearwalk_rearoff;
group_resdescrip{7} = 'no_pre_walk_walkon';
group_restrains{7} =   no_pre_walk_walkon;
group_resdescrip{8} = 'no_fol_walk_walkoff';
group_restrains{8} =   no_fol_walk_walkoff;
group_resdescrip{9} = 'no_pre_rear_bturnon';
group_restrains{9} =   no_pre_rear_bturnon;
group_resdescrip{10} = 'no_fol_rear_bturnoff';
group_restrains{10} =   no_fol_rear_bturnoff;
group_resdescrip{11} = 'no_pre_rearturn_bturnon';
group_restrains{11} =   no_pre_rearturn_bturnon;
group_resdescrip{12} = 'no_fol_rearturn_bturnoff';
group_restrains{12} =   no_fol_rearturn_bturnoff;
ronpw = group_restrains{1};
roffw = group_restrains{2};
wonprm = group_restrains{7};
woffprm = group_restrains{8};
rufrs = GetSegs(ufrwd,round(((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
dufrs = GetSegs(ufrwd,round(((roffw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
wufrs = GetSegs(ufrwd,round(((wonprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
sufrs = GetSegs(ufrwd,round(((woffprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));

pfw = MTAPlaceField(Trial,[],'walk');
pfr = MTAPlaceField(Trial,[],'rear');
pfMaxPosRear = zeros(size(pfr.cluMap,1),2);
pfMaxPosWalk = zeros(size(pfr.cluMap,1),2);
for unit = 1:size(pfw.cluMap,1),
    try, pfMaxPosWalk(unit,:) = pfw.maxRatePos{unit}(pfw.maxRateMax{unit},:);,end
    try, pfMaxPosRear(unit,:) = pfr.maxRatePos{unit}(pfr.maxRateMax{unit},:);,end
    upos(unit,:) = pfMaxPosWalk(unit,:);
end
rxyzs = GetSegs(myxyz,round(((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
wxyzs = GetSegs(myxyz,round(((Trial.Bhv.getState('walk').state(:,1)+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
rposon = myxyz(round((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
rposoff = myxyz(round((roffw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wposon = myxyz(round((wonprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wposoff= myxyz(round((woffprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
tbins = linspace(-300*newSampleRate/2,300*newSampleRate/2,300);

flen = 5

flen =

     5

unit = 1;
while unit~=-1,
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
[srwdist,srwdind] = sort(rwdist);
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
[srwdisto,srwdindo] = sort(rwdisto);
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
[swwdist,swwdind] = sort(wwdist);
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
[swwdisto,swwdindo] = sort(wwdisto);
clf
subplot2(4,5,[1,2],1);
pfr.plot(unit,1);
title(num2str(unit))
subplot2(4,5,[3,4],1);
pfw.plot(unit,1);
bs(1) =subplot2(4,5,[1,2],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>200&rwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>400&rwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>600&rwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(2) =subplot2(4,5,[3,4],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>200&rwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>400&rwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>600&rwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(3) =subplot2(4,5,[1,2],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>200&wwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>400&wwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>600&wwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(4) =subplot2(4,5,[3,4],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>200&wwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>400&wwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>600&wwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,:,unit),2)),'k')
Lines([],0,'k');
linkaxes(bs,'xy');
xlim([tbins(1),tbins(end)])
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

ans =

  174.0011


ans =

  180.0011

{Error using plot
Vectors must be the same lengths.
} 
size(tbins)

ans =

     1   300

size(nanmean(rufrs(:,rwdist<200,unit),2)))
 size(nanmean(rufrs(:,rwdist<200,unit),2)))
                                         |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 
size(nanmean(rufrs(:,rwdist<200,unit),2))

ans =

    75     1

newSampleRate

newSampleRate =

    7.4926

tbins = linspace(-300*newSampleRate/2,300*newSampleRate/2,size(rufrs,1));
tbins

tbins =

   1.0e+03 *

  Columns 1 through 7

   -1.1239   -1.0935   -1.0631   -1.0328   -1.0024   -0.9720   -0.9416

  Columns 8 through 14

   -0.9113   -0.8809   -0.8505   -0.8201   -0.7898   -0.7594   -0.7290

  Columns 15 through 21

   -0.6986   -0.6683   -0.6379   -0.6075   -0.5771   -0.5468   -0.5164

  Columns 22 through 28

   -0.4860   -0.4556   -0.4253   -0.3949   -0.3645   -0.3341   -0.3038

  Columns 29 through 35

   -0.2734   -0.2430   -0.2126   -0.1823   -0.1519   -0.1215   -0.0911

  Columns 36 through 42

   -0.0608   -0.0304         0    0.0304    0.0608    0.0911    0.1215

  Columns 43 through 49

    0.1519    0.1823    0.2126    0.2430    0.2734    0.3038    0.3341

  Columns 50 through 56

    0.3645    0.3949    0.4253    0.4556    0.4860    0.5164    0.5468

  Columns 57 through 63

    0.5771    0.6075    0.6379    0.6683    0.6986    0.7290    0.7594

  Columns 64 through 70

    0.7898    0.8201    0.8505    0.8809    0.9113    0.9416    0.9720

  Columns 71 through 75

    1.0024    1.0328    1.0631    1.0935    1.1239

tbins = linspace(-300*newSampleRate/2,300*newSampleRate/2,size(rufrs,1));

flen = 5

flen =

     5

unit = 1;
while unit~=-1,
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
[srwdist,srwdind] = sort(rwdist);
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
[srwdisto,srwdindo] = sort(rwdisto);
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
[swwdist,swwdind] = sort(wwdist);
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
[swwdisto,swwdindo] = sort(wwdisto);
clf
subplot2(4,5,[1,2],1);
pfr.plot(unit,1);
title(num2str(unit))
subplot2(4,5,[3,4],1);
pfw.plot(unit,1);
bs(1) =subplot2(4,5,[1,2],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>200&rwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>400&rwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>600&rwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(2) =subplot2(4,5,[3,4],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>200&rwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>400&rwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>600&rwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(3) =subplot2(4,5,[1,2],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>200&wwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>400&wwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>600&wwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(4) =subplot2(4,5,[3,4],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>200&wwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>400&wwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>600&wwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,:,unit),2)),'k')
Lines([],0,'k');
linkaxes(bs,'xy');
xlim([tbins(1),tbins(end)])
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

ans =

  174.0012


ans =

  180.0012


unit =

     2


ans =

  174.0013


ans =

  180.0013


unit =

     3


ans =

  174.0015


ans =

  180.0015


unit =

     4


ans =

  174.0016


ans =

  180.0016


unit =

     5


ans =

  174.0017


ans =

  180.0017


unit =

     6


ans =

  174.0018


ans =

  180.0018


unit =

     7


ans =

  174.0020


ans =

  180.0020


unit =

     8


ans =

  174.0021


ans =

  180.0021


unit =

     9


ans =

  174.0022


ans =

  180.0022


unit =

    10


ans =

  174.0023


ans =

  180.0023


unit =

    11


ans =

  174.0024


ans =

  180.0024


unit =

    12


ans =

  174.0026


ans =

  180.0026


unit =

    13


ans =

  174.0027


ans =

  180.0027


unit =

    14


ans =

  174.0028


ans =

  180.0028


unit =

    15


ans =

  174.0029


ans =

  180.0029


unit =

    16


ans =

  174.0031


ans =

  180.0031


unit =

    17


ans =

  174.0032


ans =

  180.0032


unit =

    18


ans =

  174.0033


ans =

  180.0033


unit =

    19


ans =

  174.0034


ans =

  180.0034


unit =

    20


ans =

  174.0035


ans =

  180.0035

Enter index #: 51

unit =

    51


ans =

  174.0037


ans =

  180.0037


unit =

    52


ans =

  174.0038


ans =

  180.0038


unit =

    53


ans =

  174.0039


ans =

  180.0039


unit =

    54


ans =

  174.0040


ans =

  180.0040


unit =

    55


ans =

  174.0042


ans =

  180.0042


unit =

    56


ans =

  174.0043


ans =

  180.0043


unit =

    57


ans =

  174.0044


ans =

  180.0044


unit =

    -1

unit = 51,plot(rufrs(:,:,unit)),'k')
 unit = 51,plot(rufrs(:,:,unit)),'k')
                                   |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 
unit = 51,plot(rufrs(:,:,unit))

unit =

    51

figure,unit = 51,plot(rufrs(:,:,unit))

unit =

    51

size(rufrs)

ans =

    75    81    76

size(dufrs)

ans =

    75    80    76

size(wufrs)

ans =

    75   162    76

size(sufrs)

ans =

    75   161    76

size(rufrs(:,rwdist<200,unit))

ans =

    75    37

size(dufrs(:,rwdisto<200,unit))

ans =

    75    25

size(wufrs(:,wwdist<200,unit))

ans =

    75    78

size(sufrs(:,wwdisto<200,unit))

ans =

    75    49

matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

disp(matlabroot)
/usr/local/share/matlab/R2011b


sample_size = [];
sample_size(1) = size(rufrs(:,rwdist<200,unit),2);
sample_size(2) = size(dufrs(:,rwdisto<200,unit),2);
sample_size(3) = size(wufrs(:,wwdist<200,unit),2);
sample_size(4) = size(sufrs(:,wwdisto<200,unit),2);
help randi
 <strong>randi</strong> Pseudorandom integers from a uniform discrete distribution.
    R = <strong>randi</strong>(IMAX,N) returns an N-by-N matrix containing pseudorandom
    integer values drawn from the discrete uniform distribution on 1:IMAX.
    <strong>randi</strong>(IMAX,M,N) or <strong>randi</strong>(IMAX,[M,N]) returns an M-by-N matrix.
    <strong>randi</strong>(IMAX,M,N,P,...) or <strong>randi</strong>(IMAX,[M,N,P,...]) returns an
    M-by-N-by-P-by-... array.  <strong>randi</strong>(IMAX) returns a scalar.
    <strong>randi</strong>(IMAX,SIZE(A)) returns an array the same size as A.
 
    R = <strong>randi</strong>([IMIN,IMAX],...) returns an array containing integer
    values drawn from the discrete uniform distribution on IMIN:IMAX.
 
    Note: The size inputs M, N, P, ... should be nonnegative integers.
    Negative integers are treated as 0.
 
    R = <strong>randi</strong>(..., CLASSNAME) returns an array of integer values of class
    CLASSNAME.
 
    The arrays returned by <strong>randi</strong> may contain repeated integer values.  This
    is sometimes referred to as sampling with replacement.  To get unique
    integer values, sometimes referred to as sampling without replacement,
    use RANDPERM.
 
    The sequence of numbers produced by <strong>randi</strong> is determined by the settings of
    the uniform random number generator that underlies RAND, RANDN, and <strong>randi</strong>.
    <strong>randi</strong> uses one uniform random value to create each integer random value.
    Control that shared random number generator using RNG.
 
    Examples:
 
       Example 1: Generate integer values from the uniform distribution on
       the set 1:10.
          r = randi(10,100,1);
 
       Example 2: Generate an integer array of integer values drawn uniformly
       from 1:10.
          r = randi(10,100,1,'uint32');
 
       Example 3: Generate integer values drawn uniformly from -10:10.
          r = randi([-10 10],100,1);
 
       Example 4: Reset the random number generator used by RAND, <strong>randi</strong>, and
       RANDN to its default startup settings, so that <strong>randi</strong> produces the same
       random numbers as if you restarted MATLAB.
          rng('default');
          randi(10,1,5)
 
       Example 5: Save the settings for the random number generator used by
       RAND, <strong>randi</strong>, and RANDN, generate 5 values from <strong>randi</strong>, restore the
       settings, and repeat those values.
          s = rng
          i1 = randi(10,1,5)
          rng(s);
          i2 = randi(10,1,5) % i2 contains exactly the same values as i1
 
       Example 6: Reinitialize the random number generator used by RAND,
       <strong>randi</strong>, and RANDN with a seed based on the current time.  <strong>randi</strong> will
       return different values each time you do this.  NOTE: It is usually
       not necessary to do this more than once per MATLAB session.
          rng('shuffle');
          randi(10,1,5)
 
    See also <a href="matlab:help rand">rand</a>, <a href="matlab:help randn">randn</a>, <a href="matlab:help randperm">randperm</a>, <a href="matlab:help rng">rng</a>, <a href="matlab:help RandStream">RandStream</a>

    Overloaded methods:
       <a href="matlab:help RandStream/randi">RandStream/randi</a>

    Reference page in Help browser
       <a href="matlab:doc randi">doc randi</a>


sample_size = [];
sample_size(1) = size(rufrs(:,rwdist<thresh_rad,unit),2);
{Undefined function or variable 'thresh_rad'.
} 
sample_size(2) = size(dufrs(:,rwdisto<thresh_rad,unit),2);
{Undefined function or variable 'thresh_rad'.
} 
sample_size(3) = size(wufrs(:,wwdist<thresh_rad,unit),2);
{Undefined function or variable 'thresh_rad'.
} 
sample_size(4) = size(sufrs(:,wwdisto<thresh_rad,unit),2);
{Undefined function or variable 'thresh_rad'.
} 
RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
test_sample_size  = 10;
niter = 100;
rand_samp_ind = zeros(test_sample_size,niter,numel(sample_size));
for i = 1:numel(sample_size),
    rand_samp_ind(:,:,i) = randi([1,sample_size(i)],test_sample_size,niter);
end

thresh_rad = 200;

crufrs = rufrs(:,rwdist<thresh_rad,unit);
cdufrs = dufrs(:,rwdisto<thresh_rad,unit);
cwufrs = wufrs(:,wwdist<thresh_rad,unit);
csufrs = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = [];
sample_size(1) = size(rufrs(:,rwdist<thresh_rad,unit),2);
sample_size(2) = size(dufrs(:,rwdisto<thresh_rad,unit),2);
sample_size(3) = size(wufrs(:,wwdist<thresh_rad,unit),2);
sample_size(4) = size(sufrs(:,wwdisto<thresh_rad,unit),2);
RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
test_sample_size  = 10;
niter = 100;
rand_samp_ind = zeros(test_sample_size,niter,numel(sample_size));
for i = 1:numel(sample_size),
    rand_samp_ind(:,:,i) = randi([1,sample_size(i)],test_sample_size,niter);
end
whos rand_samp_ind
  Name                Size               Bytes  Class     Attributes

  rand_samp_ind      10x100x4            32000  double              


RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
test_sample_size  = 10;
niter = 100;
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,:,i) = randi([1,sample_size(i)],test_sample_size,niter);
end
{Subscripted assignment dimension mismatch.
} 
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,:,i) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
{Subscripted assignment dimension mismatch.
} 

rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
whos rand_samp_ind
  Name                Size               Bytes  Class     Attributes

  rand_samp_ind      10x4x100            32000  double              

 rand_samp_ind(:,1,1:10)

ans(:,:,1) =

    31
    11
    30
    30
    12
    17
    21
    33
    27
     8


ans(:,:,2) =

     6
     9
     6
     7
    10
    26
     4
    31
    17
    21


ans(:,:,3) =

    13
    12
    15
    16
    19
    32
    31
     8
    12
    13


ans(:,:,4) =

     1
    24
    13
    37
    34
    37
    24
    31
    35
    35


ans(:,:,5) =

     6
    23
    17
     8
     2
    12
    26
    31
     5
    31


ans(:,:,6) =

    35
    32
    14
    18
    12
    30
     7
    10
     9
    13


ans(:,:,7) =

    20
    18
     4
    29
     1
    37
    15
    26
    15
     6


ans(:,:,8) =

     3
    31
    22
    10
     2
     5
    24
    20
    18
    25


ans(:,:,9) =

     2
     4
    29
    14
    27
    23
    28
    21
     5
    34


ans(:,:,10) =

    24
    11
    27
     9
    34
    21
    32
    30
    24
    28


cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},numel(cufrs),1))
{Error using cellfun
All of the input arguments must be of the same size and shape.
Previous inputs had size 1 in dimension 1. Input #3 has size 4.
} 
sample_size = cellfun(@size,cufrs,2)
{Error using cellfun
Input #3 expected to be a cell array, was double instead.
} 
sample_size = cellfun(@size,cufrs,{2})
{Error using cellfun
All of the input arguments must be of the same size and shape.
Previous inputs had size 4 in dimension 2. Input #3 has size 1.
} 
sample_size = cellfun(@size,cufrs,repmat({2},1,4))

sample_size =

    37    25    78    49

sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)))

sample_size =

    37    25    78    49


rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
iter = 1

iter =

     1

    nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
              cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
{Undefined function 'permutation_pair' for input arguments of type 'double'.
} 
permutation_pair = [1,3];
    nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
              cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
    nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
              cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2)

ans =

   -0.5177
   -0.4223
   -0.4410
   -0.4331
   -0.4396
   -0.4868
   -0.5091
   -0.3955
   -0.4769
   -0.5714
   -0.4066
   -0.3822
   -0.2531
   -0.3859
   -0.6118
   -0.4741
   -0.4232
   -0.2164
   -0.2444
   -0.0901
   -0.1997
    0.0078
   -0.3299
   -0.4836
   -0.4647
   -0.6016
   -0.7230
   -0.4476
   -0.4607
   -0.4572
   -0.1238
   -0.3347
   -0.7230
   -0.9769
   -1.6339
   -1.4277
   -0.8741
   -0.7676
   -0.9791
   -1.2073
   -1.5467
   -1.6980
   -2.0953
   -1.8112
   -1.7336
   -1.5861
   -1.4701
   -1.5276
   -1.4354
   -1.3624
   -1.5988
   -1.8360
   -1.7457
   -1.4961
   -1.3496
   -1.1327
   -1.3696
   -1.3060
   -1.3477
   -1.3526
   -1.4062
   -1.5155
   -1.5114
   -1.5560
   -1.2508
   -0.9772
   -0.5711
   -0.5197
   -0.4161
   -0.1208
   -0.5425
   -0.2721
   -0.2492
   -0.4819
   -0.2850

permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),niter)

perm_stat =

  Columns 1 through 13

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 14 through 26

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 27 through 39

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 40 through 52

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 53 through 65

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 66 through 78

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 79 through 91

     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0     0     0     0     0

  Columns 92 through 100

     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0
     0     0     0     0     0     0     0     0     0

f
{Error using f (line 3)
Not enough input arguments.
} 
perm_stat = zeros(size(rufrs,1),niter);
for iter = 1:niter,
    perm_stat(:,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                     cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2)
end

perm_stat =

  Columns 1 through 7

   -0.5177         0         0         0         0         0         0
   -0.4223         0         0         0         0         0         0
   -0.4410         0         0         0         0         0         0
   -0.4331         0         0         0         0         0         0
   -0.4396         0         0         0         0         0         0
   -0.4868         0         0         0         0         0         0
   -0.5091         0         0         0         0         0         0
   -0.3955         0         0         0         0         0         0
   -0.4769         0         0         0         0         0         0
   -0.5714         0         0         0         0         0         0
   -0.4066         0         0         0         0         0         0
   -0.3822         0         0         0         0         0         0
   -0.2531         0         0         0         0         0         0
   -0.3859         0         0         0         0         0         0
   -0.6118         0         0         0         0         0         0
   -0.4741         0         0         0         0         0         0
   -0.4232         0         0         0         0         0         0
   -0.2164         0         0         0         0         0         0
   -0.2444         0         0         0         0         0         0
   -0.0901         0         0         0         0         0         0
   -0.1997         0         0         0         0         0         0
    0.0078         0         0         0         0         0         0
   -0.3299         0         0         0         0         0         0
   -0.4836         0         0         0         0         0         0
   -0.4647         0         0         0         0         0         0
   -0.6016         0         0         0         0         0         0
   -0.7230         0         0         0         0         0         0
   -0.4476         0         0         0         0         0         0
   -0.4607         0         0         0         0         0         0
   -0.4572         0         0         0         0         0         0
   -0.1238         0         0         0         0         0         0
   -0.3347         0         0         0         0         0         0
   -0.7230         0         0         0         0         0         0
   -0.9769         0         0         0         0         0         0
   -1.6339         0         0         0         0         0         0
   -1.4277         0         0         0         0         0         0
   -0.8741         0         0         0         0         0         0
   -0.7676         0         0         0         0         0         0
   -0.9791         0         0         0         0         0         0
   -1.2073         0         0         0         0         0         0
   -1.5467         0         0         0         0         0         0
   -1.6980         0         0         0         0         0         0
   -2.0953         0         0         0         0         0         0
   -1.8112         0         0         0         0         0         0
   -1.7336         0         0         0         0         0         0
   -1.5861         0         0         0         0         0         0
   -1.4701         0         0         0         0         0         0
   -1.5276         0         0         0         0         0         0
   -1.4354         0         0         0         0         0         0
   -1.3624         0         0         0         0         0         0
   -1.5988         0         0         0         0         0         0
   -1.8360         0         0         0         0         0         0
   -1.7457         0         0         0         0         0         0
   -1.4961         0         0         0         0         0         0
   -1.3496         0         0         0         0         0         0
   -1.1327         0         0         0         0         0         0
   -1.3696         0         0         0         0         0         0
   -1.3060         0         0         0         0         0         0
   -1.3477         0         0         0         0         0         0
   -1.3526         0         0         0         0         0         0
   -1.4062         0         0         0         0         0         0
   -1.5155         0         0         0         0         0         0
   -1.5114         0         0         0         0         0         0
   -1.5560         0         0         0         0         0         0
   -1.2508         0         0         0         0         0         0
   -0.9772         0         0         0         0         0         0
   -0.5711         0         0         0         0         0         0
   -0.5197         0         0         0         0         0         0
   -0.4161         0         0         0         0         0         0
   -0.1208         0         0         0         0         0         0
   -0.5425         0         0         0         0         0         0
   -0.2721         0         0         0         0         0         0
   -0.2492         0         0         0         0         0         0
   -0.4819         0         0         0         0         0         0
   -0.2850         0         0         0         0         0         0

  Columns 8 through 14

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 15 through 21

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 22 through 28

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 29 through 35

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 36 through 42

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 43 through 49

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 50 through 56

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 57 through 63

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Columns 64 through 70

         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),niter);
for iter = 1:niter,
    perm_stat(:,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                     cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
size(perm_stat )

ans =

    75   100

figure,plot(perm_stat)
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,:,unit),2)),'k')
figure,plot(perm_stat)
figure,plot(mean(perm_stat,2))
figure,plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
unit

unit =

    51


for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)));
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),niter);
for iter = 1:niter,
    perm_stat(:,unit,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                     cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
end
figure,plot(mean(perm_stat(:,unit,:),3))
unit = 29;figure,plot(mean(perm_stat(:,unit,:),3))
unit = 7;figure,plot(mean(perm_stat(:,unit,:),3))
unit = 7;figure,plot(mean(perm_stat(:,76,:),3))
RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 100;
permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),size(rufrs,3),niter);
for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)));
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for iter = 1:niter,
    perm_stat(:,unit,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                           cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
end
unit

unit =

    76

size(perm_stat)

ans =

    75    76   100

unit = 7;figure,plot(mean(perm_stat(:,unit,:),3))
figure,plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
figure,plot(nanmean(wufrs(:,wwdist<200,unit),2))
figure,plot(nanmean(rufrs(:,rwdist<200,unit),2))
unit = 7;figure,plot(mean(perm_stat(:,unit,:),3)+std(perm_stat(:,unit,:),[],3))
unit = 7;figure,plot(mean(perm_stat(:,unit,:),3)+2*std(perm_stat(:,unit,:),[],3))
niter = 1000;
permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),size(rufrs,3),niter);
for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)));
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for iter = 1:niter,
    perm_stat(:,unit,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                           cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
end
unit = 7;figure,plot(mean(perm_stat(:,unit,:),3)+2*std(perm_stat(:,unit,:),[],3))
disp(matlabroot)
/usr/local/share/matlab/R2011b

RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 10000;
permutation_pair = [1,3];
perm_stat = zeros(size(rufrs,1),size(rufrs,3),niter);
for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)));
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for iter = 1:niter,
    perm_stat(:,unit,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                           cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
end
size(perm_stat)

ans =

          75          76       10000

imagesc(sq(perm_stat(:,51,:))'),axis xy

RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 10000;
permutation_pair = [1,4];
perm_stat = zeros(size(rufrs,1),size(rufrs,3),niter);
for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,numel(cufrs)));
rand_samp_ind = zeros(test_sample_size,numel(sample_size),niter);
for i = 1:numel(sample_size),
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for iter = 1:niter,
    perm_stat(:,unit,iter) = nanmean(cat(2,cufrs{permutation_pair(1)}(:,rand_samp_ind(:,permutation_pair(1),iter)),...
                                           cufrs{permutation_pair(2)}(:,rand_samp_ind(:,permutation_pair(2),iter))),2);
end
end
figure,imagesc(sq(perm_stat(:,51,:))'),axis xy
unit = 7;figure,plot(mean(perm_stat(:,unit,:),3)+std(perm_stat(:,unit,:),[],3))
unit = 51;figure,plot(mean(perm_stat(:,unit,:),3)+std(perm_stat(:,unit,:),[],3))
perm
{Undefined function or variable 'perm'.
} 
help perms
 <strong>perms</strong>  All possible permutations.
    <strong>perms</strong>(1:N), or <strong>perms</strong>(V) where V is a vector of length N, creates a
    matrix with N! rows and N columns containing all possible
    permutations of the N elements.
 
    This function is only practical for situations where N is less
    than about 10 (for N=11, the output takes over 3 gigabytes).
 
    Class support for input V:
       float: double, single
 
    See also <a href="matlab:help nchoosek">nchoosek</a>, <a href="matlab:help randperm">randperm</a>, <a href="matlab:help permute">permute</a>.

    Reference page in Help browser
       <a href="matlab:doc perms">doc perms</a>

help permute
 <strong>permute</strong> Permute array dimensions.
    B = <strong>permute</strong>(A,ORDER) rearranges the dimensions of A so that they
    are in the order specified by the vector ORDER.  The array produced
    has the same values as A but the order of the subscripts needed to 
    access any particular element are rearranged as specified by ORDER.
    For an N-D array A, numel(ORDER)>=ndims(A). All the elements of 
    ORDER must be unique.
  
    <strong>permute</strong> and IPERMUTE are a generalization of transpose (.') 
    for N-D arrays.
 
    Example:
       a = rand(1,2,3,4);
       size(permute(a,[3 2 1 4])) % now it's 3-by-2-by-1-by-4.
 
    See also <a href="matlab:help ipermute">ipermute</a>, <a href="matlab:help circshift">circshift</a>, <a href="matlab:help size">size</a>.

    Overloaded methods:
       <a href="matlab:help codistributed/permute">codistributed/permute</a>
       <a href="matlab:help categorical/permute">categorical/permute</a>

    Reference page in Help browser
       <a href="matlab:doc permute">doc permute</a>

perms(1:4)

ans =

     4     3     2     1
     4     3     1     2
     4     2     3     1
     4     2     1     3
     4     1     2     3
     4     1     3     2
     3     4     2     1
     3     4     1     2
     3     2     4     1
     3     2     1     4
     3     1     2     4
     3     1     4     2
     2     3     4     1
     2     3     1     4
     2     4     3     1
     2     4     1     3
     2     1     4     3
     2     1     3     4
     1     3     2     4
     1     3     4     2
     1     2     3     4
     1     2     4     3
     1     4     2     3
     1     4     3     2

RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 1000;
ntrans = 4

ntrans =

     4

perm_stat = zeros(size(rufrs,1),size(rufrs,3),ntrans,ntrans,niter);
for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for p1 = 1:ntrans
for p2 = 1:ntrans
for iter = 1:niter,
    perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                 cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
end
end
end
end

unit=1;
while unit~=-1
for x = 1:4
for y = 1:4
subplotfit(x,y,ntrans^2);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
title(num2str(unit))
unit = figure_controls(gcf,unit)
end
end
end
{Undefined function or variable "xnum".

Error in subplotfit (line 27)
    index = (yi-1)*xnum + xi;
} 
help subplotfit
 function subplotfit(index,totnum) or
 function subplotfit(xi, yi,totnum) or
 plots the subplot in the position indicated by the index or xi,yi grid coordinates.
 (1,1) is in left top corner. 
 ns - total number of subplots or if vector [totnumx totnumy]

which subplotfit
/data/homes/share/matlab/labbox/Graphics/subplotfit.m
matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions('end'), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    'end'
    'enddrag'


 

help deal
 <strong>deal</strong> Deal inputs to outputs.
     [A,B,C,...] = <strong>deal</strong>(X,Y,Z,...) simply matches up the input and
        output lists.  It is the same as A=X, B=Y, C=Z, ...
     [A,B,C,...] = <strong>deal</strong>(X) copies the single input to all
        the requested outputs.  It is the same as A=X, B=X, C=X, ...
 
     <strong>deal</strong> is most useful when used with cell arrays and structures
     via comma separated list expansion.  Here are some useful
     constructions:
     [S.FIELD] = <strong>deal</strong>(X) sets all the fields with the name FIELD
        in the structure array S to the value X.  If S doesn't
        exist, use [S(1:M).FIELD] = <strong>deal</strong>(X);
     [X{:}] = <strong>deal</strong>(A.FIELD) copies the values of the field with
        name FIELD to the cell array X.  If X doesn't exist,
        use [X{1:M}] = <strong>deal</strong>(A.FIELD).
     [A,B,C,...] = <strong>deal</strong>(X{:}) copies the contents of the cell
        array X to the separate variables A,B,C,...
     [A,B,C,...] = <strong>deal</strong>(S.FIELD) copies the contents of the fields
        with the name FIELD to separate variables A,B,C,...
 
     Examples:
        sys = {rand(3) ones(3,1) eye(3) zeros(3,1)};
        [a,b,c,d] = deal(sys{:});
 
        direc = dir; filenames = {};
        [filenames{1:length(direc),1}] = deal(direc.name);
 
     See also <a href="matlab:help lists">lists</a>, <a href="matlab:help paren">paren</a>.

    Reference page in Help browser
       <a href="matlab:doc deal">doc deal</a>

subplotfit(x,y,ntrans^2);
{Undefined function or variable "xnum".

Error in subplotfit (line 27)
    index = (yi-1)*xnum + xi;
} 
ntrans^2

ans =

    16

x

x =

     1

y

y =

     1


unit=1;
figure
while unit~=-1
clf
for x = 1:4,
for y = 1:4,
subplotfit(x,y,ntrans^2);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
title(num2str(unit))
unit = figure_controls(gcf,unit)
end
end
end
{Undefined function or variable "xnum".

Error in subplotfit (line 27)
    index = (yi-1)*xnum + xi;
} 

unit=1;
figure
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
title(num2str(unit))
unit = figure_controls(gcf,unit)
end
end
end

unit =

     1


unit =

     1


unit =

     1


unit =

     1


unit =

     1


unit =

     1


unit =

     1


unit =

     1


unit =

    -1

{Subscript indices must either be real positive integers or logicals.
} 
unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

unit =

    -1

linkaxes

unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
linkaxis
end

unit =

     2

{Undefined function or variable 'linkaxis'.
} 

unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
linkaxes
end

unit =

     2


unit =

     3


unit =

     4


unit =

     5


unit =

     6


unit =

     7


unit =

    -1

unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
linkaxes(sph(:),'xy')
end

unit =

     8


unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(2)])
unit = figure_controls(gcf,unit)
end

unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     8


unit =

     9


unit =

    10


unit =

    11


unit =

    12


unit =

    13


unit =

    14


unit =

    15


unit =

    16


unit =

    17


unit =

    18


unit =

    19


unit =

    20


unit =

    21


unit =

    22


unit =

    23


unit =

    24


unit =

    25


unit =

    26


unit =

    27


unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
imagesc(tbins,sq(perm_stat(:,unit,x,y,:))'),axis xy
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end
{Error using image
Incorrect number of arguments specified

Error in imagesc (line 40)
    hh = image(varargin{:},'CDataMapping','scaled');
} 
java.lang.NullPointerException
	at sun.print.ServiceDialog$PrintServicePanel.<init>(Unknown Source)
	at sun.print.ServiceDialog$GeneralPanel.<init>(Unknown Source)
	at sun.print.ServiceDialog.initPrintDialog(Unknown Source)
	at sun.print.ServiceDialog.<init>(Unknown Source)
	at javax.print.ServiceUI.printDialog(Unknown Source)
	at com.mathworks.page.export.printdlg.Printdlg.setVisible(Printdlg.java:470)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.mathworks.jmi.AWTUtilities$Invoker$3.runWithOutput(AWTUtilities.java:487)
	at com.mathworks.jmi.AWTUtilities$Invoker$2.watchedRun(AWTUtilities.java:441)
	at com.mathworks.jmi.AWTUtilities$WatchedRunnable.run(AWTUtilities.java:373)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)



unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
imagesc(tbins,sq(perm_stat(:,unit,x,y,:))'),axis xy
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end
{Error using image
Incorrect number of arguments specified

Error in imagesc (line 40)
    hh = image(varargin{:},'CDataMapping','scaled');
} 

unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
imagescnan(tbins,1:niter,sq(perm_stat(:,unit,x,y,:))'),axis xy
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
imagesc(tbins,1:niter,sq(perm_stat(:,unit,x,y,:))'),axis xy
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

unit =

    -1

caxis

ans =

   -1.2453    9.4462


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
imagesc(tbins,1:niter,sq(perm_stat(:,unit,x,y,:))'),axis xy
end
end
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

unit =

     8


unit =

     9

Enter index #: 51

unit =

    51


unit =

    -1


unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

     8

Enter index #: 51

unit =

    51


unit =

    52


unit =

    53


unit =

    54


unit =

    55


unit =

    56


unit =

    57


unit =

    58

Enter index #: 75

unit =

    75

Enter index #: 29

unit =

    29


unit =

    30

{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 
0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate
 0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate
                                     |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 
0.5*Trial.xyzSampleRate/newSampleRate

ans =

     8

./Trial.xyzSampleRate.*newSampleRate
 ./Trial.xyzSampleRate.*newSampleRate
|
{Error: Unexpected MATLAB operator.
} 
Trial.xyzSampleRate.*newSampleRate

ans =

  898.2164

size(tbins)

ans =

     1    75

5*newSampleRate

ans =

   37.4628

round(10*newSampleRate)

ans =

    75

tbins = linspace(-5000,5000,size(rufrs,1));

figure
unit=7;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    -1

unit=29;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    -1

unit = 29;
while unit~=-1,
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
[srwdist,srwdind] = sort(rwdist);
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
[srwdisto,srwdindo] = sort(rwdisto);
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
[swwdist,swwdind] = sort(wwdist);
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
[swwdisto,swwdindo] = sort(wwdisto);
clf
subplot2(4,5,[1,2],1);
pfr.plot(unit,1);
title(num2str(unit))
subplot2(4,5,[3,4],1);
pfw.plot(unit,1);
bs(1) =subplot2(4,5,[1,2],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>200&rwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>400&rwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>600&rwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(2) =subplot2(4,5,[3,4],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>200&rwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>400&rwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>600&rwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(3) =subplot2(4,5,[1,2],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>200&wwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>400&wwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>600&wwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(4) =subplot2(4,5,[3,4],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>200&wwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>400&wwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>600&wwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,:,unit),2)),'k')
Lines([],0,'k');
linkaxes(bs,'xy');
xlim([tbins(1),tbins(end)])
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

ans =

  512.0369


ans =

  518.0369


unit =

    -1

disp(matlabroot)
/usr/local/share/matlab/R2011b


flen = 5

flen =

     5

unit = 29;
while unit~=-1,
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
[srwdist,srwdind] = sort(rwdist);
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
[srwdisto,srwdindo] = sort(rwdisto);
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
[swwdist,swwdind] = sort(wwdist);
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
[swwdisto,swwdindo] = sort(wwdisto);
clf
subplot2(4,5,[1,2],1);
pfr.plot(unit,1);
title(num2str(unit))
subplot2(4,5,[3,4],1);
pfw.plot(unit,1);
bs(1) =subplot2(4,5,[1,2],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>200&rwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>400&rwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,rwdist>600&rwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(rufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(2) =subplot2(4,5,[3,4],[2,3]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>200&rwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>400&rwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,rwdisto>600&rwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(dufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(3) =subplot2(4,5,[1,2],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>200&wwdist<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>400&wwdist<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,wwdist>600&wwdist<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(wufrs(:,:,unit),2)),'k')
Lines([],0,'k');
bs(4) =subplot2(4,5,[3,4],[4,5]);
hold on
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto<200,unit),2)))
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>200&wwdisto<400,unit),2)),'r')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>400&wwdisto<600,unit),2)),'g')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,wwdisto>600&wwdisto<800,unit),2)),'c')
plot(tbins,Filter0(gausswin(flen)./sum(gausswin(flen)),nanmean(sufrs(:,:,unit),2)),'k')
Lines([],0,'k');
linkaxes(bs,'xy');
xlim([tbins(1),tbins(end)])
title(num2str(unit))
unit = figure_controls(gcf,unit)
end

ans =

  174.0183


ans =

  180.0183


unit =

    -1


figure
unit=29;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    -1

figure,plot(rufrs(:,rwdist<200,unit))
{Subscript indices must either be real positive integers or logicals.
} 
whos rufrs
  Name        Size                 Bytes  Class     Attributes

  rufrs      75x81x76            3693600  double              

size(rwdist)

ans =

    81     1

sum(rwdist<200)

ans =

    18

unit =29

unit =

    29

figure,plot(rufrs(:,rwdist<200,unit))
disp(matlabroot)
/usr/local/share/matlab/R2011b

unit = 29

unit =

    29

cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
sample_size

sample_size =

    18     7    70    28


rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end

for p1 = 1:ntrans
for p2 = 1:ntrans
for iter = 1:niter,
    perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                 cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
end
end
end
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)

unit =

    -1


unit=29;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    30

Enter index #: 7

unit =

     7

Enter index #: 51

unit =

    51

{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 
unit=57;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    58

Enter index #: 29

unit =

    29


unit =

    30


unit =

    31


unit =

    -1

unit = 31

unit =

    31

cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for p1 = 1:ntrans
for p2 = 1:ntrans
for iter = 1:niter,
    perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                 cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
end
end
end
figure,plot(sq(perm_stat(:,unit,x,y,:)))
figure,plot(sq(perm_stat(:,unit,1,1,:)))

for unit = 1:size(rufrs,3),
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for p1 = 1:ntrans
for p2 = 1:ntrans
for iter = 1:niter,
    perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                 cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
end
end
end
end

unit=31;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end

unit =

    30


unit =

    29


unit =

    30


unit =

    31


unit =

    32


unit =

    33


unit =

    34


unit =

    35


unit =

    36

Enter index #: 51

unit =

    51


unit =

    -1

newSamplerate
{Undefined function or variable 'newSamplerate'.
} 
newSampleRate

newSampleRate =

    7.4926

wonprm

wonprm =

          40
         480
        2072
        2736
        3336
        6736
       10688
       20280
       24624
       27280
       29968
       30912
       31944
       34232
       34832
       44008
       46016
       47328
       47984
       51056
       51656
       52320
       53104
       57480
       58080
       59920
       60640
       65832
       73456
       74720
       75992
       77640
       79400
       81048
       83864
       84680
       98272
      100864
      103176
      103784
      108616
      109288
      110152
      113712
      114304
      114800
      116696
      117888
      119656
      120208
      121256
      122440
      124160
      125620
      126528
      127304
      128680
      130896
      133616
      134136
      135040
      135880
      153296
      155560
      157600
      158328
      158920
      164320
      164840
      166664
      168808
      169360
      171032
      174384
      174960
      185680
      191888
      192432
      194384
      195120
      198888
      199488
      201896
      203184
      204640
      205080
      206704
      207384
      211552
      220000
      220576
      224688
      225824
      228538
      229816
      230744
      252288
      253032
      253888
      254496
      255496
      257424
      258656
      260816
      262288
      262824
      263312
      264920
      265912
      271232
      272200
      272784
      274040
      276112
      276700
      277512
      278520
      279032
      279800
      280808
      289008
      290872
      353784
      354952
      356112
      359456
      360848
      362232
      362992
      363576
      364048
      364864
      365912
      370992
      371496
      372552
      374616
      391560
      392656
      394136
      398224
      403440
      406088
      411216
      412984
      422168
      422856
      424328
      426248
      427552
      473856
      474707
      483104
      485512
      506704
      507565
      508397
      513160
      516449
      517349
      518897
      521200

woffprm

woffprm =

         103
        1000
        2266
        2976
        3472
        6840
       11696
       20328
       26344
       27346
       30400
       30976
       32872
       34368
       34960
       45448
       46517
       47444
       48642
       51200
       51816
       52376
       54336
       57624
       58211
       60192
       60712
       67019
       74310
       74863
       77144
       77696
       79976
       82231
       83968
       84960
       98334
      100928
      103295
      103876
      108896
      109429
      111112
      113903
      114417
      114990
      116904
      119016
      119728
      120592
      121344
      122908
      124840
      125744
      126878
      127382
      128760
      131336
      133684
      134247
      135400
      136024
      154619
      156960
      157912
      158488
      160688
      164461
      165437
      167464
      168916
      169442
      171552
      174560
      175093
      186360
      192007
      192923
      194496
      195528
      199092
      199591
      202048
      203320
      204698
      205619
      206776
      207736
      211720
      220188
      220720
      224870
      226000
      229200
      229960
      231144
      252525
      253120
      254056
      255120
      255621
      258208
      259520
      261480
      262395
      262913
      263605
      265296
      266832
      271838
      272400
      272935
      274368
      276338
      276744
      277736
      278632
      279221
      279946
      280952
      289222
      290936
      353928
      355008
      356200
      359896
      361008
      362576
      363096
      363640
      364248
      365232
      366055
      371040
      371904
      373320
      375240
      391624
      393160
      394248
      398688
      403520
      406352
      411840
      413704
      422401
      423368
      424448
      426712
      428025
      474144
      475000
      483872
      485656
      507000
      507624
      509016
      513446
      516544
      517485
      520560

clear
{No appropriate method, property, or field modeWindowButtonDownFcn for class
handle.handle.

Error in uitools.uimode/modeControl>localModeWindowButtonDownFcn (line 151)
hThis.modeWindowButtonDownFcn(hFig,evd,hThis,newValue);
} 
Error while evaluating figure WindowButtonDownFcn


matlabMCRprocess = com.mathworks.jmi.MatlabMCR;matlabMCRprocess.mtFindAllTabCompletions(''), clear('matlabMCRprocess');
 
ans =
 
 
java.lang.String[]:
    [0 element array]


 

s = MTASession('jg05-20120317');
Trial = MTATrial(s,{{'CluRes',s.xyzSampleRate}},'all');
Trial = Trial.filter();
klen = 64;
kern = ones(klen,1);
overlap = 16;
nnn = 81;
nxbins = 50;
nybins = 50;
xbins = linspace(Trial.Maze.boundaries(1,1),Trial.Maze.boundaries(1,2),nxbins)';
ybins = linspace(Trial.Maze.boundaries(2,2),Trial.Maze.boundaries(2,1),nxbins)';
myxyz = sq(Trial.xyz(:,7,[1,2]));
t =         permute(reshape(          myxyz(1:size(myxyz,1)-mod(size(myxyz,1),klen),:),klen,[],2),[4,1,2,3]);
for shift = 1:klen/overlap-1,
t = cat(1,t,permute(reshape(circshift(myxyz(1:size(myxyz,1)-mod(size(myxyz,1),klen),:),-overlap*shift),klen,[],2),[4,1,2,3]));
end
myxyz = t;
myxyz = reshape(sq(sum(repmat(permute(repmat(permute(repmat(kern./sum(kern),1,size(myxyz,3)),[5,4,1,2,3]),size(myxyz,4),1),[2,3,4,1]),klen/overlap,1).*myxyz,2)),[],2);
newSampleRate = 1/((size(Trial.xyz,1)-mod(size(Trial.xyz,1),klen))/Trial.xyzSampleRate/length(myxyz));
myrx = SelectPeriods(myxyz,round((Trial.Bhv.getState('rear').state+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),'c',1,1);
mywx = SelectPeriods(myxyz,round((Trial.Bhv.getState('walk').state+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),'c',1,1);
myufr = {};
for unit = 1:76
myres = Trial.res(Trial.clu==unit);
myufr{unit} = zeros(size(Trial.xyz,1),1);
myufr{unit}(1:myres(end)) = accumarray(myres,ones(size(myres),1));
t =         permute(reshape(myufr{unit}(1:size(myufr{unit},1)-mod(size(myufr{unit},1),klen)),klen,[]),[3,1,2]);
for shift = 1:klen/overlap-1
t = cat(1,t,permute(reshape(circshift(myufr{unit}(1:size(myufr{unit},1)-mod(size(myufr{unit},1),klen)),-overlap*shift),klen,[]),[3,1,2]));
end
myufr{unit} = t; 
myufr{unit} = reshape(sq(sum(repmat(permute(repmat(kern,1,size(myufr{unit},3)),[3,1,2]),size(myufr{unit},1),1).*myufr{unit},2))/(klen/Trial.xyzSampleRate),[],1);
end
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
{Warning: Input arguments must be scalar.} 
myufr = cell2mat(myufr);
pfw = MTAPlaceField(Trial,[],'walk');
wpmr = zeros(size(myxyz,1),76);
for unit =1:76,
for i=1:size(myxyz,1),
wpmr(i,unit) = pfw.rateMap{unit}(find(pfw.xbin<round(myxyz(i,1)),1,'last'),find(pfw.ybin<round(myxyz(i,2)),1,'last'));
end
end
ufrwd = myufr-wpmr;
non_immobile_bhvs = {'walk','bturn','hturn','rear'};
iper = [1,size(Trial.xyz,1)];
for i = 1:length(non_immobile_bhvs),
iper = SubstractRanges(iper,Trial.Bhv.getState(non_immobile_bhvs(i)).state);
end
Trial.Bhv = Trial.Bhv.addState('i','immobile',iper);
iperdur = diff(Trial.Bhv.getState('immobile').state,1,2);
rper = Trial.Bhv.getState('rear').state;
interrdur = [rper(2:end,1)-rper(1:end-1,2)];
grperind = find(interrdur>3*Trial.xyzSampleRate);
no_fol_rear_rearoff = rper(grperind,2); 
no_pre_rear_rearon =  rper([1;grperind+1],1); 
wper = Trial.Bhv.getState('walk').state;
interwdur = [wper(2:end,1)-wper(1:end-1,2)];
gwperind = find(interwdur>3*Trial.xyzSampleRate);
no_fol_walk_walkoff = wper(gwperind,2); 
no_pre_walk_walkon =  wper([1;gwperind+1],1); 
[~,nfroffi,npwoni] = NearestNeighbour(no_fol_rear_rearoff,no_pre_walk_walkon);
interwrdur = abs(no_pre_walk_walkon(npwoni)-no_fol_rear_rearoff(nfroffi));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroffi(bwrperind));
no_fol_rearwalk_rearoff = no_fol_rear_rearoff;
no_fol_rearwalk_rearoff(badr) = [];
ys_fol_rearwalk_rearoff =no_fol_rear_rearoff(badr);
[~,nfroni,npwoffi] = NearestNeighbour(no_pre_rear_rearon,no_fol_walk_walkoff);
interwrdur = abs(no_fol_walk_walkoff(npwoffi)-no_pre_rear_rearon(nfroni));
bwrperind = find(interwrdur<3*Trial.xyzSampleRate);
badr = unique(nfroni(bwrperind));
no_pre_rearwalk_rearon = no_pre_rear_rearon;
no_pre_rearwalk_rearon(badr) = [];
ys_pre_rearwalk_rearon =no_pre_rear_rearon(badr);
btper = Trial.Bhv.getState('bturn').state;
no_pre_rear_bturn =[];
for i=1:size(btper,1),
if isempty(find(abs(repmat(btper(i,1),size(rper,1),1)-rper(:,1))<2*Trial.xyzSampleRate,1,'first'))
no_pre_rear_bturn(end+1,:) = btper(i,:);
end
end
no_pre_rear_bturnon = no_pre_rear_bturn(:,1);
no_fol_rear_bturnoff = no_pre_rear_bturn(:,2);
no_pre_rearturn_bturn =[];
for i=1:size(no_pre_rear_bturn,1),
if isempty(find(abs(repmat(no_pre_rear_bturn(i,1),size(no_pre_rear_bturn,1),1)-no_pre_rear_bturn(:,1))<2*Trial.xyzSampleRate&abs(repmat(no_pre_rear_bturn(i,1),size(no_pre_rear_bturn,1),1)-no_pre_rear_bturn(:,1))>0,1,'first'))
no_pre_rearturn_bturn(end+1,:) = no_pre_rear_bturn(i,:);
end
end
no_pre_rearturn_bturnon = no_pre_rearturn_bturn(:,1);
no_fol_rearturn_bturnoff = no_pre_rearturn_bturn(:,2);
group_resdescrip{1} = 'no_pre_rear_rearon';
group_restrains{1} =   no_pre_rear_rearon;
group_resdescrip{2} = 'no_fol_rear_rearoff';
group_restrains{2} =   no_fol_rear_rearoff;
group_resdescrip{3} = 'no_pre_rearwalk_rearon';
group_restrains{3} =   no_pre_rearwalk_rearon;
group_resdescrip{4} = 'no_fol_rearwalk_rearoff';
group_restrains{4} =   no_fol_rearwalk_rearoff;
group_resdescrip{5} = 'ys_pre_rearwalk_rearon';
group_restrains{5} =   ys_pre_rearwalk_rearon;
group_resdescrip{6} = 'ys_fol_rearwalk_rearoff';
group_restrains{6} =   ys_fol_rearwalk_rearoff;
group_resdescrip{7} = 'no_pre_walk_walkon';
group_restrains{7} =   no_pre_walk_walkon;
group_resdescrip{8} = 'no_fol_walk_walkoff';
group_restrains{8} =   no_fol_walk_walkoff;
group_resdescrip{9} = 'no_pre_rear_bturnon';
group_restrains{9} =   no_pre_rear_bturnon;
group_resdescrip{10} = 'no_fol_rear_bturnoff';
group_restrains{10} =   no_fol_rear_bturnoff;
group_resdescrip{11} = 'no_pre_rearturn_bturnon';
group_restrains{11} =   no_pre_rearturn_bturnon;
group_resdescrip{12} = 'no_fol_rearturn_bturnoff';
group_restrains{12} =   no_fol_rearturn_bturnoff;
ronpw = group_restrains{1};
roffw = group_restrains{2};
wonprm = group_restrains{7};
woffprm = group_restrains{8};
rufrs = GetSegs(ufrwd,round(((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
dufrs = GetSegs(ufrwd,round(((roffw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
wufrs = GetSegs(ufrwd,round(((wonprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
sufrs = GetSegs(ufrwd,round(((woffprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
pfw = MTAPlaceField(Trial,[],'walk');
pfr = MTAPlaceField(Trial,[],'rear');
pfMaxPosRear = zeros(size(pfr.cluMap,1),2);
pfMaxPosWalk = zeros(size(pfr.cluMap,1),2);
for unit = 1:size(pfw.cluMap,1),
    try, pfMaxPosWalk(unit,:) = pfw.maxRatePos{unit}(pfw.maxRateMax{unit},:);,end
    try, pfMaxPosRear(unit,:) = pfr.maxRatePos{unit}(pfr.maxRateMax{unit},:);,end
    upos(unit,:) = pfMaxPosWalk(unit,:);
end
rxyzs = GetSegs(myxyz,round(((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
wxyzs = GetSegs(myxyz,round(((Trial.Bhv.getState('walk').state(:,1)+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate)-5*newSampleRate),round(10*newSampleRate));
rposon = myxyz(round((ronpw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
rposoff = myxyz(round((roffw+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wposon = myxyz(round((wonprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wposoff= myxyz(round((woffprm+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
tbins = linspace(-5000,5000,size(rufrs,1));
disp(matlabroot)
/usr/local/share/matlab/R2011b

linkaxes
whos wper
  Name        Size            Bytes  Class     Attributes

  wper      273x2              4368  double              

wper(1)

ans =

    40


wsur = [];
for i = 1:size(wper,1)
wsur = cat(1,wsur,[wper(i,1),wper(i,2)]');
end
whos wsur
  Name        Size            Bytes  Class     Attributes

  wsur      546x1              4368  double              

wsur

wsur =

          40
         103
         480
         582
         936
        1000
        2072
        2266
        2736
        2976
        3336
        3472
        6736
        6840
       10688
       10768
       11016
       11200
       11352
       11552
       11600
       11696
       20280
       20328
       24624
       24728
       24904
       25032
       25368
       25467
       25792
       25890
       26248
       26344
       27280
       27346
       29968
       30032
       30160
       30280
       30352
       30400
       30912
       30976
       31944
       32120
       32184
       32480
       32720
       32784
       32816
       32872
       34232
       34368
       34832
       34960
       44008
       44160
       44248
       44520
       44808
       44856
       45112
       45344
       45400
       45448
       46016
       46064
       46408
       46517
       47328
       47444
       47984
       48169
       48480
       48642
       51056
       51200
       51656
       51816
       52320
       52376
       53104
       53312
       53632
       53840
       54072
       54336
       57480
       57624
       58080
       58211
       59920
       60192
       60640
       60712
       65832
       65934
       66253
       66297
       66640
       66760
       66912
       67019
       73456
       73704
       74059
       74176
       74280
       74310
       74720
       74863
       75992
       76232
       76288
       76662
       76883
       77144
       77640
       77696
       79400
       79528
       79680
       79976
       81048
       81296
       81592
       81806
       82096
       82231
       83864
       83968
       84680
       84960
       98272
       98334
      100864
      100928
      103176
      103295
      103784
      103876
      108616
      108784
      108840
      108896
      109288
      109429
      110152
      110720
      110984
      111112
      113712
      113903
      114304
      114417
      114800
      114990
      116696
      116904
      117888
      117944
      118128
      118520
      118672
      118768
      118808
      118856
      118872
      119016
      119656
      119728
      120208
      120592
      121256
      121344
      122440
      122534
      122840
      122908
      124160
      124296
      124368
      124512
      124741
      124840
      125620
      125744
      126528
      126656
      126760
      126878
      127304
      127382
      128680
      128760
      130896
      131336
      133616
      133684
      134136
      134247
      135040
      135216
      135232
      135400
      135880
      136024
      153296
      153350
      153688
      153752
      154040
      154142
      154464
      154619
      155560
      155816
      155848
      155992
      156064
      156136
      156240
      156304
      156464
      156712
      156888
      156960
      157600
      157656
      157696
      157912
      158328
      158488
      158920
      158992
      159216
      159304
      159496
      159569
      159920
      159984
      160279
      160320
      160520
      160688
      164320
      164461
      164840
      164952
      165296
      165437
      166664
      166720
      166816
      166992
      167232
      167464
      168808
      168916
      169360
      169442
      171032
      171096
      171304
      171552
      174384
      174560
      174960
      175093
      185680
      185848
      186152
      186360
      191888
      192007
      192432
      192561
      192848
      192923
      194384
      194496
      195120
      195192
      195256
      195408
      195480
      195528
      198888
      199092
      199488
      199591
      201896
      202048
      203184
      203320
      204640
      204698
      205080
      205191
      205488
      205619
      206704
      206776
      207384
      207584
      207640
      207736
      211552
      211720
      220000
      220188
      220576
      220720
      224688
      224870
      225824
      226000
      228538
      228808
      229152
      229200
      229816
      229960
      230744
      230880
      231024
      231144
      252288
      252376
      252408
      252525
      253032
      253120
      253888
      254056
      254496
      254696
      254816
      255120
      255496
      255621
      257424
      257544
      257736
      258048
      258152
      258208
      258656
      258760
      258864
      259008
      259072
      259168
      259312
      259520
      260816
      260968
      261056
      261120
      261168
      261280
      261416
      261480
      262288
      262395
      262824
      262913
      263312
      263360
      263520
      263605
      264920
      265024
      265048
      265120
      265176
      265296
      265912
      266016
      266352
      266448
      266640
      266832
      271232
      271376
      271734
      271838
      272200
      272400
      272784
      272935
      274040
      274368
      276112
      276338
      276700
      276744
      277512
      277736
      278520
      278632
      279032
      279221
      279800
      279946
      280808
      280952
      289008
      289222
      290872
      290936
      353784
      353928
      354952
      355008
      356112
      356200
      359456
      359544
      359752
      359896
      360848
      361008
      362232
      362440
      362504
      362576
      362992
      363096
      363576
      363640
      364048
      364248
      364864
      365032
      365168
      365232
      365912
      366055
      370992
      371040
      371496
      371576
      371784
      371904
      372552
      372680
      372728
      372856
      373000
      373320
      374616
      374744
      375056
      375112
      375192
      375240
      391560
      391624
      392656
      392712
      393000
      393160
      394136
      394248
      398224
      398288
      398576
      398688
      403440
      403520
      406088
      406352
      411216
      411384
      411632
      411696
      411784
      411840
      412984
      413080
      413385
      413704
      422168
      422401
      422856
      422968
      423104
      423240
      423272
      423368
      424328
      424448
      426248
      426552
      426592
      426712
      427552
      427556
      427864
      428025
      473856
      474144
      474707
      475000
      483104
      483208
      483296
      483400
      483704
      483872
      485512
      485656
      506704
      507000
      507565
      507624
      508397
      508728
      508736
      508784
      508792
      509016
      513160
      513446
      516449
      516544
      517349
      517485
      518897
      518983
      519313
      519354
      519680
      519808
      519816
      519936
      520088
      520248
      520432
      520480
      520504
      520560
      521200
      521472


wsur = [];
for i = 1:size(wper,1)
wsur = cat(1,wsur,[wper(i,1):wper(i,2)]');
end
whos wsur
  Name          Size             Bytes  Class     Attributes

  wsur      38097x1             304776  double              

wsurpos = Trial.xyz(wsur,Trial.Model.gmi(Trial.trackingMarker),[1,2]);

RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 1000;
ntrans = 4;
perm_stat = zeros(size(rufrs,1),size(rufrs,3),ntrans,ntrans,niter);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
[srwdist,srwdind] = sort(rwdist);
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
[srwdisto,srwdindo] = sort(rwdisto);
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
[swwdist,swwdind] = sort(wwdist);
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
[swwdisto,swwdindo] = sort(wwdisto);
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
for p1 = 1:ntrans
for p2 = 1:ntrans
for iter = 1:niter,
    perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                 cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
end
end
end
end

figure
unit=31;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
unit = figure_controls(gcf,unit)
end
{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 

unit=31;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([1,numel(tbins)])
unit = figure_controls(gcf,unit)
end

unit =

    30


unit =

    29

{SWITCH expression must be a scalar or string constant.

Error in figure_controls (line 5)
switch double(whatkey)
} 

wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),size(wsurpos,1),1)).^2,2));
{Error using -
Matrix dimensions must agree.
} 
[swsurdist,swsurdind] = sort(wsurdist);
{Undefined function or variable 'wsurdist'.
} 
whos rwdist
  Name         Size            Bytes  Class     Attributes

  rwdist      81x1               648  double              

whos rposon
  Name         Size            Bytes  Class     Attributes

  rposon      81x2              1296  double              

unit = 29

unit =

    29

wsursamp = wsur(wsur_rand_ind(:,iter))
{Undefined variable wsur_rand_ind.
} 
wsurpos = Trial.xyz(wsursamp,Trial.Model.gmi(Trial.trackingMarker),[1,2]);
{Undefined function or variable 'wsursamp'.
} 
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
{Undefined function or variable 'wsss'.
} 
wsss = size(rposon,1);
wsur_rand_ind = randi([1,length(wsurpos)],wsss,niter);
iter = 1

iter =

     1

wsursamp = wsur(wsur_rand_ind(:,iter))

wsursamp =

      135256
       34927
      122485
       52330
       32068
      422367
       66280
      110441
      118264
       32319
      265220
      391590
       65874
      207703
       34888
      520461
      192861
      274073
      225846
       74164
      411317
      517362
      116869
       53727
      156081
      167291
      373211
      411816
      356166
      260930
      114941
       74302
      134168
      280847
      156588
      483816
      516503
      199000
      274040
      159497
       81219
      135969
      423150
      224701
       54206
      485523
      356149
      473987
      363082
      126771
      122871
       25461
      393103
      278586
       57551
       34871
       44028
      124821
      120382
       30029
      124787
      231089
      154572
      114937
       25019
       44830
      125657
       53723
      422903
      360924
      153752
      171349
      356146
       58133
       79924
      220631
      155877
      393151
      164871
       32044
      262380

wsurpos = Trial.xyz(wsursamp,Trial.Model.gmi(Trial.trackingMarker),[1,2]);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
{Error using -
Matrix dimensions must agree.
} 
size(repmat(upos(unit,:),wsss,1)).^2,2))
 size(repmat(upos(unit,:),wsss,1)).^2,2))
                                      |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 
size(repmat(upos(unit,:),wsss,1))

ans =

    81     2

size(wsurpos)

ans =

    81     1     2

wsurpos = sq(Trial.xyz(wsursamp,Trial.Model.gmi(Trial.trackingMarker),[1,2]));
size(myxyz)

ans =

       32624           2

wsurdist = sqrt(sum((myxyz-repmat(upos(unit,:),wsss,1)).^2,2));
{Error using -
Matrix dimensions must agree.
} 
wsurdist = sqrt(sum((myxyz(wsursamp,:)-repmat(upos(unit,:),wsss,1)).^2,2));
{Index exceeds matrix dimensions.
} 
wsurufrs = GetSegs(ufrwd,...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
wsurufrs

wsurufrs(:,:,1) =

  Columns 1 through 7

       NaN   -0.6922   -2.5443    2.9033    0.1884   -2.0808    2.4520
       NaN    1.1810   -2.5443       NaN    0.1884   -2.0808    2.7831
       NaN    1.1810   -2.5443   -0.5783    0.1884   -2.0808   -2.8364
       NaN   -0.6922   -2.5443       NaN   -1.8310   -2.0808    0.9099
       NaN   -0.6922   -2.5443       NaN   -2.0078   -2.0808    2.7831
       NaN   -2.2275   -2.5443       NaN   -2.0078   -2.0808    4.6562
       NaN   -2.3290   -2.5443       NaN    1.7419   -2.0808    4.6562
       NaN    1.4173   -2.5443       NaN    1.7419   -2.0808    0.9186
       NaN    1.4173   -0.6712       NaN    1.6055   -2.0808    2.3849
       NaN    3.4194    1.3417       NaN    1.6055   -2.0808    2.1780
       NaN    3.5288    1.3718       NaN   -2.1408   -2.0808    3.0578
       NaN    1.5816    1.1060       NaN   -0.2677   -2.0808    4.3752
       NaN    1.6556   -0.4264       NaN    1.6889   -2.0808    1.0010
       NaN   -0.2175   -2.3912       NaN    1.6157   -2.0808    0.8399
       NaN    1.6556   -2.3912       NaN    1.6157   -2.0808    0.4843
       NaN   -0.2175   -2.3912       NaN   -0.2575   -2.0808    1.9904
       NaN   -0.2175   -2.3912       NaN   -0.2575   -2.0808    1.9904
       NaN    1.6556   -2.3912       NaN    1.6157   -2.0078    0.1172
    2.0153   -0.4043   -2.3912       NaN    1.6889   -2.0044    0.1172
    2.6871   -0.5600   -2.3912       NaN    1.8486   -2.0573    0.4843
    4.8260   -0.5600   -2.3912       NaN    0.2815   -1.9721    2.3574
    3.6759   -2.5773   -2.3912       NaN   -1.7430   -1.9708    2.3574
    2.4927   -2.4325   -2.3912       NaN   -0.2125   -1.9708    4.4649
   -0.4277   -2.1647   -2.3912       NaN   -0.3168   -1.9708    2.2996
   -2.3654   -1.8631   -2.2996       NaN   -0.1105   -2.0133    0.2414
   -0.2170   -1.7943   -2.2996       NaN   -0.1136   -2.4176    0.2414
   -0.7626    0.0765    1.9201       NaN   -0.3268   -2.4176   -1.6317
   -0.5727   -0.0246    5.7263       NaN    1.5188   -2.5490   -1.6317
   -0.3590   -0.0246    7.7371       NaN    3.2769   -2.9699   -1.9315
   -0.1032   -0.0246    6.9359       NaN    3.2148   -2.9600   -0.2109
    1.9520   -0.0781    2.4356       NaN    0.9140   -2.4349    0.0364
    3.7884   -0.2575   -0.6628       NaN   -1.2245   -2.0445    3.8089
    3.5386    3.1681   -0.3856       NaN   -2.6357   -1.1697    7.3980
    3.5073    2.9964    1.4120       NaN    1.3161   -1.1321    7.0831
    2.7363    4.6608    3.9339    5.4693    1.6561   -1.2513    6.9046
    2.6103    4.3251    4.3681    6.5527    1.4875   -1.5082    3.5340
    2.6471    1.5182    1.9904    5.4263    3.2439   -1.5082   -0.1950
    2.6729    2.4735    0.4264    4.2695    1.3707   -1.4734   -1.9980
    2.4125   -1.3674    0.3290    2.3370    1.2212    0.0364   -0.9328
    0.2331    0.2439    0.0561    0.4638    4.9675    0.0364   -1.3069
    2.1968    3.8071   -0.0407    1.1343    4.9675    0.0364   -1.3069
    0.2747    5.6803    3.7056    1.3151    8.7203    0.0364    0.5662
    0.1801    7.5534    1.8480    1.6995    9.1972   -1.8367   -1.1183
    0.1801    7.6164    2.3487    1.8251    5.8961   -1.4734   -0.6194
   -1.6939    3.8701    2.3487    2.1029    3.9878   -1.4734   -0.6613
   -1.6939    2.0621   -1.3976    2.2795   -1.6755   -1.1733   -1.7251
    0.1793    0.1890   -1.3976    2.1248   -0.0450   -1.1733    0.9846
    0.1793   -1.5052   -0.0251    3.5402   -0.2480   -1.1233    0.6854
    0.1801    0.5084   -0.0210    3.6941   -0.2480   -1.3888    0.6854
    0.1801    0.5084   -0.0210    4.9309    1.5671   -1.1545    0.6854
   -1.6931    0.3020   -0.0210    4.8212   -0.3328   -1.4467   -1.8487
   -1.6939    0.0624   -1.8942    3.0389   -0.2594   -1.4467   -0.6194
   -1.6650   -1.8123    0.4756    5.3283   -0.1307   -1.4467   -0.9328
   -1.6650   -1.6726    1.5343    1.8568   -1.8521   -1.9315   -1.0124
   -1.6650   -1.6683    1.7404    0.2746    0.0758   -1.9315    1.2554
   -1.6650   -1.6683    3.6863    2.0810    1.2537   -2.0841    1.9486
   -1.6650    0.1596    3.4167    0.2862    2.6280   -2.0841    2.2049
   -1.6650    2.0142    4.5325    2.0607    4.4398   -2.0461    3.8945
   -1.6650    2.4040    6.7727    1.8045    6.2067   -2.0226    3.0835
   -1.6650    4.5374    6.4222    1.2220    4.5602   -1.9237    6.9356
   -1.6650    2.4911    3.8980    1.2277    3.1743   -2.0654    6.9199
   -1.6650    0.3969    2.9038   -0.5880    1.7610   -2.2361    7.3140
    0.2082    0.3850    1.4202    2.0707   -1.9853   -2.1212    5.5205
    0.2082    0.2217   -0.3208    0.2767   -1.9853   -2.1212   -0.4454
    0.2082    0.2217   -0.6482   -0.1685   -1.3205   -2.1212   -0.4280
    0.2082   -0.0562   -0.6482    1.4301   -1.3205   -2.0854   -2.0633
   -1.6650    1.9789   -0.6482   -0.5004   -1.3205   -1.8339   -2.2066
   -1.6650    0.3229   -0.6482   -0.5004    0.5526   -1.5965   -2.2066
   -1.5043    0.3229   -0.4442    1.5546    0.1717   -2.3823    0.1058
    0.3688    4.0691    1.5523    1.5546    0.1717   -2.2676    2.1960
    0.3687    2.1526    1.5531    1.9897    0.7247   -2.7727    4.0839
    0.3688    4.0257    1.5531    5.7360   -1.1485   -2.5304    3.6150
    4.1151    4.0257    1.5357    4.0780    0.7247   -2.0644    3.8227
    2.5194    1.8577   -0.6488    2.1838    0.7247   -2.0644    1.7700
    2.5100    4.0839       NaN    2.1838    2.0449   -2.0644   -0.5727

  Columns 8 through 14

    3.0023   -1.9763   -0.2575   -1.6442   -1.5495   -0.0562   -1.0100
    0.1373   -1.9763    1.6157   -1.5985   -1.5495   -0.0562   -1.9581
   -1.7358   -2.1251    1.6889   -1.6931   -1.5495   -0.0562   -2.1122
   -1.7358   -2.1251    1.8486   -1.6931   -1.5495   -0.0562   -2.2576
   -2.1271   -2.2322    0.2815   -1.6939   -1.5495   -1.9294   -2.0350
   -0.3880   -0.1711   -1.7430   -1.6939   -1.5495   -1.9294   -1.6898
    1.4852   -0.1786   -0.2125   -1.5043   -1.5495   -1.9294   -1.9358
    1.4852   -0.1786   -0.3168   -1.5043   -1.5495   -1.9294   -1.6410
    3.3583   -0.1786   -0.1105   -1.5043   -1.5495   -1.9294   -1.4120
    1.4852   -0.1786   -0.1136   -1.5043   -1.6442   -1.9294    0.4612
    1.4774   -0.3590   -0.3268    0.3688   -1.6442   -1.9294    0.4612
    1.4774   -0.3268    1.5188    2.2699   -1.6442   -1.9294    0.5340
   -0.3957   -0.2916    3.2769    2.5097   -1.6442   -1.9294   -0.3844
    1.4774   -2.4331    3.2148    2.4069   -1.6400   -1.9294   -1.9946
   -0.3957   -0.7042    0.9140    0.4035   -1.6400   -1.9294   -0.5538
   -0.3957    1.1060   -1.2245   -1.5200   -1.6400   -0.0562   -1.1943
   -0.2539    2.9791   -2.6357   -1.5785   -1.5403   -0.0562   -1.3269
   -2.1271    2.9791    1.3161    0.2946   -1.5495    1.8169   -1.0624
   -0.3880    1.1029    1.6561    0.0356   -1.5495    1.8169    0.7997
   -0.5312   -0.8693    1.4875   -0.0381   -1.5495    5.5632    0.6873
    2.1440   -2.7425    3.2439   -0.1736   -1.5495    5.5632    0.5308
    6.1849   -2.5807    1.3707   -2.1325   -1.5495    5.2823    0.3247
    3.4946   -2.5807    1.2212   -2.1372   -1.5495    4.9573   -1.5484
    3.1451   -2.6629    4.9675   -2.1372   -1.6442   -0.9632   -1.6400
    4.5804   -0.8153    4.9675   -2.0907   -1.6304    4.3251   -1.6442
    0.4772    1.0578    8.7203   -0.2176   -1.7136    2.4520   -1.5495
    2.6487    1.0240    9.1972    0.0077   -1.6726    2.4520   -1.5985
    4.7977    0.6713    5.8961    0.3739   -1.6726    2.7831   -1.5985
    3.0751   -1.0976    3.9878    0.7230   -1.6255   -2.8364   -1.6660
    5.0467   -1.3959   -1.6755    2.5918   -1.6255    0.9099   -1.6683
    3.3046    2.4709   -0.0450    2.2566   -1.6255    2.7831   -1.6726
    3.3046    2.8981   -0.2480    2.4949   -1.6255    4.6562    0.2962
    5.4409    2.8981   -0.2480    2.4816   -1.6255    4.6562    0.2962
    3.5677    1.4107    1.5671   -1.5985   -1.6255    0.9186    2.2662
    3.5677   -0.4624   -0.3328   -0.2284   -1.8123    2.3849    2.2662
    3.7396   -0.2861   -0.2594   -0.0166   -1.7493    2.1780    0.5338
   -0.0067   -0.3886   -0.1307   -0.0989   -1.4321    3.0578    0.4035
    0.0192    1.2097   -1.8521   -0.0246   -1.0931    4.3752   -1.6759
    0.0192   -0.6565    0.0758   -1.6848   -1.1256    1.0010   -1.8376
   -2.0133    1.4120    1.2537   -1.3392   -1.0992    0.8399   -1.8376
    1.4741    1.7988    2.6280   -1.2138   -1.0202    0.4843   -1.8376
    3.0211    2.1146    4.4398   -1.2429   -1.0624    1.9904   -1.9212
    4.8695    2.1498    6.2067   -1.2138   -1.0624    1.9904   -2.1086
    6.7797    0.2731    4.5602   -1.2001   -1.0624    0.1172   -2.1086
    5.0330    1.8282    3.1743   -1.2001   -1.2203    0.1172   -0.2355
    2.7917    1.5699    1.7610   -1.2001   -1.2203    0.4843   -0.2355
    2.7831    1.5102   -1.9853   -1.2001   -1.2552    2.3574   -0.2999
    2.9796    1.6414   -1.9853   -1.2001   -1.2552    2.3574    0.0406
    3.1831    0.0245   -1.3205   -1.2001   -1.2552    4.4649   -1.2640
    3.7578   -1.8147   -1.3205   -1.2001   -1.2552    2.2996   -1.0283
    2.6207    0.1904   -1.3205   -1.2001   -1.2552    0.2414   -1.0283
    0.8529    2.0635    0.5526   -1.2001   -1.2552    0.2414   -1.1324
    0.7997    1.9545    0.1717   -1.2001    0.7739   -1.6317   -1.3122
    2.7123    1.9876    0.1717   -1.2001    0.7739   -1.6317   -1.3122
    4.4336    0.5910    0.7247   -1.2001    0.7739   -1.9315   -1.3122
    4.4336   -1.0892   -1.1485   -1.2001    0.7739   -0.2109   -1.3122
    2.5604    0.4111    0.7247   -1.2001   -1.1256    0.0364   -1.4139
    0.6873   -0.0905    0.7247   -1.3866    0.4515    3.8089   -1.4139
   -1.1859   -0.2109    2.0449   -1.7430    0.5347    7.3980   -1.6050
   -1.1859   -0.0133    6.0623   -1.9603   -0.0756    7.0831   -1.6050
   -1.1859   -1.0333    3.8884   -1.9837   -0.1820    6.9046   -1.3674
   -1.0340    2.8192    4.4219   -2.2000   -2.6398    3.5340   -1.3674
   -1.0734    3.7380       NaN   -2.3290   -2.6398   -0.1950   -1.3674
   -1.0734    2.4511       NaN   -2.5443   -2.6398   -1.9980   -1.3674
   -1.0734    4.2662       NaN   -2.6315   -2.6398   -0.9328   -1.3674
   -1.0820    1.1065       NaN   -2.6315   -2.6398   -1.3069   -1.3674
   -1.0820    0.0115       NaN   -2.4487   -2.6398   -1.3069    0.2486
   -1.0820    0.8063       NaN   -2.4487   -2.6398    0.5662    0.2486
   -1.2024   -1.2024       NaN   -2.4487   -2.6398   -1.1183    0.5057
   -1.3647   -1.3423       NaN   -2.4487   -2.6398   -0.6194    0.5057
   -1.5636   -1.5273       NaN   -2.6315   -2.6398   -0.6613   -1.3674
   -1.6442   -1.5495       NaN   -2.6315   -2.6398   -1.7251   -1.3674
   -1.5985   -1.5985       NaN   -2.6948   -2.6398    0.9846   -1.3674
   -1.6939   -1.5985       NaN   -2.3745   -2.6398    0.6854   -1.3674
   -1.4742   -1.6931       NaN   -2.6403   -2.6398    0.6854   -1.6245

  Columns 15 through 21

   -0.6373   -1.3451   -0.5312   -3.2263   -0.7211    3.1869   -1.4993
   -0.7075   -1.3740   -0.5312   -2.8277   -0.7211    5.1134   -1.4993
   -0.6922   -1.3325   -0.0186   -2.8277   -0.7211    5.3408   -1.3644
    1.1810   -1.3325   -1.5414   -2.8364   -0.7001    5.7222   -1.0449
    1.1810   -1.3325   -1.7802   -2.5353   -0.7001    4.2328   -1.1456
   -0.6922   -1.3325   -2.5250   -0.3335   -1.0870    2.3596   -1.1456
   -0.6922   -1.3325   -2.4591    0.1058   -1.3303    2.3343   -1.1456
   -2.2275   -1.3325   -0.7596    0.1058   -1.6440    0.4612   -1.1456
   -2.3290   -1.3325    1.3236    0.5086   -1.7497    0.2321   -1.1456
    1.4173   -1.5887    2.4816   -1.3645   -1.7246    0.2321   -1.1456
    1.4173   -1.6294    2.7081   -1.7673   -1.7246    2.3343   -1.1456
    3.4194   -1.6294    1.0078   -1.7673   -1.7246    2.2907   -1.1456
    3.5288   -1.5935   -1.1501   -1.7673   -1.8921    2.0033   -1.1456
    1.5816   -1.5935    0.1823   -1.7673   -1.6986    0.1406   -1.1456
    1.6556   -1.3938   -0.2140   -1.7673   -1.6986   -1.9603   -1.1456
   -0.2175   -0.9432   -0.0210   -2.2066   -1.6986   -1.8631   -1.1456
    1.6556   -0.5595    2.0009   -2.5353   -1.4287    0.0101   -1.3884
   -0.2175   -0.5595    0.1278   -2.8277   -1.1412    0.0101   -1.3884
   -0.2175   -0.1989    1.3832   -3.2345   -0.8494    0.0101   -1.6837
    1.6556   -0.1989    1.6800   -3.3912   -0.8494    0.0101   -2.0793
   -0.4043       NaN   -1.1166   -3.2602   -0.5004   -1.8631   -2.0793
   -0.5600       NaN   -1.3499   -3.1153    1.3727   -1.8631   -2.0162
   -0.5600       NaN   -2.3630   -2.9600    1.3566   -1.8631   -2.0162
   -2.5773       NaN   -0.4899   -2.9600    1.3566   -1.8631   -2.0162
   -2.4325       NaN   -0.7228   -3.1153    3.2297   -1.8631   -2.0793
   -2.1647       NaN   -1.2250   -3.2345    1.3566   -1.7435   -0.2061
   -1.8631       NaN   -1.2250   -2.5353    1.3566    0.0789    0.1895
   -1.7943       NaN   -3.0981   -1.9294    1.3566    1.8790    0.4847
    0.0765       NaN   -3.6566   -1.4881   -0.5004    3.6486    0.5088
   -0.0246       NaN   -3.6988   -1.1360   -0.5004    3.4215   -1.6909
   -0.0246       NaN   -2.6495   -0.7838   -0.6556    2.0011   -1.8291
   -0.0246       NaN   -1.8637   -0.5538   -0.6556    0.6218   -1.5441
   -0.0781       NaN   -1.1367   -0.6640    0.9341   -1.8105   -1.6219
   -0.2575       NaN    1.5003   -1.1943    0.4007   -1.4188   -1.7246
    3.1681       NaN    1.8131   -1.3269    2.1836   -0.9474   -1.9637
    2.9964       NaN    1.1520   -1.0202    2.1836   -0.6187   -1.9122
    4.6608       NaN    0.9902   -1.0340    0.4576   -0.8494   -1.8435
    4.3251       NaN       NaN   -1.1655    0.4576   -1.3986   -1.8499
    1.5182       NaN       NaN   -1.3436   -1.5187   -1.3303   -1.8499
    2.4735       NaN       NaN   -1.6400   -1.6379    1.3058   -1.4724
   -1.3674       NaN   -1.9938   -1.6400   -1.5384    2.9467   -1.4724
    0.2439       NaN       NaN    0.3236    0.0245    1.8480   -1.4724
    3.8071       NaN       NaN    0.2747   -0.2597    3.5287   -1.4724
    5.6803       NaN       NaN    0.2747   -0.2123    2.1029   -1.4724
    7.5534       NaN       NaN    0.1801    0.0392    0.1770   -1.4724
    7.6164       NaN       NaN   -1.6931   -1.7364   -0.8536   -1.4724
    3.8701       NaN       NaN   -1.6939   -1.9929   -2.8644   -1.0892
    2.0621       NaN       NaN   -1.5045   -1.9485   -2.8644   -1.2739
    0.1890       NaN       NaN   -0.9854   -1.9485   -2.8644   -1.2739
   -1.5052       NaN       NaN   -0.9027   -1.8399   -2.6398   -1.2739
    0.5084       NaN    1.2329   -1.0684   -1.7107   -2.8644   -1.2739
    0.5084       NaN       NaN   -1.2519   -1.3339   -2.8644   -1.6388
    0.3020       NaN       NaN    0.5280   -1.3339   -2.8644   -1.6388
    0.0624       NaN    1.4011    0.5821   -1.1441   -2.8644   -2.0045
   -1.8123       NaN       NaN    2.5720   -1.1441   -3.1674   -2.0045
   -1.6726       NaN       NaN    2.4138   -1.1441   -3.1674   -2.0654
   -1.6683       NaN       NaN    0.5406   -1.3339   -3.2263   -2.3369
   -1.6683       NaN       NaN    2.4138   -1.3339   -2.8277   -2.2361
    0.1596       NaN       NaN    0.5406   -1.4241   -0.9545   -2.1212
    2.0142       NaN       NaN    0.5406   -1.4241    0.9186   -1.9181
    2.4040       NaN       NaN    0.5406   -1.6478    0.9099   -2.0854
    4.5374       NaN   -2.1771   -1.3325   -1.7634    3.6706   -2.0854
    2.4911       NaN   -1.7092   -1.3325   -1.7634    1.8847   -2.0854
    0.3969       NaN   -1.1029   -1.3325   -1.8414   -0.0562   -2.1792
    0.3850       NaN   -0.7065   -1.3723   -1.8414    1.9789   -2.1792
    0.2217       NaN   -0.4843   -1.3723   -1.7634   -0.2152   -2.2060
    0.2217       NaN   -0.4843   -1.3723   -1.4241   -0.7499   -2.2060
   -0.0562       NaN   -0.8051   -1.3723   -1.5117   -0.7252   -2.0682
    1.9789       NaN   -0.8051   -1.3723   -1.8937   -0.6759   -1.7307
    0.3229       NaN   -0.8051   -1.4471   -2.3735   -0.0164   -1.7307
    0.3229       NaN   -0.8051   -1.5935   -2.5186   -0.0670   -1.4241
    4.0691       NaN   -0.8051   -1.5935   -2.3823   -0.1458   -1.4241
    2.1526       NaN   -0.8051   -1.5935   -2.6192   -0.2658   -1.4241
    4.0257       NaN   -0.8051   -1.5935   -2.6328    1.2220   -1.4241
    4.0257       NaN   -0.8051   -1.5935   -2.5366    1.5704   -1.4241

  Columns 22 through 28

   -1.2169   -1.2362    1.4774       NaN    1.4290   -1.2169   -1.6219
   -1.2169    0.6463    1.6192       NaN   -0.4442   -1.2058   -1.7246
   -1.6286    2.7148    0.1373       NaN   -2.3173   -1.4746   -1.9637
   -1.6286    2.7116    0.4964   -0.8939   -2.3173   -1.4746   -1.9122
   -1.6286    2.7116   -0.5127   -1.3205   -2.5186   -1.4746   -1.8435
   -1.6286    0.8384   -0.5127   -1.7014   -2.2009   -1.0964   -1.8499
   -2.2537   -1.0347       NaN   -2.6423   -1.3059   -1.2096   -1.8499
   -2.2537    0.8416       NaN   -0.6178   -1.4341   -2.2996   -1.4724
   -2.2537    2.5097       NaN    0.0052   -1.7452   -2.5357   -1.4724
   -2.2537    2.4069       NaN   -0.0519   -2.4349   -2.5773   -1.4724
   -2.2537    2.2246       NaN    0.3318   -2.5490   -2.5961   -1.4724
   -2.2537    2.2973       NaN   -1.4093   -2.4176   -2.4755   -1.4724
   -2.2537    0.4242       NaN   -1.7250   -0.5782   -2.4755   -1.4724
   -2.5104    0.2946       NaN   -0.3945   -0.2677   -2.3944   -1.4724
   -2.2537    0.2946       NaN   -0.4624    0.0001   -2.3944   -1.0892
   -2.2537   -1.8376       NaN    1.5291   -0.1575   -2.3944   -1.2739
   -2.2537   -1.8376       NaN    1.2897    1.8105   -2.1972   -1.2739
   -2.2537   -2.0468       NaN   -0.2597    1.8105   -2.1972   -1.2739
   -2.2537   -2.0468       NaN   -0.0067    1.8174   -2.1972   -1.2739
   -2.5104   -2.1086       NaN   -1.8957    1.7385   -2.1972   -1.6388
   -2.5104   -2.1086       NaN    0.0059   -1.8310   -2.1972   -1.6388
   -2.5104   -2.1086       NaN   -0.0781   -1.8977   -0.6024   -2.0045
   -2.5104   -0.2355       NaN   -0.0989   -1.8977   -0.5213   -2.0045
   -2.5104    1.8251       NaN   -0.2575   -1.8977   -0.2125   -2.0654
   -2.5104    2.1029       NaN   -2.1408   -2.0448    0.2815   -2.3369
   -2.5104    2.2795       NaN   -2.1160   -1.8218   -1.7043   -2.2361
   -2.5104    0.4292       NaN   -1.5355   -1.0938   -1.8977   -2.1212
   -2.5104   -2.1649       NaN   -1.1947   -1.2764   -1.9513   -1.9181
   -2.5104   -0.6741       NaN   -1.2025   -1.0624   -2.1306   -2.0854
   -2.5104    0.4739       NaN   -1.5346   -1.0734   -2.3186   -2.0854
   -2.2537    4.2202       NaN   -1.9581   -1.3338   -2.4179   -2.0854
   -2.2537    4.0511       NaN   -2.3005   -1.5484   -1.8886   -2.1792
   -2.3536    2.3906       NaN   -1.9581   -1.7321   -1.5937   -2.1792
   -0.4805    0.8637       NaN   -1.5848    0.1411   -1.7673   -2.2060
   -0.4264   -2.5860    1.4636   -1.0100    0.1411   -1.9294   -2.2060
   -0.5180   -2.3011   -0.3797   -1.3645    0.1004   -1.8616   -2.0682
   -0.6024   -2.4179    2.3074    0.2217    0.2428   -1.3349   -1.7307
   -2.3944   -2.1160    2.6751   -0.0562    0.2071   -1.1766   -1.7307
   -2.1517   -2.1408    2.5840    0.0115    0.1793   -1.4321   -1.4241
   -1.3866   -2.1408    4.0686   -0.0756    2.2418   -1.4321   -1.4241
   -1.2034   -2.0156    1.9552   -0.7667    2.5206   -1.7493   -1.4241
   -1.9358   -1.8643    2.2716   -0.9913    0.8646   -1.9211   -1.4241
   -2.1063   -1.5434    2.2716   -1.2943    0.9705   -1.8950   -1.4241
   -1.9581   -1.5346    2.2716   -0.9913   -1.1324   -1.8950   -1.4241
   -1.2226   -1.5346    2.2716   -2.8644    2.4340   -1.8950   -1.4241
   -1.0100   -1.2226    0.3402   -1.9488    2.3470   -1.8950   -1.3422
   -1.0100   -1.2226    0.3402   -1.3385    4.2454   -1.8950   -1.3422
   -1.2226    0.6505   -1.3806   -1.2552    4.2454   -1.8950   -1.5069
   -1.5346    2.7363   -1.1678   -1.0992    0.5406   -1.8950   -1.5069
   -1.5346    2.7363   -1.1005    2.7261    0.5406   -1.8950   -1.9436
   -1.8218    2.7363   -1.3240    2.7995    0.5406   -1.8950   -1.9436
   -2.0306    0.8631    0.5492    2.6729    0.5406   -1.8950   -1.9436
   -2.0306   -1.0100    0.5492    2.6642    0.5406   -1.8950   -1.9436
   -2.0306   -1.2226    0.5492   -1.0820    2.3740   -1.8950   -1.9436
   -2.0306    0.6505    0.7726    0.7476    0.5009   -1.8950   -1.9436
   -2.0306    0.6505   -1.1678    0.7476    0.5009   -1.8950   -1.9436
   -2.0306    0.2884   -1.2744    0.4515    0.5009   -1.8950   -1.9436
   -2.0306    0.2884   -1.7662    0.7476    0.2437   -1.8950   -1.9436
   -2.0306   -1.0938   -2.6434   -1.0583    0.2437   -1.8950   -1.9436
   -2.0306   -1.5848   -2.4325   -1.0820    0.2437   -1.8950   -1.9436
   -2.0808   -1.2226   -1.9603   -1.0734    2.1169   -0.0219   -1.9436
   -2.0808   -1.2226   -1.5916   -1.1859    0.2437   -0.0219   -1.7324
   -2.0808    0.7606   -2.0078   -1.3338    0.2437   -0.0219   -2.2477
   -2.0808    0.8456   -2.0156   -1.3338    0.2437   -0.0219   -2.2477
   -2.0808    0.6707    0.0088   -1.5484   -1.6294   -1.8950   -1.7324
   -2.0448    2.2028    0.0088    0.2331   -1.6294   -1.8950   -1.3422
   -2.0448    0.0001    0.3297    0.2289   -1.6294   -1.8950    0.4756
   -2.0448   -0.1425    0.3386    0.2428   -1.6294   -1.8950    0.3318
   -2.0448   -0.2677   -1.5848    0.1801   -1.5935   -1.8950    0.0929
   -2.0448   -2.3186    1.0839   -1.5045   -1.5935   -1.8950    0.1482
   -2.0808   -2.3186    2.4699   -1.0085   -1.5935   -1.8950   -1.7250
   -2.0808   -2.0573    4.5202   -0.9366   -1.5935   -1.8950   -1.7250
   -2.0808   -0.1842    6.4191   -1.2228   -1.5935   -1.8950   -1.2932
   -2.0808    3.7217    4.4336   -1.3122   -1.5935   -1.8950   -1.2932
   -2.0808    5.5949    2.4125   -1.3993   -1.5935   -1.8950    0.4978

  Columns 29 through 35

   -1.0231   -2.4179    6.2681    0.2321   -1.1321   -0.8721   -1.9581
   -1.0231   -2.4179    8.8342    2.3343   -1.5410   -1.0333   -1.5848
   -1.0231   -2.4179    5.4019    2.2907   -2.6245   -1.4897   -1.0100
   -1.0231   -2.1160    1.5563    2.0033   -3.4414   -1.4897   -1.3645
   -1.0231   -2.1160   -0.3168    0.1406   -3.2263   -1.4897    0.2217
   -1.0231   -2.1160   -2.3792   -1.9603   -2.5353   -1.3888   -0.0562
   -1.2362   -1.8643   -2.3792   -1.8631   -2.2102   -1.1545    0.0115
   -1.2362   -1.8643   -2.1900    0.0101   -1.7923   -0.9143   -0.0756
   -1.2362   -1.8643   -1.9837    0.0101    0.0809   -0.8811   -0.7667
   -1.2362   -1.8643   -1.9837    0.0101    0.0809   -0.9528   -0.9913
   -1.2269   -1.5355   -1.9867    0.0101   -0.0562   -1.1456   -1.2943
   -1.2269   -1.5355   -0.2175   -1.8631   -0.3371   -1.1456   -0.9913
   -1.2269   -1.5355   -0.2175   -1.8631   -2.2102   -1.1456   -2.8644
   -1.2366   -2.1160   -0.1136   -1.8631   -2.2102   -1.1456   -1.9488
   -1.2366   -2.1160    1.7596   -1.8631   -2.2102   -1.3884   -1.3385
   -1.2272   -2.4179   -0.1136   -1.8631   -2.2066    0.3229   -1.2552
   -1.2272   -2.5860   -0.0068   -1.7435   -2.2066   -0.1431   -1.0992
   -1.2272   -2.8317    0.0789    0.0789   -2.2066   -1.2725    2.7261
   -1.3608   -3.4414    0.0765    1.8790   -1.5503   -1.2943    2.7995
   -1.3608   -3.2724    0.0765    3.6486   -1.5503   -2.4541    2.6729
   -1.8326   -2.0793   -0.0246    3.4215   -1.5503   -2.3011    2.6642
   -2.1238   -2.0793   -0.0246    2.0011   -1.7673   -2.1160   -1.0820
   -2.6660   -1.6837   -1.8977    0.6218   -0.0562   -2.0044    0.7476
   -2.6660   -1.6837   -1.8977   -1.8105    5.7003   -1.8977    0.7476
   -2.6660   -1.6837   -0.0781   -1.4188    5.9834   -1.8977    0.4515
   -2.6660   -1.6837   -0.0781   -0.9474    5.9834   -1.8977    0.7476
   -2.6660   -1.6837   -0.0989   -0.6187    4.1102   -2.0078   -1.0583
   -2.6660   -1.7443    3.6486   -0.8494   -1.4763   -1.8731   -1.0820
   -2.6660   -1.7443    1.4741   -1.3986    0.3850   -1.5434   -1.0734
   -2.6660   -1.6837    0.9385   -1.3303    0.5329   -1.0276   -1.1859
   -2.6660   -1.6837    2.2282    1.3058    0.6707   -1.6514   -1.3338
   -2.1731   -1.1523    2.3470    2.9467   -0.1425   -1.2552   -1.3338
   -2.0468   -0.9650    3.6032    1.8480   -1.9513   -1.0820   -1.5484
   -1.6384   -0.8653    4.0042    3.5287   -2.1329   -1.3423    0.2331
   -1.6214   -1.0333    3.8948    2.1029   -0.6285   -1.5484    0.2289
   -2.5472   -1.3888   -0.2176    0.1770    1.3178   -1.5495    0.2428
   -3.2724   -1.8865   -0.1774   -0.8536    3.3033   -1.6931    0.1801
   -3.2345   -2.0841   -0.0210   -2.8644    3.7796   -1.4742   -1.5045
   -2.8826   -1.9122   -2.0992   -2.8644    1.9829   -0.9854   -1.0085
   -2.8826   -1.9122   -0.4899   -2.8644   -0.6194   -0.9155   -0.9366
   -2.8372   -1.9122   -1.3499   -2.6398   -1.9554   -1.2519   -1.2228
   -2.5984    0.1235    0.5232   -2.8644    0.8079   -1.3451   -1.3122
   -2.5984    0.3299    0.5232   -2.8644    3.3204   -1.3451   -1.3993
   -2.5984   -0.2261    0.5232   -2.8644    3.4073   -1.3740   -1.3740
   -0.5782   -1.3617    0.5232   -2.8644    3.4073   -1.3740   -1.3325
   -0.5782   -1.2640   -1.3499   -3.1674    1.5342   -1.3740   -1.3325
   -0.5782   -0.9366   -1.3499   -3.1674   -0.4259   -1.3740   -1.3325
   -0.3139   -0.9854   -1.4093   -3.2263   -0.4259   -1.3740   -1.3325
   -2.1871   -0.9572   -1.2250   -2.8277   -0.3390   -1.3740   -1.3325
   -2.1871   -0.8755   -0.6725   -0.9545   -0.3208   -1.3325   -1.3325
   -2.1306   -1.0684    0.0406    0.9186   -0.3375   -1.3325   -1.3325
   -2.1306   -1.3451   -1.8326    0.9099   -0.3375   -1.3325   -1.5887
   -2.0573   -1.3325   -2.5456    3.6706   -0.3200   -1.3325    0.2844
   -2.0044   -1.3723   -3.2349    1.8847   -0.3200   -1.3325    0.2844
   -2.0044   -1.3938   -1.8257   -0.0562    1.4202   -1.3325    1.8170
   -2.0044   -1.0504   -0.7764    1.9789    1.4265   -1.3325    3.7582
   -1.8977   -0.5595    1.8826   -0.2152    3.2325   -1.3325    1.8850
   -1.8977    1.6742    6.3347   -0.7499    2.9353   -1.3325    2.0907
   -1.8977    1.6742    8.2079   -0.7252    0.6756   -1.3325    0.5378
   -1.9513    1.6742    8.2079   -0.6759       NaN   -1.3325   -0.9432
   -1.9513    1.6742    8.2079   -0.0164       NaN   -1.3325    0.9300
   -1.9513   -0.1989    6.3347   -0.0670       NaN   -1.3325    0.9300
   -1.8977    1.7369    4.4616   -0.1458       NaN   -1.3325    0.5378
   -1.8977    1.7369    4.4616   -0.2658       NaN   -1.3740    0.5378
   -2.0044    1.7849    2.5884    1.2220       NaN   -1.3740   -1.6556
   -2.0044       NaN    0.7153    1.5704       NaN   -1.3740   -1.8613
   -2.0044       NaN   -1.1367    2.2738       NaN   -1.3740   -1.9293
   -2.0044       NaN    0.7364    0.9341       NaN   -1.3740   -1.9293
   -2.0044   -0.0540    0.7364   -0.6187       NaN   -1.3740   -1.9293
   -2.0044   -0.0453    0.7364   -1.0311       NaN   -1.3740   -1.8613
   -2.0044    1.8278    0.7364   -1.1752       NaN   -1.3740   -1.8613
   -2.0573       NaN    2.6096   -1.0900       NaN   -1.3740   -1.6599
   -2.0573       NaN    2.6096   -1.1268       NaN   -1.3740   -1.6599
   -2.1306       NaN    2.6096   -1.1268       NaN   -1.3740   -1.6995
   -2.1871       NaN    2.6096   -1.1120       NaN   -1.3740    0.1736

  Columns 36 through 42

    0.5910   -0.1435    0.2796   -3.3912   -0.5061   -1.5002   -1.6939
   -1.2739   -0.1435    0.2796   -3.4414    1.5946   -3.3734   -1.6939
   -1.2822   -0.1435    0.2796   -3.2263    0.4529   -1.5002    0.1793
    0.3675   -2.0167   -1.5935   -2.8277    0.6730    0.3729    0.1793
    0.1160   -2.0167   -1.5935   -2.8277    0.5395    0.3729    0.1801
   -0.3176   -2.0167   -1.5935   -2.8364   -1.3336    2.2461    0.1801
       NaN   -1.7949   -1.5935   -2.5353   -1.5052    0.3729   -1.6931
       NaN   -1.7949   -1.5935   -0.3335   -1.9654   -1.5002   -1.6939
       NaN   -2.2157   -1.5935    0.1058   -1.9654   -1.5002   -1.6650
       NaN   -2.2157   -1.5935    0.1058   -2.2608   -1.5002   -1.6650
       NaN   -2.2157   -1.5935    0.5086   -2.2608    2.2461   -1.6650
       NaN   -2.2157   -1.5935   -1.3645   -0.2398    2.2461   -1.6650
       NaN   -2.2157   -1.5935   -1.7673    0.0973    4.1192   -1.6650
       NaN   -2.2157   -1.5935   -1.7673    0.6730    2.3503   -1.6650
       NaN   -1.8312   -1.5935   -1.7673    0.4017   -1.3959   -1.6650
       NaN   -2.0770   -1.5935   -1.7673   -2.3005    0.5978   -1.6650
       NaN   -1.2952   -1.5935   -1.7673   -0.7892   -1.0226   -1.6650
       NaN   -1.2317   -1.5935   -2.2066   -1.4763   -0.5570   -1.6650
       NaN   -1.2317   -1.5935   -2.5353    0.7739    1.3161    0.2082
       NaN   -1.2317   -1.5935   -2.8277    0.6707    1.3161    0.2082
       NaN    0.6414   -1.5935   -3.2345    2.2411    1.3161    0.2082
       NaN    0.6414   -1.5935   -3.3912    1.8252    1.3161    0.2082
       NaN    0.6414   -1.5935   -3.2602    0.0608   -0.5570   -1.6650
       NaN    0.6414   -1.5935   -3.1153    0.2477   -2.2171   -1.6650
       NaN   -1.2317   -1.5935   -2.9600    0.3976    1.2976   -1.5043
       NaN   -1.2317   -1.6556   -2.9600    0.3976    1.4851    0.3688
       NaN   -1.2952   -2.0615   -3.1153    0.3976    3.7527    0.3687
       NaN   -1.2317   -1.0344   -3.2345    0.3976    3.7217    0.3688
       NaN   -1.2317   -1.3499   -2.5353   -1.4755   -0.1717    4.1151
   -1.0305   -2.1128   -0.7228   -1.9294   -1.4755    3.5888    2.5194
   -0.6761   -2.7856   -0.2982   -1.4881   -1.4755    3.7976    2.5100
   -0.4361   -2.7124   -0.2176   -1.1360   -1.3574    3.7976    4.5963
   -0.3370   -1.2807    0.2356   -0.7838    0.5938    4.4170    0.9366
   -0.3375   -1.1936    0.3229   -0.5538    3.6032    0.7606    0.9098
    0.8684   -1.3806    0.1895   -0.6640    9.3135   -1.6514    0.7407
       NaN   -1.2169    1.6670   -1.1943    8.5675    2.0405   -1.3122
    0.3435   -1.2096    4.8037   -1.3269    7.2015    4.1102   -1.3993
    1.2249   -1.9876    4.2202   -1.0202    5.3443    4.3643   -1.3740
   -0.4484   -2.3912    4.1390   -1.0340   -0.3242    4.5611   -1.3325
   -1.0652   -2.3912    0.3927   -1.1655   -0.0694    0.8148   -1.3325
   -1.9554   -2.1611   -1.2943   -1.3436   -0.0694   -1.1106   -1.3723
   -2.5345   -2.3912   -1.2943   -1.6400   -1.9426   -1.1106   -1.3723
   -2.4926   -2.3912    0.5788   -1.6400   -2.1329   -1.2046   -1.3723
   -2.4926   -1.9876    0.5788    0.3236   -2.1329   -1.2046   -1.6294
   -2.4926   -1.9876   -1.2943    0.2747   -2.1329   -1.2046   -1.6294
   -2.9915   -1.9876   -1.2943    0.2747   -1.9426   -1.2046   -1.6294
   -3.0527   -1.4052   -2.8364    0.1801   -1.9426   -1.2046   -1.6294
   -3.0527   -0.8680   -2.8364   -1.6931   -2.1973   -1.2046   -1.5935
   -3.0527   -0.8933   -3.1674   -1.6939   -2.4771   -1.2046   -1.5935
   -2.9915   -0.8933   -3.1674   -1.5045   -0.6935   -1.2046   -1.5935
   -2.9915   -0.8933   -1.3532   -0.9854   -0.5834   -1.2046   -1.5935
   -2.9915   -0.8933   -1.3532   -0.9027   -0.5834   -1.2046   -1.6294
   -2.9915   -1.2169    0.5118   -1.0684   -0.5834   -1.2046    0.2437
   -2.9915   -1.2169    0.5118   -1.2519   -2.4458    2.5417    0.2437
    0.7548   -1.2169   -0.9545    0.5280   -2.2612    4.4149    0.2437
    0.7548   -1.2169   -0.9545    0.5821   -2.2322    4.3010    0.2437
    0.7548   -1.6286   -2.5353    2.5720   -2.2322    6.3159   -1.6294
    0.7548   -1.6286   -2.2102    2.4138   -2.2000    2.4669   -1.6294
   -3.1801   -1.6286   -1.9294    0.5406   -2.2000    2.2394   -1.5935
   -3.1801   -1.6286   -1.9294    2.4138   -2.3426    3.3913   -1.5935
   -3.1801   -2.2537   -1.9294    0.5406   -2.8841    2.6514   -1.5935
   -1.3069   -2.2537    0.1058    0.5406   -2.4301    2.3470   -1.5935
   -1.3069   -2.2537    0.3229    0.5406   -0.3041    0.5779   -1.5935
   -1.3069   -2.2537    0.2794   -1.3325   -0.6454   -0.7982   -1.5935
   -0.9328   -2.2537   -0.0154   -1.3325    1.8526    0.4391   -1.5935
   -2.8059   -2.2537   -0.5448   -1.3325    2.6022    0.5672   -1.5935
   -2.8059   -2.2537    1.2949   -1.3723    0.1408   -0.4094   -1.5935
   -3.1801   -2.5104    1.7754   -1.3723    2.0139   -0.1314   -1.5935
   -3.1801   -2.2537    1.8037   -1.3723   -0.5890    0.1458   -1.5935
   -3.1801   -2.2537   -0.5834   -1.3723   -0.5890    0.2001   -1.5935
   -3.1801   -2.2537   -2.0493   -1.3723   -0.5890    2.0046   -1.5935
   -3.1801   -2.2537   -2.1380   -1.4471   -1.9436    2.5585   -1.5935
   -3.1801   -2.2537   -2.1248   -1.5935   -1.7324    0.5946   -1.5935
   -3.1801   -2.5104    0.5655   -1.5935   -1.7324    1.1110    0.2796
   -3.1801   -2.5104    0.5655   -1.5935   -2.2477    4.8573    0.2796

  Columns 43 through 49

   -1.1545   -1.8643       NaN   -2.5164   -1.0231    0.1193   -1.1321
   -1.4467   -1.8643       NaN   -2.5164   -1.0231   -1.7538   -1.0504
   -1.4467   -1.8643       NaN   -2.5164   -1.0231   -1.7538   -1.1733
   -1.4467   -1.8643       NaN   -2.5164   -1.0231   -1.7538   -1.4734
   -1.9315   -1.8643    1.4636   -2.5164   -1.0231   -1.7538   -1.8367
   -1.9315   -1.8643   -0.3797   -2.5164   -1.0231   -1.7538   -1.9788
   -2.0841   -1.8643    2.3074   -2.5164   -1.0231   -1.7538   -1.9788
   -2.0841   -1.8643    2.6751   -2.5164   -1.2362   -1.7538   -1.9788
   -2.0461   -1.8643    2.5840   -2.5164   -1.2362   -1.7538   -1.8435
whos wsurufrs
  Name           Size                 Bytes  Class     Attributes

  wsurufrs      75x81x76            3693600  double              

whos ufrwd
  Name           Size               Bytes  Class     Attributes

  ufrwd      32624x76            19835392  double              

wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
whos wsurufrs
  Name           Size            Bytes  Class     Attributes

  wsurufrs      75x81            48600  double              

imagesc(wsurufrs)
disp(matlabroot)
/usr/local/share/matlab/R2011b

wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));

wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
disp(matlabroot)
/usr/local/share/matlab/R2011b

unit

unit =

    29


rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad,unit);
{Index exceeds matrix dimensions.
} 
wsurdist<thresh_rad

ans =

     0
     0
     1
     0
     1
     1
     0
     0
     1
     1
     0
     0
     1
     0
     0
     0
     1
     0
     1
     1
     1
     0
     0
     0
     0
     0
     0
     1
     0
     1
     0
     0
     1
     0
     0
     0
     0
     0
     0
     1
     0
     0
     0
     0
     0
     1
     0
     0
     0
     1
     0
     0
     0
     0
     1
     0
     0
     0
     0
     1
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     0
     1
     1
     0

cufrs{5} = wsurufrs(:,wsurdist<thresh_rad,unit);
{Index exceeds matrix dimensions.
} 
size( wsurufrs)

ans =

    75    81

size(wwdisto)

ans =

   161     1

size(wsurpos)

ans =

    81     2

cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
{Error using cellfun
All of the input arguments must be of the same size and shape.
Previous inputs had size 5 in dimension 2. Input #3 has size 4.
} 
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad,unit);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
{Index exceeds matrix dimensions.
} 
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
{Error using cellfun
All of the input arguments must be of the same size and shape.
Previous inputs had size 5 in dimension 2. Input #3 has size 4.
} 
ntrans = 5;
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));

rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad,unit);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
{Index exceeds matrix dimensions.
} 
p1

p1 =

     5

p2

p2 =

     1

            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);

sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
disp(matlabroot)
/usr/local/share/matlab/R2011b


figure
unit=29;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([1,numel(tbins)])
unit = figure_controls(gcf,unit)
end
Enter index #: 51

unit =

    51

{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 

wsss = size(rposon,1);
wsur_rand_ind = randi([1,length(wsurpos)],wsss,niter);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end
{Error using randi
First input must be a positive scalar integer value IMAX, or two integer values
[IMIN IMAX] with IMIN less than or equal to IMAX.
} 
unit

unit =

     1

wsss = size(rposon,1);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsur_rand_ind = randi([1,length(wsurpos)],wsss,niter);
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end
{Error using randi
First input must be a positive scalar integer value IMAX, or two integer values
[IMIN IMAX] with IMIN less than or equal to IMAX.
} 
p
{Undefined function or variable 'p'.
} 
p1

p1 =

     5

p2

p2 =

     5

            wsur_rand_ind = randi([1,length(wsurpos)],wsss,niter);
iter = 1;
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsur_rand_ind = randi([1,length(wsursamp)],wsss,niter);
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));

cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end

wsss = size(rposon,1);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end
{Index exceeds matrix dimensions.
} 
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
p
{Undefined function or variable 'p'.
} 
p1

p1 =

     5

            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);

sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
ite
{Undefined function or variable 'ite'.
} 
iter

iter =

        1000

p1

p1 =

     5

p2

p2 =

     5

unit

unit =

     1

unit=2

unit =

     2

rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));

wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
p1

p1 =

     5

p2

p2 =

     5

unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([1,numel(tbins)])
unit = figure_controls(gcf,unit)
end
{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end
{Index exceeds matrix dimensions.
} 
unit

unit =

     1

iter

iter =

     1

p1

p1 =

     5

p2

p2 =

     1

            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
perm_stat(:,1,5,1,:)

ans(:,:,1,1,1) =

   -0.1287
   -0.7102
   -0.7380
   -0.5748
    0.4918
    1.0829
    0.6031
    0.2910
   -0.5550
   -0.8334
   -0.1473
   -0.3647
   -0.6112
   -0.1797
   -0.4720
    0.0953
    0.6206
    0.3063
    0.1844
   -0.2333
   -0.3650
   -0.2582
   -0.2891
   -0.3534
   -0.1378
   -0.1700
    0.1238
    0.5178
    0.3771
    0.3707
    0.0254
   -0.1067
   -0.1463
   -0.5456
    0.2713
   -0.2092
   -0.4047
   -0.4872
   -1.2397
   -0.8369
   -0.3035
   -0.1175
    0.3265
    0.3524
    0.7222
    0.4755
    0.3396
   -0.1776
   -0.3239
   -0.0990
    0.1959
    0.4241
    0.2611
    0.0812
   -0.2113
   -0.0015
   -0.3704
   -0.3131
   -0.6518
   -1.2415
   -0.7441
   -0.7019
   -0.5509
    0.2363
    0.4368
    0.2741
   -0.0328
   -0.3499
   -1.1349
   -0.5980
   -0.4647
   -0.6997
    0.8949
    0.7780
    0.9273


ans(:,:,1,1,2) =

   -1.0568
   -1.0902
   -1.0582
   -0.9017
   -0.4884
    0.0085
    0.1070
    0.3553
   -0.2462
   -0.4899
   -0.5552
   -0.7052
   -0.7362
   -0.6377
   -0.5870
   -0.9223
   -0.8739
   -0.6543
   -0.5953
   -0.8351
   -0.2769
   -0.7483
   -1.0144
   -0.3510
   -0.1354
    0.1976
    0.6965
    0.3353
   -0.3807
   -0.6098
   -0.2615
   -0.4969
   -0.2818
   -0.7148
   -1.0726
   -1.3637
   -1.4738
   -1.3184
   -1.4919
   -1.2080
   -1.1160
   -1.2739
   -0.6967
   -0.4867
   -0.5645
   -0.7780
   -0.9655
   -0.9868
   -1.1028
   -0.6343
    0.7623
    1.0391
    1.0556
    1.1949
    0.3283
    0.5222
    0.3030
   -0.0421
   -0.6876
   -1.2903
   -0.6146
   -0.7395
   -0.8762
   -0.6225
   -0.2456
    0.0274
    0.1148
    0.1550
   -0.6905
   -0.6498
   -0.7023
   -0.4166
   -0.0636
   -0.0969
    0.0494


ans(:,:,1,1,3) =

   -0.5079
   -0.5343
   -0.7340
   -0.5840
   -0.2874
    0.0029
   -0.0845
   -0.0146
   -0.4419
   -0.6914
   -0.6294
   -0.7516
   -0.7920
   -0.5801
   -0.4705
   -0.1198
   -0.0796
   -0.0547
   -0.1010
   -0.5837
   -0.6691
   -0.6261
   -0.3932
   -0.2767
   -0.1100
    0.1656
    0.3363
    0.4883
    0.2992
    0.4565
    0.7647
    0.6523
    0.5689
   -0.1048
   -0.7123
   -1.1075
   -1.0432
   -0.8400
   -1.0366
   -0.8112
   -0.9286
   -1.0825
   -0.5875
   -0.4205
    0.0755
    0.0383
    0.4918
    0.0420
   -0.3846
   -0.0528
   -0.1317
    0.0796
    0.1812
    0.0627
   -0.1045
    0.1841
    0.0579
   -0.1397
   -0.3119
   -0.7427
   -0.7080
   -0.5709
   -0.7509
   -0.3879
    0.1562
    0.2440
    0.1398
   -0.0743
   -0.5590
   -0.6064
   -0.1725
   -0.2059
   -0.1775
   -0.3261
   -0.2371


ans(:,:,1,1,4) =

   -0.7198
   -0.6787
   -0.7522
   -1.1916
   -0.8742
   -0.5358
   -0.6237
   -0.3472
   -0.8498
   -1.0699
   -1.2123
   -1.3538
   -1.3183
   -1.2568
   -1.3191
   -0.7452
   -0.5787
   -0.6650
   -0.3163
   -0.7602
   -0.7650
   -0.6455
   -0.9854
   -1.0060
   -1.0764
   -0.5948
   -0.4910
   -0.3036
   -0.3587
   -0.6929
   -0.2572
    0.1004
    0.1741
   -0.0845
   -0.4004
   -0.9422
   -0.8045
   -0.4720
   -0.6525
   -0.5815
   -0.6458
   -0.5507
   -0.1049
   -0.1607
   -0.4721
   -0.4452
   -0.5908
   -0.8024
   -0.9525
   -1.2455
   -0.6091
   -0.6943
   -0.7517
   -0.7144
   -1.2890
   -0.5792
   -0.7648
   -0.2368
   -0.2469
   -1.1768
   -1.2336
   -1.4187
   -1.0551
   -0.5727
    0.0049
    0.2486
    0.2437
    0.3482
   -0.1275
   -0.3895
   -0.5203
   -0.6993
   -0.3262
   -0.3933
   -0.9265


ans(:,:,1,1,5) =

   -0.1871
   -0.6267
   -0.8071
   -0.3447
   -0.0711
    0.6386
    0.4380
   -0.0309
   -0.2415
   -0.6033
   -0.3382
    0.1559
   -0.1335
   -0.0449
   -0.0389
    0.0499
    0.0323
   -0.1141
   -0.2681
   -0.7913
   -0.7398
   -0.7516
   -0.7112
   -0.7778
   -0.3518
    0.1640
    0.6839
    1.0105
    0.5897
    0.3332
    0.2738
   -0.1738
   -0.1519
   -0.4234
   -0.6001
   -0.3862
   -0.7425
   -0.8007
   -0.9427
   -0.9868
   -0.8872
   -0.6452
   -0.2718
   -0.1373
   -0.2048
   -0.7126
   -0.8081
   -1.2274
   -1.0828
   -0.6737
    0.1871
    0.4861
    0.6330
    1.0248
    0.6132
    0.4672
    0.0468
   -0.4346
   -0.7791
   -0.9363
   -0.2649
   -0.2709
   -0.3750
    0.2265
    0.3096
    0.5186
    0.2629
   -0.3846
   -0.6561
   -0.3724
   -0.0719
    0.0630
    0.1904
   -0.0818
    0.0161


ans(:,:,1,1,6) =

    0.1784
   -0.0828
   -0.4021
   -0.2783
   -0.2234
    0.6014
    0.3882
    0.6104
    0.2853
   -0.3194
   -0.4106
   -0.6503
   -0.7703
   -0.1028
   -0.0430
    0.6751
    1.1923
    0.3217
    0.8626
   -0.0491
   -0.6213
   -0.4854
   -0.6683
   -0.1388
    0.2531
    0.6655
    0.6569
    0.4915
    0.3391
    0.7979
    0.7050
    0.8543
    0.3934
   -0.5120
   -0.7289
   -1.3480
   -1.0961
   -0.7875
   -0.6186
   -0.4746
   -0.6365
   -0.8240
   -0.4267
   -0.1499
   -0.4835
   -0.4768
   -0.3633
   -0.9792
   -0.5195
   -0.6885
   -0.6067
   -0.7400
   -0.9761
   -0.7216
   -0.8205
    0.1683
    0.5659
    0.9093
    0.8928
   -0.2972
    0.1507
   -0.2079
   -0.2174
    0.3237
   -0.0872
    0.2730
   -0.0600
    0.0651
   -0.2920
   -0.4776
   -0.4287
   -0.9219
   -0.7885
   -0.6915
   -0.6255


ans(:,:,1,1,7) =

   -0.4922
   -0.6070
   -0.8085
   -0.8304
   -0.5612
    0.1790
    0.0722
   -0.0652
   -0.2496
   -0.8283
   -0.9225
   -0.7148
   -0.6567
   -0.3212
   -0.0535
    0.5916
    0.6741
    0.2202
    0.4445
   -0.0900
   -0.4481
   -0.3681
   -0.5058
   -0.7546
   -0.5298
   -0.0759
   -0.0698
    0.0877
    0.0586
    0.1722
    0.2568
    0.6179
    0.5478
    0.0835
   -0.1987
   -0.4712
   -0.7027
   -0.7488
   -0.8756
   -0.7428
   -0.7610
   -0.4958
   -0.1131
   -0.1897
   -0.2779
   -0.6247
   -0.3527
   -0.7195
   -0.6748
   -0.6849
   -0.6611
   -0.8253
   -0.9561
   -0.7329
   -0.8714
   -0.2661
   -0.1461
   -0.1598
   -0.2391
   -0.7971
   -0.6765
   -0.4338
   -0.3795
   -0.0675
   -0.1310
   -0.1034
   -0.2626
   -0.3808
   -0.4213
   -0.4907
   -0.0403
   -0.1820
   -0.2420
   -0.3398
   -0.6631


ans(:,:,1,1,8) =

   -0.6968
   -0.6479
   -0.4730
   -0.5573
   -0.1830
    0.1364
   -0.0173
   -0.1198
   -0.4606
   -0.6513
   -0.5575
   -0.4470
   -0.6767
   -0.7551
   -0.9339
   -0.5436
   -0.3516
   -0.3407
   -0.4015
   -0.6376
   -0.2495
   -0.1472
   -0.2925
   -0.6679
   -0.9323
   -0.4085
    0.1206
    0.2582
    0.2948
   -0.2112
    0.0779
   -0.1421
   -0.1762
   -0.3985
   -0.4659
   -0.5358
   -0.4809
   -0.3684
   -0.6915
   -0.3967
   -0.1108
    0.3785
    0.4748
    0.3017
   -0.3198
   -0.5328
   -0.5446
   -0.5684
   -0.4352
   -0.3754
    0.1743
    0.3225
    0.2248
    0.1574
   -0.3175
    0.0225
   -0.3901
   -0.2862
   -0.3298
   -1.0359
   -0.6061
   -0.8557
   -0.6727
   -0.1239
    0.1469
   -0.0010
   -0.1196
   -0.0521
   -0.7279
   -0.4717
   -0.4704
   -0.3490
    0.3463
    0.1909
    0.0149


ans(:,:,1,1,9) =

   -0.1490
   -0.3085
   -0.1721
    0.6285
    1.0349
    1.4727
    0.9492
    0.4482
    0.0614
   -0.3318
   -0.0335
   -0.0287
   -0.2715
    0.2178
    0.4311
    1.1398
    1.1506
    0.6929
    0.2689
   -0.7260
   -1.2135
   -0.7836
   -0.4322
   -0.4049
   -0.0669
   -0.1658
   -0.2165
    0.3116
    0.1828
    0.7120
    1.0706
    0.9749
    1.0461
    0.4871
    0.1290
   -0.3220
   -0.4860
   -0.4216
   -0.4019
   -0.3836
   -0.2316
   -0.0900
   -0.1429
    0.2235
    0.2709
    0.0771
   -0.0112
   -0.4565
   -0.1162
   -0.2756
    0.0630
   -0.0548
   -0.8177
   -0.7663
   -0.9770
   -0.4981
   -0.5304
   -0.2134
    0.0195
   -0.1801
    0.2592
   -0.0082
   -0.1141
    0.4725
    0.3277
    0.5799
    0.5333
   -0.1014
    0.1400
   -0.1495
    0.0383
    0.2073
    0.3492
    0.5695
    0.1458


ans(:,:,1,1,10) =

   -0.7806
   -0.6447
   -0.6479
   -0.5616
   -0.5731
   -0.4536
   -0.5929
   -0.2074
   -0.4064
   -0.6718
   -0.6853
   -0.9936
   -1.0274
   -0.6755
   -0.8140
   -0.8513
   -0.4723
   -0.7642
   -0.6523
   -0.7282
   -0.4815
   -0.2894
   -0.4379
   -0.6514
   -0.6250
   -0.4228
    0.0104
    0.1465
    0.0710
    0.1066
    0.0592
    0.0758
    0.1308
   -0.5136
   -0.8833
   -1.0151
   -0.8252
   -0.6317
   -0.8097
   -0.8163
   -1.0643
   -0.9808
   -0.3969
   -0.1971
   -0.3410
   -0.1256
    0.1933
   -0.2164
   -0.2838
   -0.1817
   -0.2462
   -0.1383
    0.0477
    0.1026
   -0.1355
    0.3692
    0.0934
   -0.0889
   -0.4684
   -1.0618
   -0.5510
   -0.6498
   -0.6613
   -0.3715
   -0.5043
   -0.1866
   -0.3150
   -0.2337
   -0.8457
   -0.4542
   -0.6700
   -0.7124
   -0.2131
   -0.5113
   -0.2124


ans(:,:,1,1,11) =

    0.0419
   -0.6061
   -0.7594
   -0.2305
    0.1421
    0.4218
    0.0833
   -0.3702
   -0.8503
   -0.9199
   -0.8710
   -0.2425
   -0.0587
    0.4941
    0.5801
    0.4449
    0.0888
   -0.4021
   -0.6090
   -0.8865
   -0.9170
   -0.4952
    0.1586
    0.0045
    0.4782
    0.1689
    0.1550
    0.4724
    0.3275
    0.6571
    0.4433
    0.6734
    0.7999
    0.4285
    0.0572
   -0.3458
   -0.7462
   -0.5218
   -0.5220
   -0.6489
   -0.5133
   -0.6202
   -0.2700
    0.0725
    0.0925
   -0.2414
    0.1092
   -0.3097
    0.2477
    0.3267
    0.3036
    0.3029
   -0.4036
   -0.4034
   -0.6161
   -0.4547
   -0.6300
   -0.4701
   -0.7036
   -0.7134
   -0.1902
    0.1292
    0.4224
    0.5066
    0.1082
    0.6325
    0.4301
    0.3090
    0.2258
   -0.2141
   -0.1300
   -0.1391
    0.0171
   -0.0260
   -0.2348


ans(:,:,1,1,12) =

   -0.2447
   -0.6189
   -1.1737
   -0.7392
   -0.5128
   -0.0093
    0.0339
   -0.0133
   -0.4075
   -0.6680
   -0.8425
   -1.4563
   -1.4538
   -0.7186
   -0.4565
    0.2623
    0.7040
    0.2339
    0.9670
    0.5028
    0.2083
    0.0165
   -0.3321
   -0.0724
    0.3410
    0.4540
    0.2836
    0.5100
    0.3401
    1.4781
    1.2137
    0.9991
    0.6525
   -0.7410
   -0.9738
   -1.6050
   -1.5149
   -1.3391
   -1.2460
   -1.2064
   -1.2071
   -1.3784
   -0.9740
   -0.9753
   -1.0773
   -0.9774
   -0.3875
   -0.6283
   -0.6026
   -0.2913
   -0.7641
   -0.8130
   -0.5657
   -0.5827
   -0.3104
    0.2406
    0.7336
    1.0218
    0.7339
   -0.1379
    0.0966
   -0.2806
   -0.3275
   -0.5303
   -0.9665
   -0.7854
   -1.1138
   -0.9538
   -1.2776
   -1.0954
   -0.9892
   -1.0300
   -0.5819
   -1.3217
   -1.2216


ans(:,:,1,1,13) =

   -1.1335
   -1.1044
   -1.3625
   -1.3181
   -0.9413
   -0.6289
   -0.7859
   -0.5118
   -0.8289
   -1.1076
   -1.0388
   -1.4133
   -1.4783
   -1.1766
   -0.9389
   -0.6394
   -0.3442
   -0.6098
   -0.5940
   -0.9753
   -1.0658
   -0.9276
   -0.9285
   -0.9456
   -0.4354
   -0.2446
   -0.6064
   -0.1317
   -0.2931
   -0.2138
    0.0834
   -0.1016
   -0.0278
   -0.4816
   -0.3136
   -0.5452
   -0.3711
   -0.5041
   -0.7419
   -0.6051
   -0.9700
   -0.5811
   -0.5534
   -0.3368
   -0.3761
   -0.1988
   -0.2022
   -0.6555
   -0.8548
   -0.8761
   -0.7465
   -0.6570
   -0.7694
   -0.5849
   -0.6411
   -0.1831
   -0.0543
    0.0934
   -0.2747
   -0.9900
   -1.0879
   -1.3278
   -1.1397
   -0.7250
   -0.3844
   -0.3416
   -0.5368
   -0.8598
   -0.8940
   -0.7241
   -0.4939
   -0.5802
   -0.3740
   -0.2985
   -0.4689


ans(:,:,1,1,14) =

   -0.0272
   -0.2634
   -0.3490
    0.1740
    0.4382
    0.8080
    0.4662
    0.1573
   -0.1828
   -0.5263
   -0.0911
   -0.3903
   -0.5223
   -0.0756
   -0.0342
    0.7267
    1.0361
    0.7175
    0.6354
    0.0054
   -0.3717
   -0.2547
   -0.3971
   -0.5430
   -0.5293
   -0.1156
    0.1369
    0.6219
    0.6677
    0.8556
    0.9004
    0.6303
    0.5542
    0.0420
    0.1334
   -0.1323
   -0.2941
   -0.3024
   -0.6325
   -0.3829
   -0.4217
   -0.3898
    0.1261
   -0.1436
    0.2625
    0.0949
    0.1058
   -0.1261
   -0.2730
   -0.1685
   -0.5011
   -0.4482
   -0.4662
   -0.2249
    0.1731
    0.4411
    0.2673
    0.2844
    0.1504
   -0.4242
   -0.0252
   -0.3939
   -0.8567
   -0.0966
    0.2015
    0.2223
    0.0555
   -0.4815
   -1.0027
   -0.8084
   -0.5583
   -0.4329
    0.3903
    0.2707
    0.4722


ans(:,:,1,1,15) =

   -0.1696
    0.0192
   -0.7228
   -0.4589
    0.4294
    0.3198
    0.2060
    0.9631
   -0.0988
   -0.2890
   -0.2497
   -0.9930
   -1.1690
   -0.4503
   -0.1637
    0.0032
    0.5840
    0.0728
    0.2626
   -0.0750
   -0.3291
   -0.3927
   -0.2834
   -0.0432
    0.1837
    0.6446
    0.4530
    0.9794
    0.6733
    0.5331
    0.8832
    0.3255
    0.2896
   -0.1619
   -0.4605
   -0.8382
   -0.7031
   -0.4398
   -0.5920
   -0.5796
   -0.7597
   -0.6241
   -0.4999
   -0.5395
   -0.3169
   -0.0335
    0.3341
    0.2722
   -0.2667
   -0.5106
   -0.5280
   -0.4815
   -0.1124
    0.1213
    0.3707
    0.8608
    0.9371
    0.6795
    0.2124
   -0.6025
   -0.5566
   -0.7761
   -0.5887
   -0.5498
    0.1693
    0.1164
   -0.0260
    0.0327
   -0.5650
   -0.3009
   -0.2654
    0.2407
    0.1018
   -0.1820
   -0.2149


ans(:,:,1,1,16) =

   -0.3983
   -0.5588
    0.1269
    0.7084
    1.0929
    1.5418
    0.7442
    0.2105
   -0.3504
   -0.5744
   -0.4191
   -0.2646
   -0.4290
   -0.1937
   -0.1996
    0.0576
   -0.0841
   -0.3164
   -0.4926
   -0.9552
   -0.6454
   -0.4455
   -0.1983
   -0.0687
   -0.0306
    0.3065
    0.7604
    1.0047
    0.8213
    0.5722
    0.5415
    0.2241
    0.2488
   -0.0862
   -0.3811
   -0.8520
   -0.9983
   -0.7616
   -0.6095
   -0.5163
   -0.2430
   -0.1533
   -0.1642
    0.1695
    0.1427
   -0.2114
    0.0900
   -0.2124
   -0.1955
    0.1796
    0.3117
    0.4064
    0.2609
    0.1944
   -0.2255
   -0.1144
   -0.4761
   -0.6090
   -0.5497
   -0.4541
   -0.0541
   -0.1635
   -0.1830
    0.0447
    0.0659
    0.4647
    0.3410
    0.0266
   -0.3501
   -0.6367
   -0.4311
   -0.3125
   -0.0999
   -0.2684
   -0.3633


ans(:,:,1,1,17) =

   -0.8170
   -0.4472
   -0.5032
   -0.4965
    0.3420
    0.1750
   -0.1943
    0.6564
   -0.1981
   -0.3363
   -0.3309
   -1.1624
   -1.2182
   -0.7047
   -0.1203
   -0.2315
    0.1931
   -0.3392
   -0.9564
   -0.9706
   -1.1707
   -0.9294
   -0.4295
   -0.0680
    0.1602
   -0.2813
   -0.3198
   -0.1656
   -0.1875
    0.3841
    0.4907
    0.4285
    0.7110
   -0.0023
   -0.0100
   -0.4212
   -0.4354
   -0.2122
   -0.6995
   -0.3100
   -0.1538
    0.0654
    0.6741
    0.7517
    0.9519
    1.0976
    1.3777
    1.1498
    0.6354
   -0.1705
   -0.3772
   -0.6200
   -0.7236
   -0.8807
   -0.8672
    0.1493
    0.0416
    0.1027
   -0.4112
   -1.2100
   -0.8380
   -0.9819
   -1.0567
   -0.6015
   -0.5253
   -0.3160
   -0.0825
   -0.1747
   -0.6443
   -0.1890
   -0.2828
    0.1150
    0.6791
    0.6333
    0.6048


ans(:,:,1,1,18) =

   -0.3725
   -0.7983
   -0.9002
   -0.4569
   -0.2558
   -0.1196
   -0.2173
   -0.6097
   -0.9566
   -0.9087
   -1.1184
   -0.4958
   -0.5393
   -0.3771
   -0.4119
   -0.6240
   -0.7703
   -0.7533
   -0.6924
   -1.1491
   -0.9495
   -0.9057
   -0.7345
   -0.6404
   -0.0032
    0.0930
    0.2108
    0.4704
    0.1057
    0.1288
    0.4436
    0.2785
    0.5981
    0.1818
   -0.4933
   -0.6318
   -1.1632
   -1.1072
   -1.1823
   -1.3713
   -1.2677
   -1.2013
   -1.0819
   -0.8526
   -1.0233
   -1.1975
   -0.6257
   -0.7811
   -0.2748
   -0.0277
    0.3522
    0.5063
    0.0392
    0.0771
   -0.3460
   -0.3714
   -0.5488
   -0.6456
   -0.9133
   -1.1342
   -0.6495
   -0.2666
    0.3275
    0.2469
    0.2483
    0.4472
    0.2750
    0.1616
   -0.0748
   -0.2269
   -0.3203
   -0.0573
   -0.3327
   -0.3676
   -0.6045


ans(:,:,1,1,19) =

   -0.6739
   -0.9640
   -0.9825
   -0.7511
   -0.6529
    0.1182
   -0.0352
   -0.1256
   -0.2844
   -0.9928
   -1.0867
   -1.2383
   -1.3556
   -0.9330
   -0.7109
   -0.5164
   -0.1634
   -0.2994
   -0.2716
   -0.3862
   -0.4216
   -0.4885
   -0.4353
   -0.7955
   -0.4504
    0.3526
    0.3725
    0.6887
    0.4486
    0.1803
   -0.0364
   -0.0615
   -0.2748
   -0.7804
   -0.3276
   -0.5352
   -0.4194
   -0.5903
   -0.8419
   -0.4863
   -0.4573
   -0.0412
    0.0381
   -0.0871
   -0.2830
   -0.4635
    0.0174
   -0.4085
   -0.5502
   -0.6512
   -0.4461
   -0.3996
   -0.0631
    0.0649
   -0.2376
    0.1437
    0.0020
   -0.1313
   -0.5570
   -1.0591
   -0.6818
   -0.7078
   -0.5316
   -0.1901
   -0.5045
   -0.4499
   -0.5717
   -0.5175
   -0.7282
   -0.1388
    0.1993
    0.0278
    0.7168
    0.0982
   -0.1955


ans(:,:,1,1,20) =

   -0.0433
   -0.3338
   -0.5744
   -0.2471
   -0.3165
    0.0733
   -0.3375
   -0.3535
   -0.6687
   -1.0588
   -1.0610
   -1.3667
   -1.3661
   -0.5295
   -0.3274
    0.4264
    0.7191
   -0.0385
    0.7339
   -0.0778
   -0.4592
   -0.3951
   -0.8220
   -0.2646
    0.2645
    0.5493
    0.2851
    0.3231
    0.3060
    0.8162
    0.8309
    1.0311
    0.5729
   -0.1962
   -0.0794
   -0.8671
   -0.7560
   -0.6103
   -0.8528
   -0.9028
   -1.1953
   -1.5205
   -0.9309
   -0.8763
   -0.9242
   -0.7166
   -0.7406
   -1.1280
   -0.5298
   -0.5071
   -0.6284
   -0.8306
   -1.1829
   -1.0073
   -0.8645
   -0.1295
    0.2442
    0.6785
    0.7041
   -0.3477
   -0.5263
   -1.0145
   -0.6635
   -0.2189
    0.2803
    0.6833
    0.1522
   -0.1570
   -0.6750
   -0.9434
   -1.0056
   -1.1385
   -0.6723
   -0.7662
   -0.7863


ans(:,:,1,1,21) =

   -0.8972
   -1.1725
   -1.1481
   -0.6073
   -0.1426
    0.3208
    0.2309
   -0.0441
   -0.6181
   -0.8613
   -0.9667
   -1.0901
   -1.0539
   -0.7800
   -0.4230
   -0.3008
   -0.3460
   -0.1686
   -0.1348
   -0.3784
   -0.1269
   -0.5167
   -0.6230
   -0.1950
    0.1075
    0.5439
    0.5638
    0.5502
    0.1598
    0.2138
    0.6658
    0.3434
    0.3556
   -0.1513
   -0.4093
   -0.8585
   -0.9788
   -0.8366
   -1.0499
   -0.8289
   -0.8284
   -0.9523
   -0.5470
   -0.6081
   -0.5837
   -0.7411
   -0.6298
   -0.6447
   -0.8400
   -0.4057
   -0.0474
    0.1453
    0.2558
    0.4831
    0.4691
    0.5665
    0.4920
    0.3418
   -0.1529
   -0.4667
   -0.3032
   -0.5910
   -0.6751
   -0.6786
   -0.2946
    0.0659
    0.0147
   -0.1128
   -0.5791
   -0.8126
   -0.6590
   -0.4756
   -0.2427
   -0.6997
   -0.6979


ans(:,:,1,1,22) =

   -0.5716
   -0.5513
   -0.2520
   -0.2481
   -0.2180
   -0.1487
   -0.7132
   -0.5549
   -0.8528
   -0.9257
   -0.8628
   -1.1155
   -1.2338
   -1.2821
   -1.5295
   -1.3635
   -1.0925
   -0.8003
   -0.4757
   -0.2582
    0.7541
    0.8778
    0.2155
   -0.4632
   -0.6200
   -0.1035
    0.5521
    1.4364
    0.9891
    0.5052
    0.0884
   -0.4396
   -0.0204
   -0.4587
    0.1687
   -0.1726
   -0.3852
   -0.2522
   -0.6459
   -0.7011
   -0.7689
   -0.5826
   -0.3722
   -0.5487
   -1.1644
   -1.0197
   -0.7725
   -0.6800
   -0.4556
   -0.0948
    0.6374
    1.2817
    1.4724
    1.2028
    0.6340
    0.3633
    0.0387
   -0.0584
   -0.4456
   -1.0870
   -0.1271
   -0.0873
    0.1637
    0.3216
    0.0628
    0.1842
   -0.1727
   -0.0074
   -0.6121
   -0.4955
   -0.6444
   -0.3886
    0.6518
    0.1584
    0.1081


ans(:,:,1,1,23) =

   -0.6512
   -0.4406
    0.1947
    0.6247
    1.3625
    1.5446
    0.3407
    0.8418
    0.0961
   -0.3459
   -0.2603
   -0.9643
   -1.0524
   -0.3863
    0.0778
    0.2326
    0.4907
   -0.0393
   -0.6087
   -1.1194
   -1.3467
   -0.9427
   -0.3036
    0.2630
    1.0616
    0.6598
    0.4657
    1.0114
    0.9968
    1.1320
    1.4069
    1.0654
    1.2978
    0.8460
    0.6569
   -0.0149
   -0.6129
   -0.4630
   -0.5450
   -0.2093
   -0.2569
   -0.4029
   -0.4196
   -0.0268
    1.0258
    1.3610
    1.7462
    0.8708
    0.3754
    0.0188
   -0.0464
   -0.0464
   -0.4228
   -0.5635
   -0.5887
    0.0843
    0.0370
   -0.1550
   -0.5386
   -0.7445
   -0.8058
   -0.5261
   -0.2075
    0.0660
    0.5874
    0.9341
    0.7071
    0.1646
   -0.0273
   -0.0371
    0.2300
    0.4192
    0.5311
    0.4292
    0.4087


ans(:,:,1,1,24) =

   -1.0274
   -0.8505
   -0.8761
   -0.8716
   -0.5122
   -0.1024
   -0.1522
    0.4170
   -0.0915
   -0.5642
   -0.7514
   -1.2436
   -1.1379
   -0.6929
   -0.6391
   -0.4367
   -0.1877
   -0.4066
   -0.3453
   -0.4560
   -0.2689
   -0.1030
    0.0236
   -0.2593
   -0.3387
   -0.0608
    0.0241
    0.5059
    0.1019
    0.2107
    0.0446
   -0.0688
   -0.0688
   -0.7050
   -0.8213
   -1.2914
   -0.9214
   -0.7534
   -0.6121
   -0.4400
   -0.3902
   -0.3676
   -0.3552
   -0.2330
   -0.1352
   -0.0003
    0.4817
    0.2810
   -0.1766
   -0.2587
    0.0040
    0.1599
    0.3133
    0.1451
   -0.3534
    0.0028
   -0.0969
   -0.1122
   -0.3810
   -0.9871
   -0.5761
   -0.4869
   -0.4645
   -0.2706
   -0.3196
   -0.2289
   -0.3020
   -0.2026
   -0.8130
   -0.6070
   -0.2830
   -0.1886
    0.1405
   -0.0990
   -0.3246


ans(:,:,1,1,25) =

   -0.4643
   -0.6239
   -0.4555
   -0.6247
   -0.7891
   -0.6881
   -1.2628
   -1.3755
   -1.3836
   -1.0683
   -0.9713
   -0.7946
   -1.0434
   -1.5041
   -1.2940
   -1.1986
   -1.2145
   -1.0650
   -1.2089
   -1.4658
   -1.0284
   -1.0595
   -1.1435
   -1.2275
   -0.8795
   -0.4617
   -0.1806
    0.3044
    0.0141
   -0.1348
   -0.3949
   -0.8933
   -0.3775
   -0.6374
   -0.1527
   -0.0223
   -0.4049
   -0.5724
   -0.7750
   -0.6368
   -1.0282
   -0.5041
   -0.1853
   -0.2706
   -0.7427
   -1.2545
   -1.1443
   -1.2859
   -1.1528
   -0.7109
   -0.5914
   -0.3485
   -0.1478
   -0.0886
   -0.2208
   -0.3505
   -0.5492
   -0.6813
   -0.9429
   -1.2002
   -0.5921
   -0.8986
   -1.1972
   -0.5394
   -0.7153
   -0.6161
   -0.6355
   -1.1158
   -1.3401
   -0.9986
   -0.9093
   -0.7831
   -0.3126
   -0.4402
   -0.3366


ans(:,:,1,1,26) =

   -0.9287
   -1.0024
   -1.3073
   -1.0736
   -0.6166
   -0.0895
    0.0657
    0.1603
   -0.4118
   -0.8246
   -0.8029
   -0.8387
   -0.8766
   -0.4266
   -0.6189
   -0.5799
   -0.2672
   -0.5881
   -0.4119
   -0.5845
   -0.4664
   -0.4990
   -0.5603
   -0.4477
   -0.3517
   -0.0568
    0.2085
    0.1737
   -0.0440
   -0.0873
    0.0642
   -0.1242
   -0.1971
   -0.7576
   -0.9837
   -1.2593
   -1.3182
   -1.2037
   -1.4978
   -1.3287
   -1.0682
   -1.0417
   -0.7349
   -0.4030
   -0.4016
   -0.4163
   -0.4668
   -0.9242
   -0.9549
   -0.8128
    0.0209
    0.2023
    0.3154
    0.4636
    0.0199
    0.3287
    0.0308
   -0.1277
   -0.5182
   -0.9855
   -0.7719
   -0.9407
   -0.7703
   -0.7496
   -0.4819
   -0.2301
   -0.5050
   -0.2986
   -0.9413
   -0.6195
   -0.6595
   -0.7670
   -0.3379
   -0.6117
   -0.4231


ans(:,:,1,1,27) =

   -0.7455
   -0.5846
   -0.5409
   -0.4240
   -0.1108
   -0.0014
   -0.4235
   -0.1459
   -0.6076
   -0.8191
   -0.8486
   -1.2067
   -1.2770
   -0.8928
   -0.6023
   -0.3285
   -0.1334
   -0.5040
   -0.3323
   -0.3574
    0.0197
    0.3026
    0.1244
   -0.1292
    0.0320
    0.0265
    0.1585
    0.6379
    0.2407
    0.2445
    0.0471
    0.0551
   -0.0123
   -0.3612
    0.1734
   -0.4262
   -0.2146
   -0.2439
   -0.7969
   -0.6140
   -0.5246
   -0.6658
   -0.4038
   -0.4585
   -0.2906
    0.0121
    0.2711
    0.1755
    0.3463
    0.1791
    0.6726
    0.9481
    0.4864
    0.1453
   -0.2331
   -0.0416
   -0.1095
   -0.0779
   -0.3922
   -0.9518
   -0.6109
   -0.4641
   -0.0748
    0.2486
    0.2830
    0.3208
   -0.1572
   -0.2982
   -0.5969
   -0.5304
   -0.2025
   -0.3218
    0.4686
    0.3512
    0.1829


ans(:,:,1,1,28) =

   -0.5876
   -0.6777
   -1.3417
   -1.2436
   -0.4637
   -0.1040
   -0.0343
    0.2950
   -0.6075
   -1.0365
   -0.8157
   -1.1681
   -1.1986
   -0.5934
   -0.7440
   -0.5889
   -0.1591
   -0.5359
   -0.2484
   -0.5847
   -0.7118
   -0.6355
   -0.6315
   -0.3785
   -0.1163
    0.0388
    0.1302
    0.2449
   -0.0338
    0.0143
   -0.0025
   -0.2617
   -0.3205
   -0.8453
   -0.9142
   -1.2420
   -0.9991
   -0.8083
   -1.0381
   -0.8498
   -0.8416
   -0.7482
   -0.4638
   -0.2110
    0.1117
    0.1225
    0.4458
    0.0931
   -0.3725
   -0.3195
   -0.4628
   -0.2797
   -0.1540
   -0.1402
   -0.1104
    0.3553
    0.3784
    0.2403
   -0.1229
   -0.8326
   -0.6724
   -0.5116
   -0.5373
   -0.5175
   -0.4535
   -0.5052
   -0.5922
   -0.2790
   -0.6506
   -0.5676
   -0.3379
   -0.6616
   -0.4341
   -0.4711
   -0.3872


ans(:,:,1,1,29) =

   -0.4535
    0.0876
   -0.5834
   -0.8007
   -0.3731
   -0.8942
   -0.8754
    0.3812
   -0.2682
   -0.1920
   -0.5225
   -1.4291
   -1.4880
   -1.1974
   -0.7417
   -0.5955
   -0.0219
   -0.3894
   -0.3146
   -0.4033
   -0.6352
   -0.2580
   -0.1650
   -0.1094
   -0.0388
   -0.1835
   -0.2808
    0.3338
    0.2549
    0.2741
    0.7655
    0.5406
    0.4907
   -0.0954
   -0.8096
   -1.2649
   -0.9160
   -0.4676
   -0.6043
   -0.5653
   -0.8353
   -1.3476
   -1.0094
   -0.9110
   -0.3652
    0.5376
    1.2506
    0.9893
    0.3560
   -0.3763
   -0.3072
   -0.0892
    0.0430
   -0.2015
   -0.3531
    0.3665
    0.4179
    0.4043
   -0.0676
   -1.1630
   -0.9676
   -0.8956
   -0.6063
   -0.4167
   -0.0330
   -0.1171
   -0.3595
   -0.1976
   -0.5339
   -0.1928
   -0.2412
   -0.1263
   -0.2597
   -0.4237
   -0.3609


ans(:,:,1,1,30) =

   -0.9134
   -0.7529
   -0.4249

rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end

sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
{Index exceeds matrix dimensions.
} 
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
iter

iter =

        1000

size(rufrs,3),

ans =

    76

unit=1

unit =

     1


rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end

sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
{Index exceeds matrix dimensions.
} 
sur_set_iter

sur_set_iter =

     0

        if p2==ntrans,
            sur_set_iter = true;
        end
p2

p2 =

     1

iter

iter =

     1

            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
{Index exceeds matrix dimensions.
} 
cufrs{p1}

ans =

  Columns 1 through 7

   -2.4026    0.4306   -0.0067    2.0532    4.2144   -0.9650   -1.0931
   -2.1972    0.8176    0.0192    0.1653    4.2144   -0.8721   -1.0931
   -2.1130    0.8176    0.0192   -1.7078    2.5697   -1.0333   -1.3184
   -1.7759    1.0307   -2.0133    0.3989    2.6532   -1.4897   -1.8108
   -1.2001   -0.5912    1.4741    0.3989   -1.0931   -1.4897   -1.8016
   -1.2138   -0.4253    3.0211    0.6813   -1.2046   -1.4897   -1.7727
   -1.4715   -0.4253    4.8695    2.7609   -1.2046   -1.3888   -1.6304
   -1.8463   -0.3370    6.7797    2.8436   -1.0931   -1.1545   -1.6660
   -2.3005   -0.4048    5.0330    2.7829   -1.0931   -0.9143   -1.6660
   -1.3476   -0.4048    2.7917    2.6139    0.6965   -0.8811   -1.6939
   -0.7892   -0.6488    2.7831    0.4593    0.6965   -0.9528   -1.6939
   -0.7838   -0.6488    2.9796   -1.5240    2.3413   -1.1456   -1.5045
   -1.2764   -0.6488    3.1831    0.3136    2.3413   -1.1456   -1.1918
   -1.3567   -0.6488    3.7578    1.8170    0.5937   -1.1456   -1.1918
   -1.2203   -0.6488    2.6207    1.8170    0.5937   -1.1456   -0.9854
   -1.0992   -0.6488    0.8529    2.1169    2.3142   -1.3884   -0.9854
   -1.0992   -0.6207    0.7997    0.2796    2.0621    0.3229   -0.9027
   -1.0820   -0.6207    2.7123   -1.4471    1.9355   -0.1431   -0.9027
   -1.2159   -0.6207    4.4336   -1.4471    1.9355   -1.2725   -0.9634
   -1.3423   -0.6207    4.4336   -1.5935   -1.5711   -1.2943   -1.1324
   -1.5484       NaN    2.5604    2.1528   -1.5711   -2.4541   -1.3451
   -1.7321       NaN    0.6873    6.1572   -1.5711   -2.3011   -1.3740
   -1.8016       NaN   -1.1859    8.0304   -1.8108   -2.1160   -1.3325
   -1.8950       NaN   -1.1859    8.0304    0.0715   -2.0044   -1.3325
   -1.8950       NaN   -1.1859    4.6763   -0.0219   -1.8977   -1.3325
   -1.7727       NaN   -1.0340    0.9300    0.1596   -1.8977   -1.3325
   -1.7136       NaN   -1.0734   -0.9432    2.1204   -1.8977   -1.3325
   -1.6304       NaN   -1.0734   -0.8200    0.3968   -2.0078   -1.3325
   -1.6931       NaN   -1.0734   -0.8200    0.3968   -1.8731   -1.3325
   -1.6939       NaN   -1.0820   -1.1608    0.3968   -1.5434   -1.5887
   -1.5045   -0.8398   -1.0820    0.7153   -1.2269   -1.0276   -1.6294
   -1.1918   -1.0900   -1.0820    2.6096   -1.4764   -1.6514   -1.6294
   -0.9854   -0.7211   -1.2024    2.6096   -1.4764   -1.2552   -1.5935
   -0.9027   -0.3330   -1.3647    1.8740   -1.2269   -1.0820   -1.5935
   -0.9155   -0.1151   -1.5636    0.5478   -1.0315   -1.3423   -1.3938
   -1.0684   -0.1151   -1.6442   -0.6432   -1.0347   -1.5484   -0.9432
   -1.0684   -0.0600   -1.5985   -0.6432   -1.2640   -1.5495   -0.5595
   -1.2519   -0.0600   -1.6939   -0.2609   -1.6245   -1.6931   -0.5595
   -1.2519   -0.0600   -1.4742   -0.2609   -0.1902   -1.4742   -0.1989
   -1.3451   -0.1268   -0.9854   -0.2609   -0.1902   -0.9854   -0.1989
   -1.3451   -0.1268    0.9705    1.6122   -1.3617   -0.9155       NaN
   -1.3451   -0.1268    0.9705    1.6122   -0.7389   -1.2519       NaN
   -1.3451   -0.0540    2.8436    1.6122    1.6470   -1.3451       NaN
   -1.3451   -0.0540    2.8436    1.6122    6.0950   -1.3451       NaN
   -1.3451   -0.0540    0.9705    1.6122    8.3257   -1.3740       NaN
   -1.2910   -0.0540    0.9366    1.6122    8.3964   -1.3740       NaN
   -1.2910   -0.0540   -0.9366    1.6122    6.1622   -1.3740       NaN
   -1.2910   -0.0600   -0.9366    3.4854    2.6593   -1.3740       NaN
   -1.3740   -0.1327    0.8646    1.6122    2.6593   -1.3740       NaN
   -1.3740   -0.7743    0.8646    1.6122    2.5372   -1.3740       NaN
   -1.3740   -1.4327    0.8646    1.6122    0.6640   -1.3325       NaN
   -1.3325   -1.8291    0.8646   -0.9183    0.6640   -1.3325       NaN
   -1.1743   -1.3567   -1.0085   -2.0992   -1.2091   -1.3325       NaN
   -1.1743   -1.0113   -1.0231   -2.1713   -1.0870   -1.3325       NaN
   -1.3325   -1.0113   -1.0231   -1.6759    0.7831   -1.3325       NaN
   -1.3325   -0.8811   -1.0231   -1.3574    1.1520   -1.3325       NaN
   -1.3325   -1.0449   -1.0085   -1.4616    2.8916   -1.3325       NaN
   -1.3325   -1.0449   -1.0085    0.6965    2.9033   -1.3325       NaN
   -1.3325   -1.3644   -1.0085    0.5347    4.7647   -1.3325       NaN
   -1.3325   -1.3644   -1.0231    0.1673    6.6379   -1.3325       NaN
   -1.3740   -1.1456   -1.0231    0.7372    4.5294   -1.3325       NaN
   -1.5595   -1.1456   -1.0231    2.6525    4.5883   -1.3325       NaN
   -1.5595   -1.3913    2.7232    1.7516    3.2459   -1.3325       NaN
   -1.5595   -1.3644    2.7232    1.4458    2.9150   -1.3325       NaN
   -1.5240   -1.3644    2.7232    1.5342    2.3610   -1.3740       NaN
   -1.5595   -1.8655    4.5963   -1.8463    1.9892   -1.3740       NaN
   -1.5595   -0.2176    0.8501   -1.4715    0.1145   -1.3740       NaN
   -1.5595   -0.1339    0.8501   -1.3107    0.2352   -1.3740       NaN
   -1.5595   -0.2355    0.8501   -1.2429    3.7708   -1.3740       NaN
   -1.5595    0.2348   -1.0231    0.6302    3.4983   -1.3740       NaN
   -1.5595   -1.6384   -1.0231    2.5462    5.7197   -1.3740       NaN
   -1.5240   -1.3863   -1.0231    2.5462    5.0335   -1.3740       NaN
   -1.5240   -1.3863   -1.0231    2.3261    1.6083   -1.3740       NaN
   -1.5240   -1.4667   -1.0231    0.4529    1.3161   -1.3740       NaN
   -1.5240   -1.7397   -1.0231   -1.7759    0.8505   -1.3740       NaN

  Columns 8 through 14

   -1.1724    0.1193   -1.4556   -2.1408   -1.8631   -1.9293    1.1502
   -1.0624    1.2851   -1.4120   -2.0573   -1.8631   -1.9293   -0.7672
   -1.0624    1.6609   -1.9289   -1.9721    0.0101   -1.9293   -0.5014
   -1.0624    1.7424   -1.9289   -1.8539    0.0101   -1.8613   -0.8217
   -1.0624    0.0318   -2.0448   -1.8798    0.0101   -1.8613   -2.4487
   -1.0624   -2.8059   -2.0156   -1.9426    0.0101   -1.6599   -2.1960
   -1.0624   -2.8059   -2.0156   -1.9426   -1.8631   -1.6599   -2.5252
   -1.2203   -2.8059   -2.1408   -1.9426   -1.8631   -1.6995   -2.5252
   -1.2203   -2.8059   -2.0573   -1.9708   -0.1105    0.1736   -2.1366
   -1.2203   -2.2477   -1.9721   -0.4454    0.0101   -0.7764   -2.1366
   -1.2203   -1.9980   -1.8539    0.2794    0.0101   -0.6722   -0.6521
   -1.0202   -2.5164   -1.8798    0.2217    0.0101   -0.6722   -1.2256
   -1.0992   -2.5164   -1.9426    0.3639   -2.1900   -1.7540   -0.6307
   -1.0820   -1.1183   -1.9426   -1.1106   -2.1900   -1.7540   -0.9347
   -1.0820   -1.1796   -1.9426   -1.3647   -2.0857   -1.3253   -2.8277
   -1.0820   -1.2858   -1.9708   -1.7321   -1.7704   -1.3253   -1.9488
   -1.2159   -1.2858   -0.4454    0.2289    0.6697    0.5478   -1.3184
   -1.1859   -3.1801    0.2794    0.2747    3.5844    1.2299   -1.5711
   -1.3338   -2.8059    0.2217    0.1793    3.6613    1.2299   -1.7727
   -1.5484   -1.9436    0.3639    0.6475    4.6094    1.2299   -1.6304
   -1.5273   -1.3025   -1.1106   -0.9366    2.2582   -0.6432   -1.6939
   -1.4784   -0.0519   -1.3647    0.5057    0.6180    1.2299   -1.1918
   -1.5403   -0.5312   -1.7321    0.2682    0.6707    1.2299   -0.9634
   -1.5403   -0.5312    0.2289   -0.4108    0.5308    1.2299   -1.3122
   -1.5403   -0.0186    0.2747   -1.3404    3.8873    1.2299   -1.3740
   -1.5403   -1.5414    0.1793   -3.3339    1.9735    1.6122   -1.3325
   -1.5403   -1.7802    0.6475   -2.9898    5.8483    1.3704   -1.3723
   -1.5403   -2.5250   -0.9366   -0.9399    5.8622    1.3704   -1.3723
   -1.5403   -2.4591    0.5057   -0.9399    5.8265    3.4074   -1.3723
   -1.5403   -0.7596    0.2682   -0.9183    9.5450    1.7404   -1.3723
   -1.6400    1.3236   -0.4108   -0.9183    6.0184    1.7210   -1.3723
   -1.6442    2.4816   -1.3404   -0.7743    6.5072    1.7210   -1.3723
    0.1004    2.7081   -3.3339   -0.7743    2.8436   -0.1522   -1.6294
    0.1596    1.0078   -2.9898   -0.7743   -0.9634   -0.5674   -1.6294
    0.1596   -1.1501   -0.9399   -0.7743   -1.1324   -1.0400   -1.6556
    0.2049    0.1823   -0.9399   -1.4327    0.5609   -1.4001   -1.6556
   -1.6683   -0.2140   -0.9183   -1.4327    0.5609   -1.7364   -1.2411
   -1.6650   -0.0210   -0.9183   -1.8171    0.4739   -1.7364   -1.1608
   -1.5043    2.0009   -0.7743   -1.6745    0.3136   -1.7364   -1.1608
   -1.2257    0.1278   -0.7743   -1.6219   -1.5887   -1.7364   -1.1578
   -1.0085    1.3832   -0.7743   -1.6219    2.1169   -1.7497   -1.1367
   -0.9027    1.6800   -0.7743   -1.6219    2.1528   -1.7497   -0.8126
   -0.9634   -1.1166   -1.4327   -1.7246    2.3525   -1.4287   -0.8126
   -1.0684   -1.3499   -1.4327   -1.7246    2.8031   -1.1412   -0.3728
   -1.2519   -2.3630   -1.8171   -1.7246   -0.9432   -1.4621   -0.2609
   -1.2519   -0.4899   -1.6745   -1.7246   -0.5595    2.2842   -0.3493
   -1.3451   -0.7228   -1.6219   -1.7497   -0.5595    1.9028   -1.4001
   -1.3451   -1.2250   -1.6219   -1.7497    1.3137    1.9028   -1.4287
   -1.3451   -1.2250   -1.6219    0.1745    3.2965    5.4700   -1.4724
   -1.3451   -3.0981   -1.7246    0.4444    5.4205    1.5704   -1.7273
   -1.2910   -3.6566   -1.7246    2.1023    5.4205    1.4290   -1.9218
   -1.2910   -3.6988   -1.7246    2.3477    5.4831    1.4290    0.0210
   -1.2910   -2.6495   -1.7246    0.4746       NaN   -2.3369    0.0318
   -1.2910   -1.8637   -1.7497    0.4746       NaN   -2.3369   -0.1248
   -1.2910   -1.1367   -1.7497   -1.3986       NaN   -2.2361   -0.6433
   -1.3740    1.5003    0.1745   -1.1790    1.7369   -0.3629   -2.5164
   -1.3740    1.8131    0.4444   -1.1790    1.7369   -0.2317   -2.5164
   -1.3740    1.1520    2.1023   -1.1412    1.7369   -0.2317   -2.5164
   -1.3740    0.9902    2.3477   -0.6187    7.3563   -0.2317   -2.5164
   -1.3740       NaN    0.4746   -0.6187    7.3563   -2.1049   -2.5164
   -1.3740       NaN    0.4746   -0.5004    7.1471   -0.2317   -2.9915
   -1.3740       NaN   -1.3986   -0.6666    5.3602   -0.2317   -2.4926
   -1.3740   -1.9938   -1.1790   -0.8830   -0.2593   -0.2317   -2.4926
   -1.3740       NaN   -1.1790   -0.6402       NaN   -0.2317   -2.4926
   -1.3740       NaN   -1.1412   -0.8398       NaN   -2.1049   -2.4926
   -1.3740       NaN   -0.6187    1.4011       NaN   -2.1049   -2.4926
    0.4991       NaN   -0.6187    1.4011       NaN   -1.8487   -2.4926
    0.4991       NaN   -0.5004    1.4011       NaN   -1.8487   -3.0527
    0.4991       NaN   -0.6666       NaN       NaN   -1.8487   -3.0527
    0.4991       NaN   -0.8830       NaN       NaN    0.1458   -3.1801
   -1.3740       NaN   -0.6402       NaN       NaN    0.1458   -2.4621
   -1.3740       NaN   -0.8398       NaN       NaN    0.1458   -1.8679
   -1.3740    1.2329    1.4011       NaN       NaN    0.1458   -2.3422
   -1.3740       NaN    1.4011       NaN       NaN    0.1458   -2.4918
   -1.3740       NaN    1.4011       NaN       NaN    0.1458   -2.4293

  Column 15

   -1.8631
   -0.1105
    0.0101
    0.0101
    0.0101
   -2.1900
   -2.1900
   -2.0857
   -1.7704
    0.6697
    3.5844
    3.6613
    4.6094
    2.2582
    0.6180
    0.6707
    0.5308
    3.8873
    1.9735
    5.8483
    5.8622
    5.8265
    9.5450
    6.0184
    6.5072
    2.8436
   -0.9634
   -1.1324
    0.5609
    0.5609
    0.4739
    0.3136
   -1.5887
    2.1169
    2.1528
    2.3525
    2.8031
   -0.9432
   -0.5595
   -0.5595
    1.3137
    3.2965
    5.4205
    5.4205
    5.4831
       NaN
       NaN
       NaN
    1.7369
    1.7369
    1.7369
    7.3563
    7.3563
    7.1471
    5.3602
   -0.2593
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN
       NaN

whos cufrs{p1}
size( cufrs{p1})

ans =

    75    15

size(cufrs{p1}(:,rand_samp_ind(:,p1,iter)))
{Index exceeds matrix dimensions.
} 
rand_samp_ind(:,p1,iter)))
 rand_samp_ind(:,p1,iter)))
                        |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 

size(rand_samp_ind(:,p1,iter)))
 size(rand_samp_ind(:,p1,iter)))
                              |
{Error: Unbalanced or unexpected parenthesis or bracket.
} 
size(rand_samp_ind(:,p1,iter))

ans =

    10     1

rand_samp_ind(:,p1,iter)

ans =

     8
     6
     9
    18
    12
     3
     4
     6
     3
    18

test_sample_size

test_sample_size =

    10

sample_size

sample_size =

    17    12    33    47    18


wsss = size(rposon,1);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
            rand_samp_ind = zeros(test_sample_size,ntrans,niter);
            for i = 1:ntrans,
                rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
            end
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end

figure
unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(sq(perm_stat(:,unit,x,y,:)))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([1,numel(tbins)])
unit = figure_controls(gcf,unit)
end

unit =

     3


unit =

     4


unit =

     5


unit =

     6


unit =

     7

Enter index #: 29

unit =

    29

Enter index #: 51

unit =

    51

Enter index #: 41

unit =

    41


unit =

    42


unit =

    43


unit =

    44


unit =

    45


unit =

    46


unit =

    47


unit =

    48


unit =

    49


unit =

    50


unit =

    51


unit =

    52


unit =

    53


unit =

    54


unit =

    -1


figure
unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     3


unit =

     4


unit =

     5


unit =

     6


unit =

     7


unit =

     8


unit =

     9


unit =

    10


unit =

    11


unit =

    12


unit =

    13


unit =

    14


unit =

    15


unit =

    16


unit =

    17


unit =

    18


unit =

    19


unit =

    20


unit =

    21


unit =

    22


unit =

    23


unit =

    -1

sps = sort(perm_stat(:,unit,1,5,:),5);
{Subscript indices must either be real positive integers or logicals.
} 
unit = 29

unit =

    29

sps = sort(perm_stat(:,:,1,5,:),5);
whos sps
  Name      Size               Bytes  Class     Attributes

  sps       5-D             45600000  double              

size(sps)

ans =

          75          76           1           1        1000

disp(matlabroot)
/usr/local/share/matlab/R2011b


psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,1,5,:),5);
ucl = sps(:,:,:,:,round(niter*(1-psig)));
lcl = sps(:,:,:,:,round(niter*psig));

unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    -1


unit=2;
while unit~=-1
clf
hold on
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     3


unit =

    -1


unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     3


unit =

     4


unit =

     5


unit =

     6


unit =

     7


unit =

     8


unit =

     9

Enter index #: 29

unit =

    29


unit =

    -1

RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));
thresh_rad = 200;
test_sample_size  = 10;
niter = 5000;
ntrans = 5;
perm_stat = zeros(size(rufrs,1),size(rufrs,3),ntrans,ntrans,niter);
wsur = [];
for i = 1:size(wper,1)
wsur = cat(1,wsur,[wper(i,1):wper(i,2)]');
end
wsss = size(rposon,1);
for unit = 1:size(rufrs,3),
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
iter = 1;
wsur_rand_ind = randi([1,length(wsur)],wsss,niter);
wsursamp = wsur(wsur_rand_ind(:,iter));
wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
wsurufrs = GetSegs(ufrwd(:,unit),...
                   round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                     ./Trial.xyzSampleRate.*newSampleRate)...
                                      -5*newSampleRate),...
                   round(10*newSampleRate));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
rand_samp_ind = zeros(test_sample_size,ntrans,niter);
for i = 1:ntrans,
    rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
end
sur_set_iter = true;
for p1 = 1:ntrans
    for p2 = 1:ntrans
        if p1==ntrans & sur_set_iter,
            wsursamp = wsur(wsur_rand_ind(:,iter));
            wsurpos = myxyz(round((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)./Trial.xyzSampleRate.*newSampleRate),:);
            wsurdist = sqrt(sum((wsurpos-repmat(upos(unit,:),wsss,1)).^2,2));
            wsurufrs = GetSegs(ufrwd(:,unit),...
                               round(((wsursamp+0.5*Trial.xyzSampleRate/newSampleRate)...
                                      ./Trial.xyzSampleRate.*newSampleRate)...
                                     -5*newSampleRate),...
                               round(10*newSampleRate));
            cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
            sample_size = cellfun(@size,cufrs,repmat({2},1,ntrans));
            rand_samp_ind = zeros(test_sample_size,ntrans,niter);
            for i = 1:ntrans,
                rand_samp_ind(:,i,:) = randi([1,sample_size(i)],test_sample_size,1,niter);
            end
            sur_set_iter = false;
        end
        if p2==ntrans,
            sur_set_iter = true;
        end
        for iter = 1:niter,
            perm_stat(:,unit,p1,p2,iter) = nanmean(cat(2,cufrs{p1}(:,rand_samp_ind(:,p1,iter)),...
                                                       cufrs{p2}(:,rand_samp_ind(:,p2,iter))),2);
        end
    end
end
end

psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,1,5,:),5);
ucl = max(sps(35:40,:,:,:,round(niter*(1-psig))));
lcl = max(sps(35:40,:,:,:,round(niter*psig)));
figure
unit=2;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
Lines([],ucl(unit),'r')
Lines([],lcl(unit),'r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

ans =

  277.0726


ans =

  278.0726


ans =

  281.0726


ans =

  282.0726


ans =

  285.0726


ans =

  286.0726


ans =

  289.0726


ans =

  290.0726


ans =

  293.0726


ans =

  294.0726


ans =

  297.0726


ans =

  298.0726


ans =

  301.0726


ans =

  302.0726


ans =

  305.0726


ans =

  306.0726


ans =

  309.0726


ans =

  310.0726


ans =

  313.0726


ans =

  314.0726


ans =

  317.0726


ans =

  318.0726


ans =

  321.0726


ans =

  322.0726


ans =

  325.0726


ans =

  326.0726


ans =

  329.0726


ans =

  330.0726


ans =

  333.0726


ans =

  334.0726


ans =

  337.0726


ans =

  338.0726


ans =

  341.0726


ans =

  342.0726


ans =

  345.0726


ans =

  346.0726


ans =

  349.0726


ans =

  350.0726


ans =

  353.0726


ans =

  354.0726


ans =

  357.0726


ans =

  358.0726


ans =

  361.0726


ans =

  362.0726


ans =

  365.0726


ans =

  366.0726


ans =

  369.0726


ans =

  370.0726


ans =

  373.0726


ans =

  374.0726

{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 

unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
Lines([],ucl(unit),'r');
Lines([],lcl(unit),'r');
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     2


unit =

     3


unit =

     4


unit =

     5


unit =

     6


unit =

     7


unit =

     8

Enter index #: 29

unit =

    29


unit =

    -1


psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,1,5,:),5);
ucl = sps(:,:,:,:,round(niter*(1-psig)));
lcl = sps(:,:,:,:,round(niter*psig));

unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

     2


unit =

     3


unit =

    -1

figure,plot(sq(perm_stat(:,29,1,1,:)-perm_stat(:,29,5,5,:)))
psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,5,5,:),5);
ucl = sps(:,:,:,:,round(niter*(1-psig)));
lcl = sps(:,:,:,:,round(niter*psig));

unit=1;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end
Enter index #: 29

unit =

    29

Enter index #: 6

unit =

     6


unit =

     7


unit =

     8


unit =

     9


unit =

    10


unit =

    11


unit =

    12


unit =

    13


unit =

    14


unit =

    15


unit =

    16


unit =

    17

Enter index #: 19

unit =

    19

{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 
unit=20;
while unit~=-1
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    21


unit =

    22


unit =

    -1

unit=22;
while unit~=-1
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
if x==y,
plot(tbins,nanmean(cufrs{x},2),'c')
end
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    23


unit =

    24


unit =

    25


unit =

    26

Enter index #: 28

unit =

    28


unit =

    29


unit =

    -1

cufrs{1}

ans =

  Columns 1 through 7

         0         0    9.3657         0         0         0         0
         0         0   20.6046         0         0         0         0
         0         0   16.8583         0         0         0         0
         0         0   11.2388         0         0         0         0
         0         0   11.2388         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0    1.8731         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    7.4926         0         0         0         0         0
         0    7.4926         0         0         0    3.7463         0
         0    7.4926         0         0         0    3.7463         0
         0    5.6194         0         0         0    3.7463         0
         0         0         0         0         0    3.7463         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Column 8

         0
         0
         0
    1.8731
    5.6194
    5.6194
    5.6194
    3.7463
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0

nanmean(cufrs{1},2)

ans =

    1.1707
    2.5756
    2.1073
    1.6390
    2.1073
    0.7024
    0.7024
    0.4683
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
    0.2341
    0.7024
    0.7024
    0.7024
    0.7024
    0.9366
    1.4049
    1.4049
    1.1707
    0.4683
         0
         0
         0

cufrs{1}

ans =

  Columns 1 through 7

         0         0    9.3657         0         0         0         0
         0         0   20.6046         0         0         0         0
         0         0   16.8583         0         0         0         0
         0         0   11.2388         0         0         0         0
         0         0   11.2388         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0    1.8731         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    5.6194         0         0         0         0         0
         0    7.4926         0         0         0         0         0
         0    7.4926         0         0         0    3.7463         0
         0    7.4926         0         0         0    3.7463         0
         0    5.6194         0         0         0    3.7463         0
         0         0         0         0         0    3.7463         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0
         0         0         0         0         0         0         0

  Column 8

         0
         0
         0
    1.8731
    5.6194
    5.6194
    5.6194
    3.7463
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0



unit = 
 unit = 
       |
{Error: Expression or statement is incomplete or incorrect.
} 
unit

unit =

    -1

unit = 29

unit =

    29


cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);

unit=29;
while unit~=-1
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
if x==y,
plot(tbins,nanmean(cufrs{x},2),'c')
end
plot(tbins,ucl(:,unit),'-r')
plot(tbins,lcl(:,unit),'-r')
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    30


unit =

    29


unit =

    28


unit =

    29


unit =

    30


unit =

    31


unit =

    32


unit =

    -1

[countw,bin] = hist(sq(perm_stat(37,unit,5,5,:)),1000);
{Subscript indices must either be real positive integers or logicals.
} 
unit = 32

unit =

    32

[countw,bin] = hist(sq(perm_stat(37,unit,5,5,:)),1000);
[countr,bin1] = hist(sq(perm_stat(37,unit,1,1,:)),1000);
figure,
plot(bin,countw,bin1,countr)
[countp,bin2] = hist(sq(perm_stat(37,unit,5,1,:)),1000);
figure,
plot(bin,countw,bin1,countr,bin2,countp)
diff(wper,1,2)

ans =

    63
   102
    64
   194
   240
   136
   104
    80
   184
   200
    96
    48
   104
   128
    99
    98
    96
    66
    64
   120
    48
    64
   176
   296
    64
    56
   136
   128
   152
   272
    48
   232
    48
    48
   109
   116
   185
   162
   144
   160
    56
   208
   208
   264
   144
   131
   272
    72
   102
    44
   120
   107
   248
   117
    30
   143
   240
   374
   261
    56
   128
   296
   248
   214
   135
   104
   280
    62
    64
   119
    92
   168
    56
   141
   568
   128
   191
   113
   190
   208
    56
   392
    96
    48
   144
    72
   384
    88
    94
    68
   136
   144
    99
   124
   128
   118
    78
    80
   440
    68
   111
   176
   168
   144
    54
    64
   102
   155
   256
   144
    72
    64
   248
    72
    56
   216
   160
    72
    88
    73
    64
    41
   168
   141
   112
   141
    56
   176
   232
   108
    82
    64
   248
   176
   133
   168
   208
   119
   129
    75
   112
    72
   152
    48
   204
   103
   152
   136
    58
   111
   131
    72
   200
    96
   168
   188
   144
   182
   176
   270
    48
   144
   136
   120
    88
   117
    88
   168
   200
   304
   125
   120
   312
    56
   104
   144
    96
   208
   152
    64
   112
    64
   107
    89
    48
    85
   104
    72
   120
   104
    96
   192
   144
   104
   200
   151
   328
   226
    44
   224
   112
   189
   146
   144
   214
    64
   144
    56
    88
    88
   144
   160
   208
    72
   104
    64
   200
   168
    64
   143
    48
    80
   120
   128
   128
   320
   128
    56
    48
    64
    56
   160
   112
    64
   112
    80
   264
   168
    64
    56
    96
   319
   233
   112
   136
    96
   120
   304
   120
     4
   161
   288
   293
   104
   104
   168
   144
   296
    59
   331
    48
   224
   286
    95
   136
    86
    41
   128
   120
   160
    48
    56
   272

figure,hist(diff(wper,1,2)/120)

psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,1,5,:),5);
ucl = max(sps(35:40,:,:,:,round(niter*(1-psig))));
lcl = max(sps(35:40,:,:,:,round(niter*psig)));

psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,5,5,:),5);
ucl = max(sps(35:40,:,:,:,round(niter*(1-psig))));
lcl = max(sps(35:40,:,:,:,round(niter*psig)));

unit=29;
while unit~=-1
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
if x==y,
plot(tbins,nanmean(cufrs{x},2),'c')
end
Lines([],ucl(unit),'r');
Lines([],lcl(unit),'r');
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end
Enter index #: 32

unit =

    32


unit =

    33


unit =

    34


unit =

    35


unit =

    36


unit =

    -1


psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,5,5,:),5);
ucl = max(sps(35:40,:,:,:,round(niter*(1-psig))));
lcl = min(sps(35:40,:,:,:,round(niter*psig)));
figure
unit=29;
while unit~=-1
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
if x==y,
plot(tbins,nanmean(cufrs{x},2),'c')
end
Lines([],ucl(unit),'r');
Lines([],lcl(unit),'r');
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    30


unit =

    31


unit =

    32


unit =

    33


unit =

    34


unit =

    35

{Error using waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted

Error in figure_controls (line 3)
waitforbuttonpress
} 

psig = .05

psig =

    0.0500

sps = sort(perm_stat(:,:,5,5,:),5);
ucl = max(sps(35:40,:,:,:,round(niter*(1-psig))));
lcl = min(sps(35:40,:,:,:,round(niter*psig)));

figure
unit=29;
while unit~=-1
rwdist = sqrt(sum((rposon-repmat(upos(unit,:),size(rposon,1),1)).^2,2));
rwdisto = sqrt(sum((rposoff-repmat(upos(unit,:),size(rposoff,1),1)).^2,2));
wwdist = sqrt(sum((wposon-repmat(upos(unit,:),size(wposon,1),1)).^2,2));
wwdisto = sqrt(sum((wposoff-repmat(upos(unit,:),size(wposoff,1),1)).^2,2));
cufrs{1} = rufrs(:,rwdist<thresh_rad,unit);
cufrs{2} = dufrs(:,rwdisto<thresh_rad,unit);
cufrs{3} = wufrs(:,wwdist<thresh_rad,unit);
cufrs{4} = sufrs(:,wwdisto<thresh_rad,unit);
cufrs{5} = wsurufrs(:,wsurdist<thresh_rad);
clf
for x = 1:ntrans,
for y = 1:ntrans,
sph(x,y) = subplotfit(x,y,[ntrans,ntrans]);
plot(tbins,mean(perm_stat(:,unit,x,y,:),5))
hold on
if x==y,
plot(tbins,nanmean(cufrs{x},2),'c')
end
Lines([],ucl(unit),'r');
Lines([],lcl(unit),'r');
end
end
title(num2str(unit))
linkaxes(sph(:),'xy')
xlim([tbins(1),tbins(end)])
unit = figure_controls(gcf,unit)
end

unit =

    30


unit =

    31


unit =

    32


unit =

    33


unit =

    34


unit =

    35


unit =

    36


unit =

    37


unit =

    -1

whos lcl
  Name      Size            Bytes  Class     Attributes

  lcl       1x76              608  double              

lcl(37)

ans =

   -2.7800

ucl(37)

ans =

