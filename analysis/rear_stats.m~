function rear_stats(Session,ccg_name)


Session = MTASession('jg05-20120310',{'CluRes'});

numClu = size(Session.map,1);

ccg_name = 'rdpf_nrhp_sur_par1';

load([Session.spath.analysis Session.filebase '.ccg.' ccg_name '.mat'])

fccg = Bccg.filter(gausswin(9));

%% Compute main CCG statistics
fconf = 0.95;

upbd = sq(max(fccg,[],2));
supbd = sort(upbd,1);
upperConfidenceBoundary = sq(supbd(round(size(fccg,1)*fconf),:,:));

lwbd = sq(min(fccg,[],2));
slwbd = sort(lwbd,1,'descend');
lowerConfidenceBoundary = sq(slwbd(round(size(fccg,1)*fconf),:,:));

srf = sq(sort(fccg(:,:,1,:),1));
p95 = sq(srf(round(size(fccg,1)*fconf),:,:));
dsrf = sq(sort(fccg(:,:,1,:),1,'descend'));
p05 = sq(dsrf(round(size(fccg,1)*fconf),:,:));

p_ron  = sq(sum(repmat(rfccg(:,1,:),size(fccg,1),1)>fccg(:,:,1,:),1)./size(fccg,1));
p_roff = sq(sum(repmat(rfccg(:,1,:),size(fccg,1),1)>fccg(:,:,2,:),1)./size(fccg,1));


%% Compute spiking significance bins

RearSpkSig = zeros(size(numClu,1),length(tbin),2,2);
for b = 1:2,
    for unit = 1:size(numClu,1),
        for t = 2:length(tbin),
            RearSpkSig(unit,t,b,1) = RearSpkSig(unit,t-1,b,1) + sum(rfccg(t,b,unit)<lowerConfidenceBoundary(unit));
            RearSpkSig(unit,t,b,2) = RearSpkSig(unit,t-1,b,2) + sum(rfccg(t,b,unit)>upperConfidenceBoundary(unit));
        end
    end
end

%% Compute max/min spiking sig time lag
rssi = cat(2,zeros(size(numClu,1),1,2,2),diff(RearSpkSig,[],2));
rssi(rssi>0) = 1;
mmstl = zeros(size(numClu,1),2,2,2);
for b = 1:2,
    for unit = 1:size(numClu,1),
        if ~isempty(min(rfccg(rssi(unit,:,b,1)==1,b,unit))),
            [mmstl(unit,1,b,1),mmstl(unit,2,b,1)] = min(rfccg(rssi(unit,:,b,1)==1,b,unit));
        end
        if ~isempty(max(rfccg(rssi(unit,:,b,2)==1,b,unit))),
            [mmstl(unit,1,b,2),mmstl(unit,2,b,2)] = max(rfccg(rssi(unit,:,b,2)==1,b,unit));
        end
    end
end

[mmstl(:,1,:,1),mmstl(:,2,:,1)] = min(rfccg(rssi(:,:,:,1)==1,:,:));
[mmstl(:,1,:,2),mmstl(:,2,:,2)] = max(rfccg(rssi(:,:,:,2)==1,:,:));


