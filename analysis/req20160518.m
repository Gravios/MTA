%function req20160518(varargin)
%function req20160518(varargin)
%defargs = struct('fetSet',   'fet_tsne_rev15',...
%                 'mode',     'display',...
%                 'tag_preprocessing',  '+seh+',...
%                 'tag_postprocessing', '_PP',...
%                 'slist',   {{'hand_labeled_jg';'hand_labeled_Ed'}},...
%                 'sampleRate', 12,...
%                 'nNeurons',   100,...
%                 'nIter',      100,...
%                 'states',   {{'walk','rear','turn','pause','groom','sit'}},...
%                 'rndMethod', 'WSBNT',...
%                 'norm',      true,...
%                 'mref',      true...
%);

defargs = struct('fetSet',   'fet_tsne_rev15',...
                 'mode',     'display',...
                 'tag_preprocessing',  '+seh+',...
                 'tag_postprocessing', '_PP',...
                 'slist',   {{'hand_labeled_jg';'hand_labeled_Ed'}},...
                 'sampleRate', 12,...
                 'nNeurons',   100,...
                 'nIter',      100,...
                 'states',   {{'walk','rear','turn','pause','groom','sit'}},...
                 'rndMethod', 'WSBNT',...
                 'norm',      true,...
                 'mref',      true...
);

varargin = {};

[fetSet, mode, tag_preprocessing, tag_postprocessing, slist, sampleRate, nNeurons, nIter,...
 states, rndMethod, norm, mref] = DefaultArgs(varargin,defargs,'--struct');


%% Accumulate Stats --------------------------------------------------------------------------

% within animal / within labeler
wawl = {}
for rli = 1:numel(slist),
    SesList = SessionList(slist{rli});
    for sli = 1:numel(SesList),
        wawl{end+1,1} = [SesList(sli).sessionName '.' SesList(sli).mazeName '.' ...
                         SesList(sli).trialName   '.' SesList(sli).stcMode];
        model = ['MTAC_BATCH-' tag_preprocessing fetSet ...
                 '_SR_' num2str(sampleRate) ...
                 '_NORM_' num2str(norm) ...         
                 '_REF_' SesList(sli).sessionName '.' ...
                         SesList(sli).mazeName '.' ...
                         SesList(sli).trialName ...
                 '_STC_' SesList(sli).stcMode ...
                 '_NN_' num2str(nNeurons) ...
                 '_NI_' num2str(nIter) ...         
                 '_NN_multiPN_RAND_' rndMethod];
        load(fullfile(MTASession().path.data,'analysis',...
                      [slist{rli},'-',model,tag_postprocessing,'-map2ref','.mat']));
        wawl{end,2} = ls{sli};
        %wawl{end,3} = d_state{sli};
    end
end

% different animal / within labeler
dawl = {};
%wadl = {};
for rli = 1:numel(slist),
    SesList = SessionList(slist{rli});
    for sli = 1:numel(SesList),

        dawl(end+1:end+3,1) = cellfun(@horzcat,...
          repmat({[SesList(sli).sessionName,'.',SesList(sli).mazeName,'.',...
                   SesList(sli).trialName,'.',SesList(sli).stcMode,'-']},...
                 1,numel(SesList)-1),...
          arrayfun(@(s)[s.sessionName,'.',s.mazeName,'.',s.trialName,'.',s.stcMode],...
                   SesList(~ismember(1:numel(SesList),sli)),'uniformoutput',false),...
              'uniformoutput',false...
        );
        
        model = ['MTAC_BATCH-' tag_preprocessing fetSet ...
                 '_SR_' num2str(sampleRate) ...
                 '_NORM_' num2str(norm) ...         
                 '_REF_' SesList(sli).sessionName '.' ...
                         SesList(sli).mazeName '.' ...
                         SesList(sli).trialName ...
                 '_STC_' SesList(sli).stcMode ...
                 '_NN_' num2str(nNeurons) ...
                 '_NI_' num2str(nIter) ...         
                 '_NN_multiPN_RAND_' rndMethod];

        load(fullfile(MTASession().path.data,'analysis',...
                      [slist{rli},'-',model,tag_postprocessing,'-map2ref','.mat']));

        dawl(end-2:end,2) = ls(~ismember(1:numel(SesList),sli));
        %dawl(end-2:end,3) = d_state(~ismember(1:numel(SesList),sli));
        
        bad_dawl = find(cellfun(@numel,regexp(dawl(end-2:end,1),SesList(sli).sessionName(1:4)))>1);
        if ~isempty(bad_dawl),
            %wadl = cat(1,wadl,dawl(size(dawl,1)-3+bad_dawl,:));
            dawl(size(dawl,1)-3+bad_dawl,:)=[];
        end
    end
end

% different animal / different labeler

dadl = {};
tsc = [];
wadl = {};

for s = 1:2,
    SesList = SessionList(slist{s});        
    for r = 1:2,
        if s==r, continue,end
        RefList = SessionList(slist{r});

        for rli = 1:numel(RefList),

            RefTrial = MTATrial.validate(RefList(rli));
            RefTrial.stc.load(RefTrial,RefList(rli).stcMode);
            s = 1;
            tsc(end+1:end+numel(SesList),s) = repmat(sum(diff([RefTrial.stc{states{s}}.data],1,2)),numel(SesList),1);
            for s =2:numel(states),
                tsc(end-numel(SesList)+1:end,s) = repmat(sum(diff([RefTrial.stc{states{s}}.data],1,2)),numel(SesList),1);
            end
            
            dadl(end+1:end+numel(SesList),1) = ...
                cellfun(@horzcat,...
                        repmat({[RefList(rli).sessionName,'.',RefList(rli).mazeName,'.',...
                                RefList(rli).trialName,'.',RefList(rli).stcMode,'-']},...
                               numel(RefList),1),...
                        arrayfun(@(s)[s.sessionName,'.',s.mazeName,'.',s.trialName,'.',s.stcMode],...
                                 SesList(:),'uniformoutput',false),...
                        'uniformoutput',false...
                        );

            
            model = ['MTAC_BATCH-' tag_preprocessing fetSet ...
                     '_SR_' num2str(sampleRate) ...
                     '_NORM_' num2str(norm) ...         
                     '_REF_' RefList(rli).sessionName '.' ...
                     RefList(rli).mazeName '.' ...
                     RefList(rli).trialName ...
                     '_STC_' RefList(rli).stcMode ...
                     '_NN_' num2str(nNeurons) ...
                     '_NI_' num2str(nIter) ...         
                     '_NN_multiPN_RAND_' rndMethod];

            load(fullfile(MTASession().path.data,'analysis',...
                          [slist{1},'-',model,tag_postprocessing,'-map2ref','.mat']));

            dadl(end-numel(SesList)+1:end,2) = ls;
            %dadl(end-numel(SesList)+1:end,3) = d_state;

            bad_dadl = find(cellfun(@numel,regexp(dadl(end-numel(SesList)+1:end,1),RefList(rli).sessionName(1:4)))>1);
            if ~isempty(bad_dadl),
                wadl = cat(1,wadl,dadl(size(dadl,1)-numel(SesList)+bad_dadl,:));
                dadl(size(dadl,1)-numel(SesList)+bad_dadl,:)=[];
                tsc(size(dadl,1)-numel(SesList)+bad_dadl,:)=[];
            end
        end
        
    end
end
wadl(7:end,:) = [];



%% FIGURES -------------------------------------------------------------------------------------------------

fig.w = 6;
fig.h = 4;
fig.units = 'centimeters';

ax.w = 4;
ax.h = 3;
ax.units = 'centimeters';


% Sup figure 2.2 - labeling sensitivity 
% data
dat = [cell2mat(cellfun(@(x)x.precision,wawl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.precision,wadl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.precision,dadl(:,2),'uniformoutput',false)) ...
];
grp = [repmat(1:3:3*6,[size(cell2mat(cellfun(@(x)x.precision,wawl(:,2),'uniformoutput',false)),1),1]);...
       repmat(2:3:3*6+1,[size(cell2mat(cellfun(@(x)x.precision,wadl(:,2),'uniformoutput',false)),1),1]);...
       repmat(3:3:3*6+2,[size(cell2mat(cellfun(@(x)x.precision,dadl(:,2),'uniformoutput',false)),1),1]) ...
];
% setup figure
hfig = figure(9302);
clf
hold on
% preprocess figure
set(hfig,'PaperPositionMode','auto');
set(hfig,'units',fig.units);
set(hfig,'Position',[0,0,fig.w,fig.h])
% plot figure
boxplot(dat(:),grp(:));
h = findobj(gca,'Tag','Box');
for j=1:length(h)
    patch(get(h(j),'XData'),get(h(j),'YData'),[0.5,1,0.75].*double([rem(j,3)==1,rem(j,3)==2,rem(j,3)==0]),'FaceAlpha',.5);
end
boxplot(dat(:),grp(:));
% format figure
title('Precision')
ylim([10,100]);
grid('on');
set(gca,'gridlinestyle',':')
set(gca,'units',ax.units);
set(gca,'Position',[hfig.Position(3)/2-ax.w/2,...
                   hfig.Position(4)/2-ax.h/2,...
                   ax.w,...
                   ax.h])
set(gca,'XTick',[2:3:18]);
set(gca,'YTick',[10:10:100]);
set(gca,'box','on')    
set(findall(gcf,'-property','FontSize'),'FontSize',8)
% print figure
print(hfig,'-depsc2',fullfile(getenv('PROJECT'),'manuscripts/man2015-jgEd-MoCap/Figures/Figure_2',...
                     ['fig2_labeling_precision-',tag_preprocessing,fetSet,tag_postprocessing,'.eps']))


% Sup figure 2.3 - labeling sensitivity 
% data
dat = [cell2mat(cellfun(@(x)x.sensitivity,wawl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.sensitivity,wadl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.sensitivity,dadl(:,2),'uniformoutput',false)) ...
];
% setup figure
hfig = figure(9302);
clf
% preprocess figure
set(hfig,'PaperPositionMode','auto');
set(hfig,'units',fig.units);
set(hfig,'Position',[0,0,fig.w,fig.h])
% plot figure
hold on
boxplot(dat(:),grp(:));
h = findobj(gca,'Tag','Box');
for j=1:length(h),
    patch(get(h(j),'XData'),get(h(j),'YData'),[0.5,1,0.75].*double([rem(j,3)==1,rem(j,3)==2,rem(j,3)==0]),'FaceAlpha',.5);
end
boxplot(dat(:),grp(:));
% format axis
title('Sensitivity')
ylim([0,100]);
grid('on');
set(gca,'gridlinestyle',':')
set(gca,'units',ax.units);
set(gca,'Position',[hfig.Position(3)/2-ax.w/2,...
                   hfig.Position(4)/2-ax.h/2,...
                   ax.w,...
                   ax.h])
set(gca,'box','on')    
set(gca,'XTick',[2:3:18]);
set(gca,'YTick',[10:10:100]);
set(findall(gcf,'-property','FontSize'),'FontSize',8)
% print figure
print(hfig,'-depsc2',fullfile(getenv('PROJECT'),'manuscripts/man2015-jgEd-MoCap/Figures/Figure_2',...
                     ['fig2_labeling_sensitivity-',tag_preprocessing,fetSet,tag_postprocessing,'.eps']))



% figure 2 F - labeling accuracy 
% data
dat = [cell2mat(cellfun(@(x)x.accuracy,wawl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.accuracy,wadl(:,2),'uniformoutput',false));...
       cell2mat(cellfun(@(x)x.accuracy,dadl(:,2),'uniformoutput',false)) ...
].*100;
grp = [repmat(1,[size(cell2mat(cellfun(@(x)x.accuracy,wawl(:,2),'uniformoutput',false)),1),1]);...
       repmat(2,[size(cell2mat(cellfun(@(x)x.accuracy,wadl(:,2),'uniformoutput',false)),1),1]);...
       repmat(3,[size(cell2mat(cellfun(@(x)x.accuracy,dadl(:,2),'uniformoutput',false)),1),1]) ...
];
% setup figure
hfig = figure(9302);clf;
% preprocess figure
set(hfig,'PaperPositionMode','auto');
set(hfig,'units',fig.units);
set(hfig,'Position',[0,0,fig.w,fig.h])
% plot axis
hold on
boxplot(dat(:),grp(:));
h = findobj(gca,'Tag','Box');
for j=1:length(h)
    patch(get(h(j),'XData'),get(h(j),'YData'),...
          [0.5,1,0.75].*double([rem(j,3)==1,rem(j,3)==2,rem(j,3)==0]),...
          'FaceAlpha',0.5);
end
boxplot(dat(:),grp(:));
% format figure
title('Accuracy')
ylim([50,100]);
 grid('on');
set(gca,'gridlinestyle',':')
set(gca,'units',ax.units);
set(gca,'Position',[hfig.Position(3)/2-ax.w/2,...
                   hfig.Position(4)/2-ax.h/2,...
                   ax.w,...
                   ax.h])
set(gca,'XTick',[1:3]);
set(gca,'YTick',[50:5:100]);
set(gca,'box','on')    
set(findall(gcf,'-property','FontSize'),'FontSize',8)
% print figure
print(hfig,'-depsc2',fullfile(getenv('PROJECT'),'manuscripts/man2015-jgEd-MoCap/Figures/Figure_2',...
                     ['fig2_labeling_accuracy-',tag_preprocessing,fetSet,tag_postprocessing,'.eps']))
